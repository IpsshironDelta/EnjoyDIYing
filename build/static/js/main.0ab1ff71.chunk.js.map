{"version":3,"sources":["firebase.js","components/hooks/loginUseAuth.js","components/HeaderTitle.js","components/Login/LoginButton.js","components/Login/LoginHeader.js","components/Login/Login.js","components/hooks/useAuth.js","components/SignUp/SignUpButton.js","components/SignUp/SignUpHeader.js","components/SignUp/SignUp.js","components/hooks/passWordReSetting.js","components/PasswordReset/PasswordResetButton.js","components/PasswordReset/PasswordResetHeader.js","components/PasswordReset/PasswordReset.js","components/hooks/logOutUseAuth.js","components/hooks/useProfile.js","components/MainPage/MainPageButton.js","components/MainPage/MainPageHeader.js","components/MainPage/MainPageImageButton.js","components/MainPage/MainPageImageList.js","components/MainPage/MainPageImageModule.js","components/MainPage/MainPageAccordion.js","components/Footer.js","components/Adsense.js","components/MainPage/MainPage.js","components/hooks/getuseAuth.js","components/PostPage/PostPageButton.js","components/PostPage/PostPageHeader.js","actions/memberAction.js","store/index.js","components/PostPage/PostPage.js","components/CategoryList/CategoryListButton.js","components/CategoryList/CategoryListHeader.js","components/CategoryList/CategoryListAccordion.js","components/CategoryList/CategoryList.js","components/DetailList/DetailListButton.js","components/DetailList/DetailListHeader.js","components/DetailList/DetailListImageButton.js","components/DetailList/DetailListImageList.js","components/DetailList/DetailList.js","components/RecipDetails/RecipeDetailsButton.js","components/RecipDetails/RecipeDetailsHeader.js","components/RecipDetails/RecipeDetailsImageButton.js","components/RecipDetails/RecipeDetailsImageModule.js","components/RecipDetails/RecipeDetailsMessage.js","components/RecipDetails/RecipeDetails.js","components/RecipDetailsEdit/RecipeDetailsEditButton.js","components/RecipDetailsEdit/RecipeDetailsEditHeader.js","components/RecipDetailsEdit/RecipeDetailsEdit.js","components/Profiles/ProfilesImageButton.js","components/Profiles/ProfilesImageList.js","components/Profiles/BookmarkImageList.js","components/Profiles/GoodImageList.js","components/Profiles/ProfilesButton.js","components/Profiles/ProfilesHeader.js","components/Profiles/Profiles.js","components/ProfileEdit/ProfileEditButton.js","components/ProfileEdit/ProfileEditHeader.js","components/ProfileEdit/ProfileEditSelectBox.js","components/ProfileEdit/ProfileEdit.js","components/UserRegistration/URButton.js","components/UserRegistration/URHeader.js","components/UserRegistration/URTextField.js","components/UserRegistration/URSelectBox.js","components/UserRegistration/UserRegistration.js","components/UserRegistration/UserRegistrationReview.js","components/UserRegistration/UserRegistrationComplete.js","components/Message/MessageInput.js","components/Message/Message.js","components/Question/QuestionButton.js","components/Question/QuestionHeader.js","components/Question/Question.js","components/Infomation/InfomationButton.js","components/Infomation/InfomationHeader.js","components/Infomation/Infomation.js","components/Inquiry/InquiryButton.js","components/Inquiry/InquiryHeader.js","components/Inquiry/Inquiry.js","components/Terms/TermsButton.js","components/Terms/TermsHeader.js","components/Terms/Terms.js","components/PrivacyPolicy/PrivacyPolicyButton.js","components/PrivacyPolicy/PrivacyPolicyHeader.js","components/PrivacyPolicy/PrivacyPolicy.js","components/test/test.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getFirestore","fireauth","getAuth","firestorage","getStorage","db","firebaseApp","HeaderTitle","props","Typography","component","variant","sx","noWrap","color","gutterBottom","front_text","text","LoginButton","history","useHistory","Button","size","startIcon","disabled","disableElevation","onClick","push","link","LoginHeader","Box","flexGrow","AppBar","position","Toolbar","display","xs","sm","md","background","theme","createTheme","shadows","palette","primary","main","contrastText","default","Login","useState","email","setEmail","password","setPassword","success","setSuccess","error","setError","login","signInWithEmailAndPassword","then","console","log","setTimeout","catch","err","message","useLogin","ThemeProvider","Container","maxWidth","CssBaseline","marginTop","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","event","preventDefault","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","e","target","type","mb","Alert","severity","Grid","container","item","Link","href","SignUpButton","SignUpHeader","Signup","signup","createUserWithEmailAndPassword","res","user","useSignup","justifyContent","PasswordResetButton","PasswordResetHeader","PasswordReset","passwordReset","sendPasswordResetEmail","usePasswordReset","useLogout","logout","signOut","useProfile","profile","setProfile","useEffect","auth","onAuthStateChanged","a","userUid","uid","q","query","collection","where","getDocs","forEach","doc","docData","data","MainPageButton","setAnchorEl","setOpen","PrimarySearchAppBar","anchorEl","Boolean","IconButton","currentTarget","src","image","alt","ImageButton","styled","ButtonBase","height","breakpoints","down","width","zIndex","opacity","border","ImageSrc","left","right","top","bottom","backgroundSize","backgroundPosition","ImageBackdrop","common","white","backgroundColor","transition","transitions","create","MainPageImageButton","setTitleName","recipeNum","info","recipenum","flexWrap","minWidth","focusRipple","style","title","backgroundImage","imgURL","subtitle","ImageListItemBar","className","collectionRecipeName","Item","Paper","mode","typography","body2","padding","spacing","textAlign","secondary","MainPageImageList","recipe","setRecipe","recipeAry","goodBuffCount","bookmarkBuffCount","querySnapshot","document","docGoodRef","documentGood","updateDoc","good","documentBookMark","bookmark","sort","first","second","format","createdAt","toDate","fetchRecipeData","map","my","gap","url","ml","fontSize","p","borderRadius","memo","align","Stack","direction","divider","Divider","orientation","flexItem","Number","cost","toLocaleString","pt","pb","pl","pr","borderTop","borderBottom","borderLeft","borderRight","detail","underline","collectionCategoryName","Accordion","disableGutters","elevation","square","AccordionSummary","expandIcon","transform","marginLeft","AccordionDetails","MuiAccordionDetails","CustomizedAccordions","expanded","setExpanded","categorys","setCategorys","setDetail","categoryAry","detailAry","includes","category","unshift","panel","newExpanded","textColor","footerTheme","Footer","py","textDecoration","Date","getFullYear","AdsCard","window","adsbygoogle","process","REACT_APP_GOOGLE_AD_CLIENT","REACT_APP_GOOGLE_AD_SLOT","useStyles","makeStyles","rectangle","TabPanel","children","index","other","role","hidden","a11yProps","withRouter","ref","filepath","React","setValue","borderWidth","overflow","borderColor","Tabs","newValue","Tab","useUser","currentUser","userInfo","accessToken","PostPageButton","UPDATE_FORM","UPDATE_RECIPE","updateForm","form","payload","initialState","address","addressErrorMS","password1","password2","passwordErrorMS","nicknameErrorMS","location","locationErrorMS","loginUserUID","displayName","recipetitle","productionCost","productionPeriod","productionMemo","recipeimage","documentID","recipeUID","commentCount","photoURL","photoFileData","phoneNumber","store","createStore","state","action","PostPage","getState","setRecipeTitle","productioncost","setProductionCost","productionperiod","setProductionPeriod","productionmemo","setProductionMemo","errormessage","setErrorMessage","setImage","selectcategory","setSelectCategory","selectdetail","setSelectDetail","fetchDetailData","CardMedia","URL","createObjectURL","accept","files","htmlFor","defaultValue","FormControl","InputLabel","Select","labelId","MenuItem","multiline","rows","docRef","recipeNo","Math","floor","random","imageRef","uploadBytes","getDownloadURL","addDoc","Timestamp","fromDate","period","filename","CategoryListButton","CategoryListHeader","CategoryListAccordion","DetailListButton","DetailListHeader","DetailListImageButton","DetailListImageList","GetDetail","GetCategory","decodeURI","pathname","split","getcategory","setGetCategory","getdetail","setGetDetail","indexOf","substring","RecipeDetailButton","MainpageHeader","RecipeDetailsImageModule","collectionMessageName","App","setMessage","sendmessage","setSendMessage","messageAry","useRef","getrecipenum","time","date","timestamp","formatDistance","locale","ja","fetchMessageData","String","recipeCommentNum","b","confirm","deleteDoc","alert","Tooltip","arrow","flex","endIcon","handleClick","collectionBookMarkName","collectionGoodName","RecipDetail","goodadd","setGoodAdd","goodcansel","setGoodCansel","goodflg","setGoodFlg","bookmarkadd","setBookMarkAdd","bookmarkcansel","setBookMarkCansel","bookmarkflg","setBookMarkFlg","setUserInfo","getuid","setGetUID","getavatarurl","setGetAvatarURL","userDataAry","commentcount","setCommentCount","bookarkBuffCount","goodFlg","bookmarkFlg","setGoodCount","setBookMarkCount","length","goodcount","handleGoodIcon","count","documentOKFlg","buffDocID","goodCollectionRef","clickdate","bookmarkcount","handleBookMarkIcon","bookmarkCollectionRef","RecipeDetailsEditButton","RecipeDetailsEditHeader","RecipeDetailsEdit","setTilte","setMemo","setCost","setPeriod","createdat","setImageName","setCategory","redipeRef","Image","ProfilesImageButton","ProfileImageList","bottomRef","BookmarkImageList","setBookMark","bookmarkAry","GoodImageList","setGood","goodAry","ProfilesButton","ProfilesHeader","Profiles","userinfo","selfintroduction","handleSubmit","handleChange","ProfileEditButton","ProfileEditHeader","FormHelperText","collectionUserName","ProfileEdit","setName","setLocation","setSelfIntroduction","updateMessage","getName","getImage","docMessage","messageRef","updateRecipe","docRecipe","recipeRef","userRef","URButton","userCredential","errorCode","code","errorMessage","URHeader","helperText","endAdornment","setForm","nicknameerr","setNickNameErr","locationerr","setLocationErr","addresserr","setAddressErr","passworderr","setPasswordErr","dispatch","useFileUpload","MessageInput","reload","collectionName","addKanji","setaddKanji","addKana","setaddKana","array","useLayoutEffect","current","scrollIntoView","QuestionButton","QuestionHeader","InfomationHeader","createData","calories","fat","carbs","protein","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","InfomationData","row","scope","contents","infoDetail","InquiryButton","InquiryHeader","TermsButton","TermsHeader","TermsData","PrivacyPolicyButton","PrivacyPolicyHeader","defaultSrc","CustomizedBreadcrumbs","imageAry","setImageAry","countStep","setCountStep","onChangeTest","pop","imageary","imagefile","exact","path","MainTop","SignUp","MainPage","CategoryList","DetailID","ProfileID","RecipeDetails","RecipeDetailsID","UserRegistration","UserRegistrationReview","UserRegistrationComplete","Message","Infomation","Question","Inquiry","Terms","PrivacyPolicy","Test","ReactDOM","render","StrictMode","getElementById"],"mappings":"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ACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,2BAAhB,sCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,2BAAhB,sCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MAAM,qBAAhB,gCACA,cAACyR,GAAA,EAAD,CAAUzR,MA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","file":"static/js/main.0ab1ff71.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {getFirestore}    from \"firebase/firestore\";\r\nimport {getAuth}         from \"firebase/auth\";\r\nimport {getStorage}      from \"firebase/storage\";\r\n\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyBDL4UhTUm7ri45yzco3_5x1cc121iUofc\",\r\n//     authDomain: \"myfirebasesample-c6d99.firebaseapp.com\",\r\n//     databaseURL: \"https://myfirebasesample-c6d99-default-rtdb.firebaseio.com\",\r\n//     projectId: \"myfirebasesample-c6d99\",\r\n//     storageBucket: \"myfirebasesample-c6d99.appspot.com\",\r\n//     messagingSenderId: \"765991719681\",\r\n//     appId: \"1:765991719681:web:f0e14b64267eddd8d50100\",\r\n//     measurementId: \"G-N78EB51Y8V\"\r\n// }\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDcl_-t3SqaHQcIFM3Iz5pswwXLrp99FoY\",\r\n    authDomain: \"korekan-d7ad7.firebaseapp.com\",\r\n    databaseURL: \"https://korekan-d7ad7-default-rtdb.firebaseio.com\",\r\n    projectId: \"korekan-d7ad7\",\r\n    storageBucket: \"korekan-d7ad7.appspot.com\",\r\n    messagingSenderId: \"821917763229\",\r\n    appId: \"1:821917763229:web:fa98590132c0be79c3b674\",\r\n    measurementId: \"G-FWF60HWVHN\"\r\n}\r\n\r\n\r\nconst firebase    = initializeApp(firebaseConfig);\r\nconst firestore   = getFirestore(firebase)\r\nconst fireauth    = getAuth(firebase)\r\nconst firestorage = getStorage(firebase)\r\n\r\nexport const db = getFirestore(firebase);\r\n\r\nexport const firebaseApp = {\r\n    firestore,\r\n    fireauth,\r\n    firestorage,\r\n  }\r\n","import { useState } from \"react\"\r\nimport { firebaseApp } from \"../../firebase\"\r\nimport { signInWithEmailAndPassword} from \"firebase/auth\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst fireauth = firebaseApp.fireauth\r\n// ログインする際に使用する\r\nexport default function useLogin () {\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const history = useHistory()\r\n  \r\n    const login = (email, password) => {\r\n      setError(null)\r\n      signInWithEmailAndPassword(fireauth, email, password)\r\n        .then(() => {\r\n          setSuccess(true)\r\n          console.log(\"ログインに成功しました。\")\r\n          setTimeout(() => {\r\n            history.push(\"/\")\r\n          },2000)\r\n        })\r\n        .catch(err => {\r\n          console.log(err.message)\r\n          setError(err.message)\r\n          console.log(\"ログインに失敗しました。\")\r\n        })\r\n    }\r\n  \r\n    return { success, error, login }\r\n  }","import * as React from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction HeaderTitle(props) {\r\n  return (\r\n    <Typography \r\n      component = {props.component}\r\n      variant   = {props.variant} \r\n      sx        = {props.sx}\r\n      noWrap    = {props.noWrap}\r\n      color     = {props.color}\r\n      gutterBottom>\r\n      {props.front_text}これ、考えた人すごいね。{props.text}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nHeaderTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default HeaderTitle;","import React          from 'react'\r\nimport Button         from '@mui/material/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function LoginButton(props){\r\n    const history = useHistory();\r\n    return(\r\n        <Button \r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disabled  = {props.disabled}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                history.push(props.link);\r\n                }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import * as React     from 'react';\r\nimport AppBar         from '@mui/material/AppBar';\r\nimport Box            from '@mui/material/Box';\r\nimport Toolbar        from '@mui/material/Toolbar';\r\nimport HeaderTitle    from '../HeaderTitle';\r\nimport LoginButton    from './LoginButton';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nexport default function LoginHeader() {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }} >\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <HeaderTitle\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n        <LoginButton\r\n              text      =\"ホーム\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<HomeIcon/>}\r\n              sx        = {{\"&:hover\": {background: \"#E64545\"}}}/>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from \"react\"\r\nimport {\r\n  Avatar,\r\n  Alert,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n} from \"@mui/material\"\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\"\r\nimport useLogin from \"../hooks/loginUseAuth\"\r\nimport LoginHeader from \"./LoginHeader\"\r\nimport {createTheme, \r\n  ThemeProvider } from '@mui/material/styles';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n});\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const { login, success, error } = useLogin()\r\n\r\n  const handleSubmit = (event) => {\r\n    console.log(\"handleSubmit 通過\")\r\n    event.preventDefault()\r\n    login(email, password)\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container maxWidth>\r\n        <LoginHeader/>\r\n      </Container>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"#E64545\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n              ログイン\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"メールアドレス\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"パスワード\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              startIcon = {<LoginIcon/>}\r\n            >\r\n              ログイン\r\n            </Button>\r\n              {error && <Alert severity=\"error\">ログインできませんでした</Alert>}\r\n              {success && <Alert severity=\"success\">ログインしました</Alert>}\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"passwordreset\" variant=\"body2\">\r\n                  パスワードを忘れた方\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"signup\" variant=\"body2\">\r\n                  アカウントをお持ちでない方\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}","import { useState } from \"react\"\r\nimport { firebaseApp } from \"../../firebase\"\r\nimport { createUserWithEmailAndPassword,\r\n         getAuth } from \"firebase/auth\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst fireauth = firebaseApp.fireauth\r\n// ユーザー登録/サインインに使用する\r\nexport default function useSignup () {\r\n  const [error, setError] = useState(null)\r\n  const [success , setSuccess] = useState(null)\r\n  const history = useHistory()\r\n\r\n  const signup = (email, password ) => {\r\n    setError(null)\r\n    createUserWithEmailAndPassword(fireauth, email, password)\r\n      .then(res => {\r\n        console.log(res.user)\r\n        console.log(\"ユーザー登録成功! (res.use) : \",res.user)\r\n        setSuccess(true)\r\n        // 成功した場合はホーム画面へ遷移\r\n        setTimeout(() => {\r\n          history.push(\"/profile/edit\")\r\n        }, 2000)\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message)\r\n        setError(err.message)\r\n        console.log(\"ユーザー登録失敗! (err.message) : \",err.message)\r\n        // 失敗したときは何もしない\r\n      })\r\n  }\r\n\r\n  return { success , error, signup }\r\n}\r\n\r\n","import React          from 'react'\r\nimport Button         from '@mui/material/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SignUpButton(props){\r\n    const history = useHistory();\r\n    return(\r\n        <Button \r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disabled  = {props.disabled}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                history.push(props.link);\r\n                }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import * as React     from 'react';\r\nimport AppBar         from '@mui/material/AppBar';\r\nimport Box            from '@mui/material/Box';\r\nimport Toolbar        from '@mui/material/Toolbar';\r\nimport HeaderTitle    from '../HeaderTitle';\r\nimport SignUpButton    from './SignUpButton';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nexport default function SignUpHeader() {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }} >\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <HeaderTitle\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n        <SignUpButton\r\n              text      =\"ホーム\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<HomeIcon/>}\r\n              sx        = {{\"&:hover\": {background: \"#E64545\"}}}/>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from \"react\"\r\nimport {\r\n  Avatar,\r\n  Alert,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n} from \"@mui/material\"\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\"\r\nimport useSignup from \"../hooks/useAuth\"\r\nimport PersonAddIcon     from '@mui/icons-material/PersonAdd';\r\nimport SignUpHeader from \"./SignUpHeader\";\r\nimport {createTheme, \r\n        ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n});\r\n\r\nexport default function Signup() {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const { signup, error , success } = useSignup()\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    // Authenticationを登録する\r\n    signup(email, password )\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth>\r\n        <SignUpHeader/>\r\n      </Container>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",}}>\r\n        <Avatar sx={{ m: 1, bgcolor: \"#E64545\" }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          新規ユーザー登録\r\n        </Typography>\r\n        <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n          <Typography variant=\"h7\">\r\n            メールアドレス(公開されません)\r\n          </Typography>\r\n          <TextField\r\n            margin       = \"normal\"\r\n            required\r\n            fullWidth\r\n            id           = \"email\"\r\n            label        = \"メールアドレス\"\r\n            name         = \"email\"\r\n            autoComplete = \"email\"\r\n            autoFocus\r\n            value        = {email}\r\n            onChange     = {e => setEmail(e.target.value)}/>\r\n          <Typography variant=\"h7\">\r\n            パスワード(公開されません)\r\n          </Typography>\r\n          <TextField\r\n            margin       = \"normal\"\r\n            required\r\n            fullWidth\r\n            name         = \"password\"\r\n            label        = \"パスワード\"\r\n            type         = \"password\"\r\n            id           = \"password\"\r\n            autoComplete = \"current-password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}/>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2,}}\r\n            link = \"/\"\r\n            startIcon = {<PersonAddIcon/>}\r\n            onClick = {handleSubmit}>\r\n            この内容で登録する\r\n          </Button>\r\n          {error && <Alert severity=\"error\">ユーザー登録できませんでした</Alert>}\r\n          {success && <Alert severity=\"success\">ユーザー登録が完了しました！</Alert>}\r\n          <Grid container sx={{ justifyContent: \"center\" }}>\r\n            <Grid item>\r\n              <Link href=\"login\" variant=\"body2\">\r\n                ログインはこちら\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n    </ThemeProvider>\r\n  )\r\n}","import { useState } from \"react\"\r\nimport { firebaseApp } from \"../../firebase\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { sendPasswordResetEmail} from \"firebase/auth\"\r\n\r\nconst fireauth = firebaseApp.fireauth\r\n// パスワードの再設定で使用する\r\nexport default function usePasswordReset () {\r\n    const history = useHistory()\r\n  \r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(null)\r\n  \r\n    const passwordReset = (email) => {\r\n      sendPasswordResetEmail(fireauth, email)\r\n        .then(() => {\r\n          setSuccess(true)\r\n          setTimeout(() => {\r\n            history.push(\"/login\")\r\n          }, 2000)\r\n        })\r\n        .catch(err => {\r\n          console.log(err.message)\r\n          setError(err.message)\r\n        })\r\n    }\r\n  \r\n    return { success, error, passwordReset }\r\n  }","import React          from 'react'\r\nimport Button         from '@mui/material/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function PasswordResetButton(props){\r\n    const history = useHistory();\r\n    return(\r\n        <Button \r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disabled  = {props.disabled}\r\n            disableElevation\r\n            fullWidth = {props.fullWidth}\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                history.push(props.link);\r\n                }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import * as React     from 'react';\r\nimport AppBar         from '@mui/material/AppBar';\r\nimport Box            from '@mui/material/Box';\r\nimport Toolbar        from '@mui/material/Toolbar';\r\nimport HeaderTitle    from '../HeaderTitle';\r\nimport PasswordResetButton    from './PasswordResetButton';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nexport default function PasswordResetHeader() {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }} >\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <HeaderTitle\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n        <PasswordResetButton\r\n              text      =\"ホーム\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<HomeIcon/>}\r\n              sx        = {{\"&:hover\": {background: \"#E64545\"}}}/>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from \"react\"\r\nimport {Avatar,\r\n        Alert,\r\n        Button,\r\n        CssBaseline,\r\n        TextField,\r\n        Box,\r\n        Typography,\r\n        Container,\r\n        Grid,}             from \"@mui/material\"\r\nimport LockOutlinedIcon    from \"@mui/icons-material/LockOutlined\"\r\nimport usePasswordReset    from \"../hooks/passWordReSetting\"\r\nimport PasswordResetHeader from \"./PasswordResetHeader\"\r\nimport {createTheme, \r\n        ThemeProvider }    from '@mui/material/styles';\r\nimport SendIcon            from '@mui/icons-material/Send';  \r\nimport PasswordResetButton from \"./PasswordResetButton\"\r\nimport ArrowBackIcon       from '@mui/icons-material/ArrowBack';\r\n\r\nconst theme = createTheme({\r\n    shadows: [\"none\"],\r\n    palette: {\r\n        // ボタンのカラー設定\r\n        primary: {\r\n          main: '#E64545',\r\n          contrastText: '#ffffff',\r\n        },\r\n        // 背景のカラー設定\r\n        background: {\r\n          default: '#ffffff',\r\n        },\r\n        // テキストのカラー設定\r\n        text: { primary: '#000000' },\r\n      },\r\n});\r\n\r\nexport default function PasswordReset() {\r\n    const { success, error, passwordReset } = usePasswordReset()\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    // データ送信後パスワードリセットする\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        passwordReset(email)\r\n    }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>      \r\n        <Container maxWidth>\r\n            <PasswordResetHeader/>\r\n        </Container>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n            sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",}}>\r\n            <Avatar sx={{ m: 1, bgcolor: \"#E64545\" }}>\r\n            <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            パスワード再設定\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"メールアドレス\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}/>\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n                startIcon = {<SendIcon/>}>\r\n                メールを送信する\r\n            </Button>\r\n            <Grid container sx={{ justifyContent: \"center\" }}>\r\n                <PasswordResetButton\r\n                    fullWidth\r\n                    text = \"ログイン画面へ戻る\"\r\n                    variant = \"outlined\"\r\n                    link    = \"login\"\r\n                    startIcon = {<ArrowBackIcon/>}/>\r\n            </Grid>\r\n            </Box>\r\n        </Box>\r\n        {error && (<Alert severity=\"error\">メールアドレスに送信できませんでした</Alert>)}\r\n        {success && (<Alert severity=\"success\">メールアドレスに送信しました</Alert>)}\r\n        </Container>\r\n    </ThemeProvider>\r\n  )\r\n}","import { firebaseApp } from \"../../firebase\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signOut } from \"firebase/auth\"\r\n\r\nconst fireauth = firebaseApp.fireauth\r\n// ログアウトする際に使用する\r\nexport default function useLogout () {\r\n    const history = useHistory()\r\n\r\n    const logout = () => {\r\n      signOut(fireauth)\r\n        .then(() => {\r\n          console.log(\"Sign-out successful.\")\r\n          setTimeout(() => {\r\n            // ログアウトが成功するとログイン画面へ遷移する\r\n            history.push(\"/login\")\r\n            },2000)\r\n        })\r\n        .catch(err => {\r\n          console.log(err.message)\r\n        })\r\n    }\r\n  \r\n    return { logout }\r\n  }","import React, { useState , useEffect } from \"react\"\r\nimport { collection,\r\n         query,\r\n         where,\r\n         DocumentData,\r\n         getDocs, } from \"firebase/firestore\"\r\nimport { Auth, getAuth, onAuthStateChanged } from \"firebase/auth\"\r\nimport {firebaseApp } from \"../../firebase\"\r\n\r\nexport default function useProfile ()  {\r\n    const [profile, setProfile] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        const auth = getAuth()\r\n        onAuthStateChanged(auth, async user => {\r\n            if (user) {\r\n                const userUid = user.uid\r\n                const firestore = firebaseApp.firestore\r\n\r\n                const q = query(\r\n                    collection(firestore, \"users\"),\r\n                    where(\"uid\", \"==\", userUid)\r\n                )\r\n                const querySnapshot = await getDocs(q)\r\n                querySnapshot.forEach(doc => {\r\n                    const docData = doc.data()\r\n                    docData.id = doc.id\r\n                    setProfile(docData)\r\n                })\r\n            }\r\n        })\r\n      }, [])\r\n  \r\n    return { profile }\r\n  }","import   React ,\r\n       { useState }   from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport   Button       from '@mui/material/Button';\r\nimport   useLogout    from '../hooks/logOutUseAuth';\r\nimport   useProfile   from \"../../components/hooks/useProfile\"\r\n\r\nexport default function MainPageButton(props){\r\n    const history = useHistory()\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n    const { logout } = useLogout()\r\n\r\n    const handleLogout = (id) => {\r\n        if(id === \"logout\"){\r\n            logout()\r\n            setOpen(true)\r\n            setAnchorEl(null)\r\n            console.log(\"ポップアップ出す\")\r\n        }else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                console.log(\"props.id が「logout」だったらログアウトする ⇒ \" , props.id)\r\n                // ログインしていなければ新規登録画面へ遷移する\r\n                if(props.id === \"logout\" || props.id === \"login\"){\r\n                    handleLogout(props.id)\r\n                }else if(!profile){\r\n                    history.push(\"/signup\")\r\n                }else{\r\n                    history.push(props.link)\r\n                }\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import React, \r\n      {useState,}     from \"react\";\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,\r\n        ListItemIcon,\r\n        MenuItem,\r\n        Menu ,}       from \"@mui/material\"\r\nimport MainPageButton from './MainPageButton';\r\nimport EditIcon       from '@mui/icons-material/Edit';\r\nimport HomeIcon       from '@mui/icons-material/Home';\r\nimport PersonAddIcon  from '@mui/icons-material/PersonAdd';\r\nimport LoginIcon      from '@mui/icons-material/Login';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\nimport LogoutIcon     from '@mui/icons-material/Logout';\r\nimport useProfile     from \"../../components/hooks/useProfile\"\r\nimport HeaderTitle    from '../HeaderTitle'\r\nimport IconButton     from '@mui/material/IconButton'\r\nimport StarIcon       from '@mui/icons-material/Star'\r\nimport BugReportIcon from '@mui/icons-material/BugReport'\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // アバターアイコンがクリックされた時\r\n  const handleClickAvatar = (event) =>{\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n      <Box sx={{ flexGrow: 1 }} >\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar>\r\n            <HeaderTitle\r\n                variant   = \"h6\"\r\n                noWrap\r\n                component = \"div\"\r\n                sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n            <Box sx={{ flexGrow: 1 }}/>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n              {/* <MainPageButton\r\n                text      =\"テスト画面\" \r\n                link      = \"/message\"\r\n                size      = \"large\"\r\n                variant   = \"contained\"\r\n                startIcon = {<BugReportIcon/>}/> */}\r\n              {profile ? \r\n                <MainPageButton\r\n                  text      = \"ホーム\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<HomeIcon/>}/>\r\n              : \"\" }\r\n              {profile ? \r\n                <MainPageButton\r\n                  text      =\"投稿する\" \r\n                  link      = \"/postpage\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<EditIcon/>}/>\r\n                : \"\" }\r\n              {profile ? \r\n                <MainPageButton\r\n                  text      = \"マイページ\" \r\n                  link      = {profile ? \"/profiles/\"+profile.uid : \"\"} \r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<PersonIcon/>}/>\r\n                  : \"\" }\r\n              {profile ? \r\n                <MainPageButton\r\n                  id        = \"logout\"\r\n                  text      = \"ログアウト\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LogoutIcon/>}/>\r\n                : <MainPageButton\r\n                  id        = \"login\"\r\n                  text      = \"ログイン\" \r\n                  link      = \"/login\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LoginIcon/>}/>}\r\n              {profile ? \r\n                <IconButton onClick={handleClickAvatar}>\r\n                  <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n                </IconButton>\r\n                  : <MainPageButton\r\n                    text    = \"新規登録\" \r\n                    link    = \"/signup\"\r\n                    size    = \"large\"\r\n                    variant = \"contained\"\r\n                    sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                    startIcon = {<PersonAddIcon/>}/>}\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {/* アバターアイコンをクリックしたときのメニュー表示 */}\r\n          {/* <Menu\r\n          anchorEl={anchorEl}\r\n          id=\"account-menu\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onClick={handleClose}\r\n          PaperProps={{\r\n            elevation: 0,\r\n            sx: {\r\n              overflow: 'visible',\r\n              filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n              mt: 1.5,\r\n              '& .MuiAvatar-root': {\r\n                width: 32,\r\n                height: 32,\r\n                ml: -0.5,\r\n                mr: 1,\r\n              },\r\n              '&:before': {\r\n                content: '\"\"',\r\n                display: 'block',\r\n                position: 'absolute',\r\n                top: 0,\r\n                right: 14,\r\n                width: 10,\r\n                height: 10,\r\n                bgcolor: 'background.paper',\r\n                transform: 'translateY(-50%) rotate(45deg)',\r\n                zIndex: 0,\r\n              },\r\n            },\r\n          }}\r\n          transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n          anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n        >\r\n          <MenuItem>\r\n            <ListItemIcon>\r\n              <EditIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            投稿した作品を確認する\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <ListItemIcon>\r\n              <PersonIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            マイページ\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <ListItemIcon>\r\n              <StarIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            お気に入り\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <ListItemIcon>\r\n              <LogoutIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            ログアウト\r\n          </MenuItem>\r\n        </Menu> */}\r\n      </Box>\r\n  );\r\n}\r\n","import React ,\r\n      { useState,}    from \"react\"\r\nimport { styled }     from '@mui/material/styles'\r\nimport Box            from '@mui/material/Box'\r\nimport ButtonBase     from '@mui/material/ButtonBase'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport ImageListItemBar from '@mui/material/ImageListItemBar'\r\n\r\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\r\n  position: 'relative',\r\n  height: 100,\r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '100% !important', // Overrides inline-style\r\n    height: 100,\r\n  },\r\n  '&:hover, &.Mui-focusVisible': {\r\n    zIndex: 1,\r\n    '& .MuiImageBackdrop-root': {\r\n      opacity: 0.25,\r\n    },\r\n    '& .MuiImageMarked-root': {\r\n      opacity: 0,\r\n    },\r\n    '& .MuiTypography-root': {\r\n      border: '4px solid currentColor',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ImageSrc = styled('span')({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center 40%',\r\n});\r\n\r\nconst Image = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\nconst ImageBackdrop = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"#ddd\",\r\n  opacity: 0.1,\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nconst ImageMarked = styled('span')(({ theme }) => ({\r\n  height: 3,\r\n  width: 18,\r\n  backgroundColor: theme.palette.common.white,\r\n  position: 'absolute',\r\n  bottom: -2,\r\n  left: 'calc(50% - 9px)',\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nexport default function MainPageImageButton(props) {\r\n    // タイトル表示\r\n    const [titlename, setTitleName] = useState(\"\");\r\n    var text  = props.text\r\n    var recipeNum = props.info.recipenum\r\n    var info = props.info\r\n    const history = useHistory();\r\n    // タイトル変更\r\n    var changeTitle = (props) => {\r\n        setTitleName(info.title)\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexWrap: 'wrap', minWidth: 100, width: '100%' }}>\r\n      <ImageButton\r\n        focusRipple\r\n        key     = {props.imgURL}\r\n        style   = {props.style}\r\n        text    = {props.text}\r\n        onClick = {() => {\r\n            changeTitle()\r\n            console.log(recipeNum)\r\n            // 作品番号(recepeNum)をアドレス末尾に付与\r\n            history.push(`/recipedetails/${recipeNum}`)}}>\r\n        <ImageSrc style={{ backgroundImage: `url(${props.imgURL})` }} />\r\n          {/* titleとsubtitleが存在する場合は、ImageListItemBarを表示する */}\r\n        {props.title && props.subtitle ?\r\n          <ImageListItemBar\r\n            title={props.title}\r\n            subtitle={props.subtitle}/>\r\n            : \"\"}\r\n        <ImageBackdrop className={props.className} />\r\n      </ImageButton>\r\n    </Box>\r\n  );\r\n}\r\n","import  React ,\r\n      { useEffect,\r\n        useState, }         from \"react\";\r\nimport { db }               from '../../firebase';\r\nimport { doc , \r\n         collection,\r\n         getDocs ,\r\n         updateDoc ,}       from 'firebase/firestore';\r\nimport { Typography , \r\n         Box ,\r\n         Grid,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         Link,}             from \"@mui/material\"\r\nimport { format ,}          from \"date-fns\"\r\nimport   useProfile         from \"../hooks/useProfile\"\r\nimport   Divider            from '@mui/material/Divider';\r\nimport   Paper              from '@mui/material/Paper';\r\nimport   Stack              from '@mui/material/Stack';\r\nimport { styled }           from '@mui/material/styles';\r\nimport   MainpageImgButton  from './MainPageImageButton'\r\nimport   ThumbUpAltIcon     from '@mui/icons-material/ThumbUpAlt';\r\nimport   StarsIcon          from '@mui/icons-material/Stars';\r\nimport { firebaseApp }      from \"../../firebase\";\r\n\r\nconst collectionRecipeName    = \"recipe\"\r\nconst collectionGoodName      = \"/good\"\r\nconst collectionBookMarkName  = \"/bookmark\"\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\nconst theme = createTheme()\r\n\r\nexport default function MainPageImageList() {\r\n  const [recipe, setRecipe] = useState([]);\r\n\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const recipeAry = [];\r\n\r\n  // firestoreからレシピ情報の取得\r\n  const fetchRecipeData = () => {\r\n    var goodBuffCount = 0\r\n    var bookmarkBuffCount = 0\r\n    const firestore = firebaseApp.firestore\r\n    getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((document) => {\r\n        // goodコレクションの個数を取得\r\n        const docGoodRef = doc(firestore, collectionRecipeName , document.id)\r\n        getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionGoodName)).then((querySnapshot)=>{\r\n          // 初期化\r\n          goodBuffCount = 0\r\n          querySnapshot.forEach((documentGood) => {\r\n            goodBuffCount = goodBuffCount + 1\r\n          })\r\n          updateDoc(docGoodRef , {\r\n            good : goodBuffCount,\r\n          })\r\n        })\r\n        // bookmarkコレクションの個数を取得\r\n        getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionBookMarkName)).then((querySnapshot)=>{\r\n          // 初期化\r\n          bookmarkBuffCount = 0  \r\n          querySnapshot.forEach((documentBookMark) => {\r\n            bookmarkBuffCount = bookmarkBuffCount + 1\r\n          })\r\n          updateDoc(docGoodRef , {\r\n            bookmark : bookmarkBuffCount,\r\n          })\r\n        })\r\n        recipeAry.push({\r\n          id : document.id,\r\n          good : 0,\r\n          bookmark : 0,\r\n          ...document.data(),\r\n        })\r\n      })\r\n    }).then(()=>{\r\n      console.log(\"recipeAry : \" , recipeAry)\r\n      setRecipe([...recipeAry])\r\n      // オブジェクト内の日付(createdAt)をキーに昇順にソートする\r\n      recipeAry.sort(function(first , second){\r\n        return (format(first.createdAt.toDate() , \"yyyyMMdd\") < format(second.createdAt.toDate() , \"yyyyMMdd\")) ? -1 : 1\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecipeData()\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid item xs={12} >\r\n        {recipe ? (\r\n          recipe.sort().map((recipe) => (\r\n            <Box \r\n              key={recipe.id} \r\n              sx={{\r\n                display: \"flex\",\r\n                my: 2,\r\n                gap: 2,\r\n                flexGrow: 1, m: 2,}}>\r\n              <Box>\r\n                <MainpageImgButton\r\n                    imgURL = {recipe.image.url}\r\n                    info   = {recipe}\r\n                    className   = \"MuiImageBackdrop-root\"\r\n                    link   = \"/recipedetail/\"\r\n                    style  = {{width: \"100px\"}}/>\r\n              </Box>\r\n              <Box sx={{ ml: 2 }}>\r\n                {/* 作品タイトルの表示 */}\r\n                <Grid container spacing={0} >\r\n                <Grid item xs= {10}>\r\n                  <Typography sx={{ fontSize: 22}}>\r\n                    {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                    <Link href={`/recipedetails/${recipe.recipenum}`} color=\"#000000\">\r\n                      <strong>{recipe.title}</strong>\r\n                    </Link>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs= {1} >\r\n                  {/* いいねボタン表示/いいね数表示 */}\r\n                  <ThumbUpAltIcon sx={{ color : \"#ffa500\" ,fontSize: 20}}/>\r\n                    <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                      {recipe.good}\r\n                    </Typography>\r\n                </Grid>\r\n                {/* お気に入りボタン表示/お気に入り数表示 */}\r\n                <Grid item xs= {1}>\r\n                  <StarsIcon sx={{ color : \"#a0522d\" }}/>\r\n                  <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                    {recipe.bookmark}\r\n                  </Typography>\r\n                </Grid>\r\n                {/* コメント表示/コメント数表示 */}\r\n                {/* ★後日実装 */}\r\n                {/* <Grid item xs= {1}>\r\n                  <InsertCommentIcon sx={{ color : \"#1e90ff\" }}/>\r\n                  <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                    XXX\r\n                  </Typography>\r\n                </Grid> */}\r\n                </Grid>\r\n                {/* 作品メモの表示 */}\r\n                <Grid>\r\n                  <Typography \r\n                    sx={{ p: 1, \r\n                          fontSize: 14 , \r\n                          maxWidth : 600 ,\r\n                          minWidth : 600 , \r\n                          background: \"#dddddd\" ,\r\n                          color:\"#000000\",\r\n                          borderRadius : 3,}}>\r\n                    {recipe.memo}\r\n                    <Typography\r\n                      sx={{ fontSize: 12 ,color:\"#000000\" }}\r\n                      align = \"right\">\r\n                      投稿した日：{format(recipe.createdAt.toDate(), \"yyyy年MM月dd日\")}\r\n                    </Typography>\r\n                  </Typography>\r\n                </Grid>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  divider={<Divider orientation=\"vertical\" flexItem />}\r\n                  spacing={2}>\r\n                    {/* 投稿日時の表示 */}\r\n                  <Item \r\n                    sx = {{\r\n                    minWidth : 250,\r\n                    maxWidth : 250,}}>\r\n                    {/* 投稿したユーザーの表示 */}\r\n                    {/* uidをアドレスの末尾に付与して遷移する */}\r\n                    <Typography\r\n                      sx={{ fontSize: 12 ,color:\"#000000\" }}\r\n                      align = \"left\">\r\n                      <Link href={`/profiles/${recipe.image.uid}`} color=\"#000000\">\r\n                        {recipe.image.user}\r\n                      </Link>\r\n                    </Typography>\r\n                  </Item>\r\n                  {/* 制作費用の表示 */}\r\n                  <Item sx = {{\r\n                    minWidth : 250,\r\n                    maxWidth : 250,}}>\r\n                    <Typography\r\n                      sx={{ fontSize: 12 ,color:\"#000000\" }}\r\n                      align = \"left\">\r\n                      制作費用：<strong>{Number(recipe.cost).toLocaleString()}</strong> 円\r\n                    </Typography>\r\n                  </Item>\r\n                </Stack>\r\n              </Box>\r\n            </Box>\r\n          ))) : (\r\n          <p>投稿が存在しません</p>)}\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import  React ,\r\n      { useEffect,\r\n        useState, }         from \"react\";\r\nimport { db }               from '../../firebase';\r\nimport { doc , \r\n         collection,\r\n         getDocs ,\r\n         updateDoc ,}       from 'firebase/firestore';\r\nimport { Typography , \r\n         Box ,\r\n         Grid,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         Link,\r\n         Button,}             from \"@mui/material\"\r\nimport { format ,}          from \"date-fns\"\r\nimport   useProfile         from \"../hooks/useProfile\"\r\nimport   Paper              from '@mui/material/Paper';\r\nimport { styled }           from '@mui/material/styles';\r\nimport   MainpageImgButton  from '../MainPage/MainPageImageButton'\r\nimport   ThumbUpAltIcon     from '@mui/icons-material/ThumbUpAlt';\r\nimport   StarsIcon          from '@mui/icons-material/Stars';\r\nimport { firebaseApp }      from \"../../firebase\";\r\n\r\nconst collectionRecipeName    = \"recipe\"\r\nconst collectionGoodName      = \"/good\"\r\nconst collectionBookMarkName  = \"/bookmark\"\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\nconst theme = createTheme()\r\n\r\nexport default function MainPageImageList() {\r\n  const [recipe, setRecipe] = useState([]);\r\n\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const recipeAry = [];\r\n\r\n  // firestoreからレシピ情報の取得\r\n  const fetchRecipeData = () => {\r\n    var goodBuffCount = 0\r\n    var bookmarkBuffCount = 0\r\n    const firestore = firebaseApp.firestore\r\n    getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((document) => {\r\n        // goodコレクションの個数を取得\r\n        const docGoodRef = doc(firestore, collectionRecipeName , document.id)\r\n        getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionGoodName)).then((querySnapshot)=>{\r\n          // 初期化\r\n          goodBuffCount = 0\r\n          querySnapshot.forEach((documentGood) => {\r\n            goodBuffCount = goodBuffCount + 1\r\n          })\r\n          updateDoc(docGoodRef , {\r\n            good : goodBuffCount,\r\n          })\r\n        })\r\n        // bookmarkコレクションの個数を取得\r\n        getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionBookMarkName)).then((querySnapshot)=>{\r\n          // 初期化\r\n          bookmarkBuffCount = 0  \r\n          querySnapshot.forEach((documentBookMark) => {\r\n            bookmarkBuffCount = bookmarkBuffCount + 1\r\n          })\r\n          updateDoc(docGoodRef , {\r\n            bookmark : bookmarkBuffCount,\r\n          })\r\n        })\r\n        recipeAry.push({\r\n          id : document.id,\r\n          good : 0,\r\n          bookmark : 0,\r\n          ...document.data(),\r\n        })\r\n      })\r\n    }).then(()=>{\r\n      console.log(\"recipeAry : \" , recipeAry)\r\n      setRecipe([...recipeAry])\r\n      // オブジェクト内の日付(createdAt)をキーに昇順にソートする\r\n      recipeAry.sort(function(first , second){\r\n        return (format(first.createdAt.toDate() , \"yyyyMMdd\") < format(second.createdAt.toDate() , \"yyyyMMdd\")) ? -1 : 1\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecipeData()\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container spacing={0} >\r\n      {recipe ? (\r\n        recipe.sort().map((recipe) => (\r\n          <Grid item xs={3}>\r\n            <Box \r\n              key={recipe.id} \r\n              sx={{\r\n                display: \"flex\",\r\n                pt : 2,\r\n                pb : 2,\r\n                pl : 1,\r\n                pr : 1,\r\n                m: 1,\r\n                maxWidth : 185,\r\n                borderTop    : \"solid #dddddd 1px\",\r\n                borderBottom : \"solid #dddddd 1px\",\r\n                borderLeft   : \"solid #dddddd 1px\",\r\n                borderRight  : \"solid #dddddd 1px\",}}>\r\n              <Box>\r\n                <MainpageImgButton\r\n                    imgURL = {recipe.image.url}\r\n                    info   = {recipe}\r\n                    className   = \"MuiImageBackdrop-root\"\r\n                    link   = \"/recipedetail/\"\r\n                    style  = {{width: \"167px\",height:\"167px\"}}/>\r\n                  <Typography sx={{ fontSize: 14}}>\r\n                    {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                    <Button \r\n                      sx = {{fontSize:11 ,\r\n                              borderRadius : 2,\r\n                              color:\"#ffffff\" , \r\n                              backgroundColor : \"#E64545\",\r\n                              height : 20,\r\n                              \"&:hover\": {\r\n                                background: \"#E64545\"},}}>\r\n                      {recipe.detail}\r\n                    </Button>\r\n                  </Typography>\r\n                  <Typography sx={{ fontSize: 14}}>\r\n                    {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                    <Link href={`/recipedetails/${recipe.recipenum}`} color=\"#000000\" underline=\"none\">\r\n                      <strong>{recipe.title}</strong>\r\n                    </Link>\r\n                  </Typography>\r\n                  {/* 投稿したユーザーの表示 */}\r\n                  {/* uidをアドレスの末尾に付与して遷移する */}\r\n                  <Typography\r\n                    sx={{ fontSize: 9 ,color:\"#000000\" }}\r\n                    align = \"right\">\r\n                    <Link href={`/profiles/${recipe.image.uid}`} color=\"#000000\" underline=\"none\">\r\n                      {recipe.image.user}\r\n                    </Link>\r\n                  </Typography>\r\n                  <Grid container spacing={0} >\r\n                    <Grid item xs= {9} align = \"right\">\r\n                      {/* いいねボタン表示/いいね数表示 */}\r\n                      <ThumbUpAltIcon sx={{ color : \"#ffa500\" ,fontSize: 13}}/>\r\n                        <Typography color=\"#000000\" variant=\"caption\" fontSize={13}>\r\n                          {recipe.good}\r\n                        </Typography>\r\n                    </Grid>\r\n                    {/* お気に入りボタン表示/お気に入り数表示 */}\r\n                    <Grid item xs= {3} align = \"right\">\r\n                      <StarsIcon sx={{ color : \"#a0522d\" ,fontSize: 13}}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={13}>\r\n                        {recipe.bookmark}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        ))) : (\r\n        <p>投稿が存在しません</p>)}\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import   React, \r\n      {  useEffect , \r\n         useState }               from \"react\"\r\nimport { styled }                 from '@mui/material/styles';\r\nimport   ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\nimport   MuiAccordion             from '@mui/material/Accordion';\r\nimport   MuiAccordionSummary      from '@mui/material/AccordionSummary';\r\nimport   MuiAccordionDetails      from '@mui/material/AccordionDetails';\r\nimport { Grid ,\r\n         Button,\r\n         Link, }                from '@mui/material';\r\nimport { createTheme,\r\n         ThemeProvider }          from '@mui/material/styles'\r\nimport { collection,\r\n         getDocs , }              from \"firebase/firestore\"\r\nimport { db }                     from '../../firebase';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport { useHistory }             from \"react-router-dom\"\r\n\r\nconst collectionCategoryName = \"category\"\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  '&:not(:last-child)': {\r\n    borderBottom: 0,\r\n  },\r\n  '&:before': {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\"#ffffff\",\r\n  borderTop    : \"solid #E64545 1px\",\r\n  borderBottom : \"solid #E64545 1px\",\r\n  borderLeft   : \"solid #E64545 10px\",\r\n  borderRight  : \"solid #E64545 1px\",\r\n  borderRadius : 5,\r\n  flexDirection: 'row-reverse',\r\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n    transform: 'rotate(90deg)',\r\n  },\r\n  '& .MuiAccordionSummary-content': {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\nexport default function CustomizedAccordions() {\r\n  const [expanded, setExpanded] = useState('panel1')\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  }\r\n\r\n  const [categorys, setCategorys] = useState([])\r\n  const [detail, setDetail] = useState([])\r\n  const categoryAry = []\r\n  const detailAry = []\r\n  const history = useHistory()\r\n\r\n  // firestoreからcategoryの取得\r\n  const fetchCategoryData = () => {\r\n    getDocs(collection(db, collectionCategoryName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // 重複していない要素だけを追加する\r\n        if(!categoryAry.includes(doc.data().category)){\r\n          // 「その他」は末尾に格納する\r\n          if(doc.data().category !== \"その他\"){\r\n            categoryAry.unshift(\r\n              doc.data().category)\r\n          }else{\r\n            categoryAry.push(\r\n              doc.data().category)\r\n          }          \r\n        }\r\n      })\r\n    }).then(()=>{\r\n      setCategorys([...categoryAry])\r\n      console.log(categoryAry)\r\n    })}\r\n\r\n  // firestoreからdetailの取得\r\n  const fetchDetailData = () => {\r\n    getDocs(collection(db, collectionCategoryName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // 「その他」は末尾に格納する\r\n        if(doc.data().detail !== \"その他\"){\r\n          detailAry.unshift(\r\n            doc.data())\r\n        }else{\r\n          detailAry.push(\r\n            doc.data())\r\n        }\r\n      })\r\n    }).then(()=>{\r\n      setDetail([...detailAry])\r\n      console.log(\"detailAry : \" , detailAry)\r\n    })}\r\n\r\n  useEffect(() => {\r\n    fetchCategoryData()\r\n    fetchDetailData()\r\n  },[])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {categorys.map((categorys) => (\r\n        <Accordion expanded={expanded === `panel${categorys}`} onChange={handleChange(`panel${categorys}`)}>\r\n          <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n            <Link href={`/categorylist/${categorys}`} fontSize={\"18px\"} color = \"#000000\">\r\n              {categorys}\r\n            </Link>\r\n          </AccordionSummary>\r\n          <Grid container spacing={0} >\r\n            {detail.map((detail) => \r\n              ( categorys === detail.category ?\r\n                <Grid item xs={3}>\r\n                  <AccordionDetails>\r\n                    <Button \r\n                      variant='outlined' \r\n                      sx = {{fontSize:11 ,\r\n                             borderRadius : 5,\r\n                             color:\"#a0522d\" , \r\n                             width : 170 ,\r\n                             backgroundColor : \"#faf0e6\"}}\r\n                      onClick = {() => {\r\n                        history.push(`/categorylist/${categorys}_${detail.detail}`)\r\n                      }}>\r\n                      {detail.detail}\r\n                      <ArrowForwardIosIcon sx = {{fontSize:16}}/>\r\n                    </Button>\r\n                  </AccordionDetails>\r\n                </Grid>\r\n              : \"\" )\r\n            )}\r\n          </Grid>\r\n        </Accordion>\r\n      ))}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import * as React      from 'react';\r\nimport Box             from '@mui/material/Box';\r\nimport Container       from '@mui/material/Container';\r\nimport Typography      from '@mui/material/Typography';\r\nimport HeaderTitle     from './HeaderTitle';\r\nimport { ThemeProvider, \r\n         createTheme } from '@mui/material/styles';\r\nimport CssBaseline     from '@mui/material/CssBaseline';\r\nimport Link            from '@mui/material/Link';\r\nimport Grid            from '@mui/material/Grid';\r\n\r\nconst textColor = \"#E64545\"\r\n\r\nconst footerTheme = createTheme({\r\n  palette: {\r\n    // テキストのカラー設定\r\n    text: { primary: '#ffffff' },\r\n  },\r\n});\r\n\r\nfunction Footer() {\r\n  return (\r\n    <ThemeProvider theme={footerTheme}>\r\n      <CssBaseline />\r\n      <Container maxWidth>\r\n        <Box component=\"footer\" sx={{backgroundColor:textColor,py:1}}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={2.5}>\r\n                <Typography variant=\"body2\" align=\"center\" >\r\n                  <Link\r\n                    color=\"#ffffff\"\r\n                    href={`/infomation`}\r\n                    style={{ textDecoration: 'none' }}>\r\n                      <strong>お知らせ・ニュース</strong>\r\n                  </Link>\r\n                </Typography>\r\n              </Grid>\r\n            <Grid item xs={2.5}>\r\n              <Typography variant=\"body2\" align=\"center\" >\r\n                <Link\r\n                  color=\"#ffffff\"\r\n                  href={`/question`}\r\n                  style={{ textDecoration: 'none' }}>\r\n                    <strong>よくある質問</strong>\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2.5}>\r\n              <Typography variant=\"body2\" align=\"center\" >\r\n                <Link\r\n                  color=\"#ffffff\"\r\n                  href={`/inquiry`}\r\n                  style={{ textDecoration: 'none' }}>\r\n                    <strong>お問い合わせ</strong>\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2.5}>\r\n              <Typography variant=\"body2\" align=\"center\" >\r\n                <Link\r\n                  color=\"#ffffff\"\r\n                  href={`/terms`}\r\n                  style={{ textDecoration: 'none' }}>\r\n                    <strong>利用規約</strong>\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Typography variant=\"body2\" align=\"center\" >\r\n                <Link\r\n                  color=\"#ffffff\"\r\n                  href={`/privacypolicy`}\r\n                  style={{ textDecoration: 'none' }}>\r\n                    <strong>プライバシーポリシー</strong>\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box component=\"footer\" sx={{backgroundColor:\"#ffffff\", py: 3}}>\r\n          <Container maxWidth=\"lg\">\r\n            <Typography variant=\"body2\" align=\"center\" color = {textColor}>\r\n              <HeaderTitle\r\n                  variant    = \"body2\"\r\n                  noWrap\r\n                  component  = \"div\"\r\n                  front_text = {'© ' + new Date().getFullYear() + ' '}\r\n                  color     = {textColor}/>\r\n              画像出典元:Illustration by Freepik Storyset\r\n            </Typography>\r\n          </Container>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Footer;","\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function AdsCard(props) {\r\n    useEffect(() => {\r\n        if (window.adsbygoogle && process.env.NODE_ENV !== \"development\") {\r\n            window.adsbygoogle.push({});\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <ins className=\"adsbygoogle\"\r\n            style={{ \"display\": \"block\" }}\r\n            data-ad-client={process.env.REACT_APP_GOOGLE_AD_CLIENT}\r\n            data-ad-slot={process.env.REACT_APP_GOOGLE_AD_SLOT}\r\n            data-ad-format=\"auto\"\r\n            data-full-width-responsive=\"true\"></ins>\r\n    );\r\n}","import   React, \r\n       { useState,}          from \"react\"\r\nimport { Box ,\r\n         Typography,\r\n         Container , \r\n         Grid, \r\n         Button, \r\n         Tabs , \r\n         Tab ,\r\n         Link, }             from '@mui/material'\r\nimport { createTheme,\r\n         ThemeProvider }     from '@mui/material/styles'\r\nimport { useHistory,\r\n         withRouter }        from 'react-router'\r\nimport   MainPageHeader      from './MainPageHeader'\r\nimport   MainPageImageList   from './MainPageImageList'\r\nimport   MainPageImageModule from './MainPageImageModule'\r\nimport   MainPageAccordion   from './MainPageAccordion'\r\nimport   MainPageSearchBox   from './MainPageSearchBox'\r\nimport   Footer              from '../Footer'\r\nimport   PersonIcon          from '@mui/icons-material/Person'\r\nimport   EditIcon            from '@mui/icons-material/Edit'\r\nimport { firebaseApp }       from \"../../firebase\"\r\nimport   useProfile          from \"../../components/hooks/useProfile\"\r\nimport { ref ,}              from \"firebase/storage\"\r\nimport { makeStyles }        from \"@material-ui/core/styles\"\r\nimport   PersonAddIcon       from '@mui/icons-material/PersonAdd'\r\nimport   ViewModuleIcon      from '@mui/icons-material/ViewModule'\r\nimport   ViewListIcon        from '@mui/icons-material/ViewList'\r\nimport   Adsense             from '../Adsense'\r\n\r\nconst useStyles = makeStyles({\r\n  rectangle: {\r\n    background:\"#3D85CC\",\r\n    color : \"#ffffff\",\r\n    width: \"150px\",\r\n    height: \"35px\",\r\n    \"&:hover\": {\r\n      background: \"#3D85CC\"\r\n    },\r\n    \"&:active\": {\r\n      background: \"aqua\"\r\n    }\r\n  }\r\n})\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nconst maipageImg = \r\n\"https://firebasestorage.googleapis.com/v0/b/myfirebasesample-c6d99.appspot.com/o/PAGE_USE_IMG%2F001_mainpage_img.png?alt=media&token=ec1c9756-3602-43a6-ad0e-ce4d23e3ca5f\"\r\nconst subImg_001 = \r\n\"https://firebasestorage.googleapis.com/v0/b/myfirebasesample-c6d99.appspot.com/o/PAGE_USE_IMG%2F002_mainpage_img.jpg?alt=media&token=760a42db-f2e1-4e5a-a7f9-d485693e1e01\"\r\nconst subImg_002 = \r\n\"https://firebasestorage.googleapis.com/v0/b/myfirebasesample-c6d99.appspot.com/o/PAGE_USE_IMG%2F004_mainpage_img.jpg?alt=media&token=af24a603-0191-42e2-8b13-dad349aa58a4\"\r\nconst subImg_003 = \r\n\"https://firebasestorage.googleapis.com/v0/b/myfirebasesample-c6d99.appspot.com/o/PAGE_USE_IMG%2F003_mainpage_img.jpg?alt=media&token=f824c05e-93c4-4bbe-9e10-0ac95f6d47af\"\r\nconst filename       = \"001_mainpage_img.png\"\r\nconst filepath       = \"gs://myfirebasesample-c6d99.appspot.com/PAGE_USE_IMG/\"\r\n\r\n// タブパネルの関数\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>)}\r\n    </div>\r\n  )\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction MainPage(props) {\r\n  // const buttonTheme = {\r\n  //   background: \"orange\",\r\n  //   color: \"#ffffff\"\r\n  // };\r\n  // const style = {\r\n\t// \tdisplay: \"flex\",\r\n\t// \tflexDirection: \"column\",\r\n\t// \talignItems: \"center\",\r\n\t// \theight: \"100vh\",\r\n\t// \tjustifyContent: \"center\"\r\n\t// };\r\n  // ユーザーが認証されていない場合、ログイン画面へ遷移する\r\n  // firebaseApp.fireauth.onAuthStateChanged(user => {\r\n  //   if (!user) {\r\n  //     history.push(\"/login\")\r\n  //   }else{\r\n  //     store.getState().loginUserUID = user.uid\r\n  //   }\r\n  // })\r\n\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const [image, setImage] = useState()\r\n  const firestorage = firebaseApp.firestorage\r\n  const gsReference = ref(\r\n    firestorage,\r\n    filepath + filename\r\n  )\r\n\r\n  // タブ関連\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  }\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container maxWidth>\r\n        <MainPageHeader/>\r\n      </Container>\r\n      <Grid \r\n        container \r\n        spacing={0} \r\n        sx={{backgroundColor:'#E64545',height: '300px' , }}\r\n        marginTop = '30px'>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            <strong><br/>その \"アイディア\" を \"カタチ\" に</strong>\r\n          </Typography>\r\n          <Typography variant=\"h6\" align=\"center\">\r\n            色、デザイン、工夫、アイディアetc...<br/>\r\n            自由な発想、自由なアイディア、自由な工夫を探し出し、<br/>\r\n            仲間が作った”これ、考えた人すごいね。”というような<br/>\r\n            アイディアを共有してDIYを楽しみましょう。<br/><br/>\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6} align = \"right\">\r\n              <Button\r\n                startIcon = {<EditIcon/>}\r\n                sx = {{background:\"#1D7BED\" ,\r\n                       padding : 1,\r\n                       borderRadius : 10,\r\n                       borderWidth : 1,\r\n                       overflow : \"hedden\",\r\n                       color:\"#ffffff\",\r\n                       width: \"150px\",\r\n                       height: \"35px\",\r\n                       \"&:hover\": {\r\n                         background: \"#1D7BED\"},}}\r\n                  onClick = {() => {\r\n                    {profile ? history.push(\"/postpage\")\r\n                  : history.push(\"/signup\")}}}>\r\n                  投稿する\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6} align = \"left\">\r\n            {profile ? \r\n              <Button\r\n                startIcon = {<PersonIcon/>}\r\n                sx = {{background:\"#1D7BED\" ,\r\n                       padding : 1,\r\n                       borderRadius : 10,\r\n                       borderWidth : 1,\r\n                       color:\"#ffffff\",\r\n                       width: \"150px\",\r\n                       height: \"35px\",\r\n                       \"&:hover\": {background: \"#1D7BED\"},}}\r\n                onClick = {() => {\r\n                  history.push(\"/profiles/\"+profile.uid)}}>\r\n                  マイページ\r\n              </Button>\r\n              : <Button\r\n              startIcon = {<PersonAddIcon/>}\r\n              sx = {{background:\"#1D7BED\" ,\r\n                      padding : 1,\r\n                      borderRadius : 10,\r\n                      borderWidth : 1,\r\n                      color:\"#ffffff\",\r\n                      width: \"150px\",\r\n                      height: \"35px\",\r\n                      \"&:hover\": {\r\n                        background: \"#1D7BED\"\r\n                      },}}\r\n                onClick = {() => {\r\n                  history.push(\"/signup\")}}>\r\n                新規登録する\r\n              </Button> }\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"body2\" align='center'>\r\n            <img \r\n              src     = {maipageImg}\r\n              width   = \"350px\" \r\n              alt     = \"preview\"\r\n              padding = \"1em\"/>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n        \r\n      <Box sx={{ flexGrow: 1, m: 2, pt: 4, pb: 4 }}>\r\n        <Container maxWidth>\r\n        <Grid container spacing={0} >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"#000000\">\r\n              <strong>その \"考え\" を探しましょう！</strong>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Typography variant=\"h6\" align=\"center\" color=\"#ff3838\">\r\n              <strong><br/>1.アイディアの参考に</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" align='center'>\r\n              <img \r\n                src     = {subImg_001}\r\n                width   = \"250px\" \r\n                alt     = \"preview\"\r\n                padding = \"1em\"/>\r\n            </Typography>\r\n            <Typography variant=\"body1\" align=\"center\" color=\"#000000\">\r\n              仲間が考えたアイディアを参考にして<br/>\r\n              デザインの発案をお助けします。\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Typography variant=\"h6\" align=\"center\" color=\"#ff3838\">\r\n              <strong><br/>2.教えて！をカンタンに</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" align='center'>\r\n              <img \r\n                src     = {subImg_002}\r\n                width   = \"400px\" \r\n                alt     = \"preview\"\r\n                padding = \"1em\"/>\r\n            </Typography>\r\n            <Typography variant=\"body1\" align=\"center\" color=\"#000000\">\r\n              DIY好きの仲間同士で知恵を出し合い<br/>\r\n              問題解決をカンタンにします。\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Typography variant=\"h6\" align=\"center\" color=\"#ff3838\">\r\n              <strong><br/>3.DIY制作ツールに</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" align='center'>\r\n              <img \r\n                src     = {subImg_003}\r\n                width   = \"250px\" \r\n                alt     = \"preview\"\r\n                padding = \"1em\"/>\r\n            </Typography>\r\n            <Typography variant=\"body1\" align=\"center\" color=\"#000000\">\r\n              自分だけのDIY作品ツールとして<br/>\r\n              ご利用いただけます。<br/>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        </Container>\r\n\r\n        <Container maxWidth = \"md\" >\r\n          <Box\r\n            sx={{\r\n              bgcolor: 'background.paper',\r\n              pt: 8,\r\n              pb: 6,}}>\r\n              {/* <Typography\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n              align=\"left\"\r\n              color=\"text.primary\"\r\n              gutterBottom\r\n              sx = {{backgroundColor : \"#ffffff\",\r\n                     color : \"#000000\",\r\n                     padding: \"1rem 2rem\",\r\n                     borderTop: \"double #E64545 6px\",\r\n                     borderBottom: \"double #E64545 6px\",\r\n                     pt : 1 , \r\n                     pb : 1 ,}}>\r\n              フリーワードでさがす\r\n            </Typography>\r\n            <br/>\r\n            <MainPageSearchBox/> */}\r\n            <br/>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n              align=\"left\"\r\n              color=\"text.primary\"\r\n              gutterBottom\r\n              sx = {{backgroundColor : \"#ffffff\",\r\n                     color : \"#000000\",\r\n                     padding: \"1rem 2rem\",\r\n                     borderTop: \"double #E64545 6px\",\r\n                     borderBottom: \"double #E64545 6px\",\r\n                     pt : 1 , \r\n                     pb : 1 ,}}>\r\n              <Link href={\"/categorylist\"} color=\"#000000\">\r\n                カテゴリー</Link>\r\n                でさがす\r\n            </Typography>\r\n            <br/>\r\n            <MainPageAccordion/>\r\n            <br/>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n              align=\"left\"\r\n              color=\"text.primary\"\r\n              gutterBottom\r\n              sx = {{backgroundColor : \"#ffffff\",\r\n                     color : \"#000000\",\r\n                     padding: \"1rem 2rem\",\r\n                     borderTop: \"double #E64545 6px\",\r\n                     borderBottom: \"double #E64545 6px\",\r\n                     pt : 1 , \r\n                     pb : 1 ,}}>\r\n              みんなの作品をみる\r\n            </Typography>\r\n{/* google Adsense導入 */}\r\n<Adsense/>\r\n            {/* タブの文言 */}\r\n            <Box sx={{ width: '100%' }}>\r\n              <Box sx={{ borderBottom: 1, borderColor: 'divider'}}>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\" >\r\n                  <Tab label={<ViewListIcon/>} {...a11yProps(0)} />\r\n                  <Tab label={<ViewModuleIcon/>} {...a11yProps(1)} />\r\n                </Tabs>\r\n              </Box>\r\n              <TabPanel value={value} index={0}>\r\n                <MainPageImageList/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <MainPageImageModule/>\r\n              </TabPanel>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Footer */}\r\n      <Footer/>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(MainPage);\r\n","import {getAuth } from \"firebase/auth\"\r\n\r\nexport default function useUser () {\r\n    const auth = getAuth()\r\n    // 認証プロフィールを取得するために、authのcurrentUserを指定します。\r\n    const user = auth.currentUser\r\n  \r\n    // userが存在する場合、emailとaccessTokenを取得して返す。\r\n    // user存在しない場合、そのままuserを返す。\r\n    if (user !== null) {\r\n      const email = user.email\r\n      const uid   = user.uid\r\n      const accessToken = user.accessToken\r\n  \r\n      const userInfo = {\r\n        email,\r\n        uid,\r\n      }\r\n      console.log(\"ユーザー情報取得 => \",userInfo)\r\n      return { user: userInfo }\r\n    } else {\r\n      return { user }\r\n    }\r\n  }","import React          from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button         from '@mui/material/Button';\r\n\r\nexport default function PostPageButton(props){\r\n    const history = useHistory();\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            variant   = {props.variant}\r\n            size      = {props.size}\r\n            startIcon = {props.startIcon}\r\n            fullWidth = {props.fullWidth}\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n            history.push(props.link)\r\n            console.log(\"ボタンのクリックイベント\")\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n        )\r\n}","import * as React     from 'react';\r\nimport AppBar         from '@mui/material/AppBar';\r\nimport Box            from '@mui/material/Box';\r\nimport Toolbar        from '@mui/material/Toolbar';\r\nimport PostPageButton from './PostPageButton';\r\nimport HeaderTitle    from '../HeaderTitle';\r\nimport HomeIcon       from '@mui/icons-material/Home';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\n\r\nexport default function PrimarySearchAppBar() {\r\n \r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <HeaderTitle\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <PostPageButton\r\n              text    = \"ホーム\" \r\n              link    = \"/\"\r\n              size    = \"\"\r\n              variant = \"\"\r\n              sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n              startIcon = {<HomeIcon/>}/>\r\n            {/* <PostPageButton\r\n              text    = \"マイページ\" \r\n              link    = \"/mypage\"\r\n              size    = \"\"\r\n              variant = \"\"\r\n              startIcon = {<PersonIcon/>}/> */}\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","export const UPDATE_FORM   = 'UPDATE_FORM';\r\nexport const UPDATE_RECIPE = 'UPDATE_RECIPE';\r\n\r\nexport const updateForm = form => {\r\n    return {\r\n        type: UPDATE_FORM,\r\n        payload: form\r\n    }\r\n}\r\n\r\nexport const updateRecipe = recipe => {\r\n    return {\r\n        type: UPDATE_RECIPE,\r\n        payload: recipe\r\n    }\r\n}\r\n","import { createStore }  from \"redux\";\r\nimport {UPDATE_FORM,\r\n        UPDATE_RECIPE,} from '../actions/memberAction';\r\n\r\nconst initialState = {\r\n  address          : \"\",\r\n  addressErrorMS   : \"\",\r\n  password1        : \"\",\r\n  password2        : \"\",\r\n  passwordErrorMS  : \"\",\r\n  nicknameErrorMS  : \"\",\r\n  location         : \"\",\r\n  locationErrorMS  : \"\",\r\n  loginUserUID     : \"\",  // ログインユーザーのUID\r\n  displayName      : \"\",  // ユーザー名\r\n  recipetitle      : \"\",  // 作品タイトル\r\n  category         : \"\",  // 大項目カテゴリー\r\n  detail           : \"\",  // 小項目\r\n  productionCost   : \"\",  // 制作費用\r\n  productionPeriod : \"\",  // 制作期間\r\n  productionMemo   : \"\",  // 作品メモ\r\n  createdAt        : \"\",  // 投稿日時\r\n  recipeimage      : \"\",  // 作品画像\r\n  documentID       : \"\",  // firebaseのドキュメントID格納用\r\n  recipeUID        : \"\",  // recipe-image-uidを格納する\r\n  commentCount     : \"\",  // コメントの数\r\n  photoURL         : \"\",  \r\n  memo             : \"\",\r\n  photoFileData    : \"\",\r\n  phoneNumber      : \"\",\r\n};\r\n\r\nconst reducer = (state = initialState ,action) => {\r\n    switch (action.type) {\r\n        case UPDATE_FORM:\r\n            let formState = {...state};\r\n            formState = action.payload;\r\n            return formState;\r\n        case UPDATE_RECIPE:\r\n            let recipeState = {...state};\r\n            recipeState = action.payload;\r\n            return recipeState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import   React, \r\n      {  useEffect , \r\n         useState }      from \"react\"\r\nimport { Alert , \r\n         Avatar ,\r\n         Typography ,\r\n         Paper ,  \r\n         Box ,\r\n         Grid,\r\n         Container ,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         CssBaseline ,\r\n         TextField , \r\n         Input,\r\n         Button, \r\n         FormControl,\r\n         InputLabel,\r\n         Select ,\r\n         MenuItem ,\r\n         CardMedia,}      from \"@mui/material\"\r\nimport { firebaseApp }    from \"../../firebase\"\r\nimport   useUser          from \"../hooks/getuseAuth\"\r\nimport   PostPageHeader   from './PostPageHeader';\r\nimport   PostPageButton   from './PostPageButton';\r\nimport { styled }         from '@mui/material/styles';\r\nimport   EditIcon         from '@mui/icons-material/Edit';\r\nimport   ArrowBackIcon    from '@mui/icons-material/ArrowBack';\r\nimport   store            from '../../store/index';\r\nimport   useProfile       from \"../hooks/useProfile\"\r\nimport { useHistory}      from \"react-router-dom\";\r\nimport { ref,\r\n         uploadBytes,\r\n         getDownloadURL,} from \"firebase/storage\"\r\nimport { addDoc,\r\n         collection,\r\n         Timestamp,\r\n         getDocs , }      from \"firebase/firestore\"\r\nimport { db }             from '../../firebase';\r\nimport Footer            from '../Footer';\r\n\r\nconst collectionCategoryName = \"category\"\r\n\r\nconst defaultSrc =\r\n    \"https://firebasestorage.googleapis.com/v0/b/myfirebasesample-c6d99.appspot.com/o/PAGE_USE_IMG%2FAddImage.png?alt=media&token=d4acd7c6-5a2b-4f54-a4bb-0e6240d25f81\";\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n});\r\n\r\nexport default function PostPage() {\r\n  const [name, setName] \r\n    = useState(store.getState().displayName)      // プロフィール名\r\n  const [recipetitle, setRecipeTitle] \r\n    = useState(\"\")      // 作品タイトル\r\n  const [productioncost , setProductionCost] \r\n    = useState(\"\")   // 制作費用\r\n  const [productionperiod , setProductionPeriod] \r\n    = useState(\"\") // 制作期間\r\n  const [productionmemo , setProductionMemo] \r\n    = useState(\"\")   // 作品メモ\r\n  const [error, setError] = useState(false)             // エラー判定\r\n  const [errormessage , setErrorMessage] = useState(\"\") // エラーメッセージ\r\n  const [success, setSuccess] = useState(false)         // 成功判定\r\n  const [image, setImage] = useState()\r\n  const firestorage = firebaseApp.firestorage\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const { user } = useUser()\r\n  const history = useHistory()\r\n\r\n  // ------セレクトボックス用------\r\n  const [categorys, setCategorys] = useState([])\r\n  const [detail, setDetail] = useState([])\r\n  const categoryAry = []\r\n  const detailAry = []\r\n  const [selectcategory , setSelectCategory] = useState(\"\")  // 大項目カテゴリー\r\n  const [selectdetail , setSelectDetail]     = useState(\"\")  // 小項目カテゴリー\r\n\r\n  // categoryセレクトボックスの要素選択時\r\n  const handleSelectChange = (event) => {\r\n    setSelectCategory(event.target.value)\r\n    setSelectDetail(\"\")\r\n    fetchDetailData(event.target.value)\r\n  }\r\n\r\n  // detailセレクトボックスの要素選択時\r\n  const handleDetailChange = (event) => {\r\n    setSelectDetail(event.target.value)\r\n    console.log(event.target.value)\r\n  };\r\n\r\n  // firestoreからcategoryの取得\r\n  const fetchCategoryData = () => {\r\n    getDocs(collection(db, collectionCategoryName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // 重複していない要素だけを追加する\r\n        if(!categoryAry.includes(doc.data().category)){\r\n          // 「その他」は末尾に格納する\r\n          if(doc.data().category !== \"その他\"){\r\n            categoryAry.unshift(\r\n              doc.data().category)\r\n          }else{\r\n            categoryAry.push(\r\n              doc.data().category)\r\n          }\r\n        }\r\n      })\r\n    }).then(()=>{\r\n      setCategorys([...categoryAry])\r\n      console.log(\"categoryAry : \" , categoryAry)\r\n    })}\r\n\r\n  // firestoreからdetailの取得\r\n  const fetchDetailData = (detail) => {\r\n    console.log(\"detail => \", detail)\r\n    getDocs(collection(db, collectionCategoryName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // カテゴリーで選択している要素だけを追加する\r\n        if(doc.data().category === detail){\r\n          // 「その他」は末尾に格納する\r\n          if(doc.data().detail !== \"その他\"){\r\n            detailAry.unshift(\r\n              doc.data().detail)\r\n          }else{\r\n            detailAry.push(\r\n              doc.data().detail)\r\n          }\r\n        }\r\n      })\r\n    }).then(()=>{\r\n      setDetail([...detailAry])\r\n      console.log(\"detailAry : \" , detailAry)\r\n    })};\r\n      \r\n    useEffect(() => {\r\n      fetchCategoryData()\r\n    },[]);\r\n  // ------セレクトボックス用------\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.files)\r\n    if (e.target.files !== null) {\r\n        setImage(e.target.files[0])\r\n        console.log(\"handleChange ~> \",e.target.files[0])\r\n        console.log(\"image.name => \" , image)\r\n      }\r\n  }\r\n\r\n  // 投稿ボタンがクリックされた時の処理\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const firestore = firebaseApp.firestore\r\n    // アラートが出ている場合は一旦消す\r\n    setError(false)\r\n    setSuccess(false)\r\n\r\n    // 入力内容が空の場合はエラーを返す\r\n    if(recipetitle ===\"\"){\r\n      console.log(\"作品タイトルが未入力\")\r\n      setErrorMessage(\"作品タイトルを入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(selectcategory ===\"\"){\r\n      console.log(\"大項目が未入力\")\r\n      setErrorMessage(\"大項目を選択してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(selectdetail ===\"\"){\r\n      console.log(\"小項目が未入力\")\r\n      setErrorMessage(\"小項目を選択してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(productioncost ===\"\"){\r\n      console.log(\"制作費用が未入力\")\r\n      setErrorMessage(\"制作費用を入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(productionperiod ===\"\"){\r\n      console.log(\"制作期間が未入力\")\r\n      setErrorMessage(\"制作期間を入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(productionmemo ===\"\"){\r\n      console.log(\"作品コメントが未入力\")\r\n      setErrorMessage(\"作品コメントを入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(!image){\r\n      console.log(\"画像が選択していない\")\r\n      setErrorMessage(\"画像が選択されていません\")\r\n      setError(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      const docRef = collection(firestore, \"recipe\");\r\n\r\n      if(image){\r\n          const recipeNo = Math.floor(Math.random()* 1000000000000001)\r\n          const imageRef = ref(firestorage, '/RECIPE_IMG/' + recipeNo + \"/\" + image.name)\r\n          // firebase strageへ画像をアップロード\r\n          uploadBytes(imageRef, image).then(() => {\r\n            getDownloadURL(imageRef).then(url => {\r\n              console.log(url)\r\n              // firestoreへ投稿情報を書き込み\r\n              addDoc(docRef,{\r\n                category         : selectcategory,                 // 大項目カテゴリを入力\r\n                detail           : selectdetail,                 // 小項目カテゴリを入力\r\n                createdAt        : Timestamp.fromDate(new Date()), // 投稿日\r\n                memo             : productionmemo ,                // 作品メモを入力\r\n                cost             : productioncost ,                // 制作費用を入力\r\n                period           : productionperiod ,              // 制作期間を入力\r\n                title            : recipetitle ,                   // 作品タイトルを入力\r\n                recipenum        : recipeNo ,                      // レシピNoを入力\r\n                image: {\r\n                  filename       : image.name,                     // ファイル名\r\n                  user           : profile.name,                   // DIY作成者を入力\r\n                  url            : url,                            // 画像のURLを入力\r\n                  uid            : profile.uid,},                  // 作成者のUIDを入力\r\n                })\r\n              })\r\n            console.log(\"画像アップロード完了!\")\r\n            // 成功したアラート表示\r\n            setSuccess(true)\r\n            setTimeout(() => {\r\n              history.push(\"/\")\r\n            },2000)\r\n          })\r\n        }\r\n          } catch (err) {\r\n            console.log(\"エラーしてます\")\r\n            console.log(err)\r\n            // 失敗したアラート表示\r\n            setError(true)\r\n          }\r\n        }\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth>\r\n        <PostPageHeader />\r\n      </Container>\r\n      <Container maxWidth = \"md\">\r\n        <Container component=\"main\" maxWidth=\"lg\" sx={{ mb: 4 }}>\r\n          <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n            <Typography \r\n              component=\"h1\" \r\n              variant=\"h4\" \r\n              align=\"center\"\r\n              sx = {{backgroundColor : \"#ffffff\",\r\n                     color : \"#000000\",\r\n                     padding: \"1rem 2rem\",\r\n                     borderTop: \"double #E64545 6px\",\r\n                     borderBottom: \"double #E64545 6px\",\r\n                     pt : 2 , \r\n                     pb : 2 ,}}>\r\n              DIY作品を投稿する\r\n            </Typography>\r\n            <br/>\r\n            <Typography \r\n              component=\"h1\" \r\n              variant=\"h6\" \r\n              align=\"left\"\r\n              sx = {{backgroundColor : \"#ffffff\",\r\n                     color : \"#000000\",\r\n                     padding: \"0.2rem\",\r\n                     borderLeft : \"solid #E64545 6px\"}}>\r\n              画像選択\r\n            </Typography>\r\n            <Grid container spacing={1} align= \"center\">\r\n                {/* <Item>タイトル画像<ImageUpload/></Item> */}\r\n                <Grid item xs={12} md={12}>\r\n                  <CardMedia\r\n                    sx={{ width: 400, height: 400 }}\r\n                    // src={image ? URL.createObjectURL(image) : profile ? profile.image : \"\"}alt=\"\"/>\r\n                    image={image ? URL.createObjectURL(image) : defaultSrc}alt=\"\"/>\r\n                  <input\r\n                    id=\"image\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleChange}\r\n                    style={{ display: \"none\" }}/>\r\n                    <label htmlFor=\"image\">\r\n                      <Button \r\n                        variant=\"outlined\" \r\n                        color=\"primary\" \r\n                        component=\"span\"\r\n                        sx = {{width : 400}}>\r\n                        画像を選択する\r\n                      </Button>\r\n                    </label>\r\n                </Grid>\r\n                {/* <Item>画像2<ImageUpload/></Item>\r\n                <Item>画像3<ImageUpload/></Item> */}\r\n            </Grid>\r\n            <br/>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={12}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  gutterBottom\r\n                  sx = {{backgroundColor : \"#ffffff\",\r\n                         color : \"#000000\",\r\n                         padding: \"0.2rem\",\r\n                         borderLeft : \"solid #E64545 6px\"}}>\r\n                  作品タイトル\r\n                </Typography>\r\n                <Box\r\n                  sx={{\r\n                    width: 500,\r\n                    maxWidth: '100%',}}>\r\n                  <TextField\r\n                    fullWidth\r\n                    id           = \"recipetitle\"\r\n                    name         = \"recipetitle\"\r\n                    label        = \"入力してください\"\r\n                    defaultValue = \"\"\r\n                    onChange={e => \r\n                      setRecipeTitle(e.target.value)}/>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  gutterBottom\r\n                  sx = {{backgroundColor : \"#ffffff\",\r\n                         color : \"#000000\",\r\n                         padding: \"0.2rem\",\r\n                         borderLeft : \"solid #E64545 6px\"}}>\r\n                  カテゴリー：大項目\r\n                </Typography>\r\n                <FormControl fullWidth >\r\n                  <InputLabel id=\"category-label\">\r\n                    選択してください\r\n                  </InputLabel>\r\n                  {/* カテゴリー選択のセレクトボックス */}\r\n                  <Select\r\n                    labelId  = \"category-name-label\"\r\n                    id       = \"category-name\"\r\n                    value    = {selectcategory}\r\n                    onChange = {handleSelectChange}\r\n                    label    = \"選択してください\">\r\n                    {categorys.map((categorys) => (\r\n                      <MenuItem\r\n                        key   = {categorys}\r\n                        value = {categorys}>\r\n                        {categorys}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  gutterBottom\r\n                  sx = {{backgroundColor : \"#ffffff\",\r\n                         color : \"#000000\",\r\n                         padding: \"0.2rem\",\r\n                         borderLeft : \"solid #E64545 6px\"}}>\r\n                  カテゴリー：小項目\r\n                </Typography>\r\n                <FormControl fullWidth >\r\n                  <InputLabel id=\"detail-label\">\r\n                    選択してください\r\n                  </InputLabel>\r\n                  {/* カテゴリー選択のセレクトボックス */}\r\n                  <Select\r\n                    labelId  = \"detail-name-label\"\r\n                    id       = \"detail-name\"\r\n                    value    = {selectdetail}\r\n                    onChange = {handleDetailChange}\r\n                    label    = \"選択してください\">\r\n                    {detail.map((detail) => (\r\n                      <MenuItem\r\n                        key   = {detail}\r\n                        value = {detail}>\r\n                        {detail}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  gutterBottom\r\n                  sx = {{backgroundColor : \"#ffffff\",\r\n                         color : \"#000000\",\r\n                         padding: \"0.2rem\",\r\n                         borderLeft : \"solid #E64545 6px\"}}>\r\n                  制作費用\r\n                </Typography>\r\n                <Typography variant=\"h7\">\r\n                  ￥：\r\n                  <TextField\r\n                    id           = \"productionCost\"\r\n                    name         = \"productionCost\"\r\n                    size         = \"small\"\r\n                    type         = \"number\"\r\n                    label        = \"入力してください\"\r\n                    defaultValue = \"\"\r\n                    onChange={e => \r\n                      setProductionCost(e.target.value)}/>\r\n                  円\r\n                </Typography>\r\n              </Grid>\r\n                <br/><br/>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  gutterBottom\r\n                  sx = {{backgroundColor : \"#ffffff\",\r\n                         color : \"#000000\",\r\n                         padding: \"0.2rem\",\r\n                         borderLeft : \"solid #E64545 6px\"}}>\r\n                  制作期間\r\n                </Typography>\r\n                <Typography variant=\"h7\">\r\n                  約 ： \r\n                  <TextField\r\n                    id           = \"productionPeriod\"\r\n                    name         = \"productionPeriod\"\r\n                    size         = \"small\"\r\n                    label        = \"入力してください\"\r\n                    defaultValue = \"\"\r\n                    onChange={e => \r\n                      setProductionPeriod(e.target.value)}/>\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={12}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  gutterBottom\r\n                  sx = {{backgroundColor : \"#ffffff\",\r\n                         color : \"#000000\",\r\n                         padding: \"0.2rem\",\r\n                         borderLeft : \"solid #E64545 6px\"}}>\r\n                  作品コメント\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                    id       = \"memo\"\r\n                    label    = \"入力してください\"\r\n                    name     = \"memo\"\r\n                    multiline\r\n                    rows={6}\r\n                    defaultValue = \"\"\r\n                    onChange={e => \r\n                      setProductionMemo(e.target.value)}/>\r\n              </Grid>\r\n            </Grid>\r\n            {/* 画像選択の表示領域 */}\r\n            {/* <Stack\r\n                direction={{ xs: 'column', sm: 'row' }}\r\n                spacing={{ xs: 1, sm: 2, md: 10 }}>\r\n              //  <Item>タイトル画像<ImageUpload/></Item> \r\n                <Grid item xs={12} md={12}>\r\n                  <Avatar\r\n                    sx={{ width: 100, height: 100 }}\r\n                    // src={image ? URL.createObjectURL(image) : profile ? profile.image : \"\"}alt=\"\"/>\r\n                    src={image ? URL.createObjectURL(image) : defaultSrc}alt=\"\"/>\r\n                  <input\r\n                    id=\"image\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleChange}\r\n                    style={{ display: \"none\" }}/>\r\n                    <label htmlFor=\"image\">\r\n                      <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\" \r\n                        component=\"span\">\r\n                        画像を選択\r\n                      </Button>\r\n                    </label>\r\n                </Grid>\r\n                // <Item>画像2<ImageUpload/></Item>\r\n                // <Item>画像3<ImageUpload/></Item> \r\n                </Stack> */}\r\n\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={6}>\r\n                <Container align=\"center\">\r\n                  <PostPageButton\r\n                    id   = \"postreturn\"\r\n                    variant = \"outlined\"\r\n                    sx={{ mt: 1, mb: 2 }}\r\n                    fullWidth\r\n                    startIcon = {<ArrowBackIcon/>}\r\n                    link =\"/\"\r\n                    text = \"戻る\"/>\r\n                  </Container>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Container align=\"center\">\r\n                    <Button\r\n                      id   = \"postok\"\r\n                      variant=\"contained\"\r\n                      sx={{ mt: 1, mb: 2 }}\r\n                      fullWidth\r\n                      startIcon = {<EditIcon/>}\r\n                      onClick = {handleSubmit}>\r\n                        この内容で投稿する\r\n                    </Button>\r\n                  </Container>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n            {/* 投稿が成功した場合はアラートを出す */}\r\n            {success && <Alert severity=\"success\">投稿完了しました！</Alert>}\r\n            {/* 投稿が失敗した場合はアラートを出す */}\r\n            {error && <Alert severity=\"error\">{errormessage}</Alert>}\r\n          </Paper>\r\n        </Container>\r\n      </Container>\r\n      <Footer/>\r\n    </ThemeProvider>\r\n  );\r\n}","import   React ,\r\n       { useState }   from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport   Button       from '@mui/material/Button';\r\nimport   useLogout    from '../hooks/logOutUseAuth';\r\nimport   useProfile   from \"../../components/hooks/useProfile\"\r\n\r\nexport default function CategoryListButton(props){\r\n    const history = useHistory()\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n    const { logout } = useLogout()\r\n\r\n    const handleLogout = (id) => {\r\n        if(id === \"logout\"){\r\n            logout()\r\n            setOpen(true)\r\n            setAnchorEl(null)\r\n            console.log(\"ポップアップ出す\")\r\n        }else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                console.log(\"props.id が「logout」だったらログアウトする ⇒ \" , props.id)\r\n                // ログインしていなければ新規登録画面へ遷移する\r\n                if(props.id === \"logout\" || props.id === \"login\"){\r\n                    handleLogout(props.id)\r\n                }else if(!profile){\r\n                    history.push(\"/signup\")\r\n                }else{\r\n                    history.push(props.link)\r\n                }\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import React, \r\n      {useState,}     from \"react\";\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,\r\n        ListItemIcon,\r\n        MenuItem,\r\n        Menu ,}       from \"@mui/material\"\r\nimport CategoryListButton from './CategoryListButton';\r\nimport EditIcon       from '@mui/icons-material/Edit';\r\nimport HomeIcon       from '@mui/icons-material/Home';\r\nimport PersonAddIcon  from '@mui/icons-material/PersonAdd';\r\nimport LoginIcon      from '@mui/icons-material/Login';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\nimport LogoutIcon     from '@mui/icons-material/Logout';\r\nimport useProfile     from \"../../components/hooks/useProfile\"\r\nimport HeaderTitle    from '../HeaderTitle'\r\nimport IconButton     from '@mui/material/IconButton'\r\nimport StarIcon       from '@mui/icons-material/Star'\r\nimport BugReportIcon from '@mui/icons-material/BugReport'\r\n\r\nexport default function CategoryListHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // アバターアイコンがクリックされた時\r\n  const handleClickAvatar = (event) =>{\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n      <Box sx={{ flexGrow: 1 }} >\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar>\r\n          <HeaderTitle\r\n              variant   = \"h6\"\r\n              noWrap\r\n              component = \"div\"\r\n              sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n            <Box sx={{ flexGrow: 1 }}/>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n              {profile ? \r\n                <CategoryListButton\r\n                  text      = \"ホーム\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<HomeIcon/>}/>\r\n              : \"\" }\r\n              {profile ? \r\n                <CategoryListButton\r\n                  text      =\"投稿する\" \r\n                  link      = \"/postpage\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<EditIcon/>}/>\r\n                : \"\" }\r\n              {profile ? \r\n                <CategoryListButton\r\n                  text      = \"マイページ\" \r\n                  link      = {profile ? \"/profiles/\"+profile.uid : \"\"} \r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<PersonIcon/>}/>\r\n                  : \"\" }\r\n              {profile ? \r\n                <CategoryListButton\r\n                  id        = \"logout\"\r\n                  text      = \"ログアウト\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LogoutIcon/>}/>\r\n                : <CategoryListButton\r\n                  id        = \"login\"\r\n                  text      = \"ログイン\" \r\n                  link      = \"/login\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LoginIcon/>}/>}\r\n              {profile ? \r\n                <IconButton onClick={handleClickAvatar}>\r\n                  <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n                </IconButton>\r\n                  : <CategoryListButton\r\n                    text    = \"新規登録\" \r\n                    link    = \"/signup\"\r\n                    size    = \"large\"\r\n                    variant = \"contained\"\r\n                    sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                    startIcon = {<PersonAddIcon/>}/>}\r\n              </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n  )\r\n}\r\n","import   React, \r\n      {  useEffect , \r\n         useState }               from \"react\"\r\nimport { styled }                 from '@mui/material/styles';\r\nimport { useHistory }             from \"react-router-dom\"\r\nimport   ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\nimport   MuiAccordion             from '@mui/material/Accordion';\r\nimport   MuiAccordionSummary      from '@mui/material/AccordionSummary';\r\nimport   MuiAccordionDetails      from '@mui/material/AccordionDetails';\r\nimport { Typography,\r\n         Grid ,\r\n         Button,\r\n         Link , }                 from '@mui/material';\r\nimport { createTheme,\r\n         ThemeProvider }          from '@mui/material/styles'\r\nimport { collection,\r\n         getDocs , }              from \"firebase/firestore\"\r\nimport { db }                     from '../../firebase';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n\r\nconst collectionCategoryName = \"category\"\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  '&:not(:last-child)': {\r\n    borderBottom: 0,\r\n  },\r\n  '&:before': {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\"#ffffff\",\r\n  borderTop    : \"solid #E64545 1px\",\r\n  borderBottom : \"solid #E64545 1px\",\r\n  borderLeft   : \"solid #E64545 10px\",\r\n  borderRight  : \"solid #E64545 1px\",\r\n  borderRadius : 5,\r\n  flexDirection: 'row-reverse',\r\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n    transform: 'rotate(90deg)',\r\n  },\r\n  '& .MuiAccordionSummary-content': {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\nexport default function CategoryListAccordion() {\r\n  const [expanded, setExpanded] = useState('panel1')\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  }\r\n\r\n  const [categorys, setCategorys] = useState([])\r\n  const [detail, setDetail] = useState([])\r\n  const categoryAry = []\r\n  const detailAry = []\r\n  const history = useHistory()\r\n\r\n  // firestoreからcategoryの取得\r\n  const fetchCategoryData = () => {\r\n    getDocs(collection(db, collectionCategoryName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // 重複していない要素だけを追加する\r\n        if(!categoryAry.includes(doc.data().category)){\r\n            // 「その他」は末尾に格納する\r\n            if(doc.data().category !== \"その他\"){\r\n              categoryAry.unshift(\r\n                doc.data().category)\r\n            }else{\r\n              categoryAry.push(\r\n                doc.data().category)\r\n            }          \r\n          }\r\n        })\r\n      }).then(()=>{\r\n        setCategorys([...categoryAry])\r\n      })}\r\n\r\n  // firestoreからdetailの取得\r\n  const fetchDetailData = () => {\r\n    getDocs(collection(db, collectionCategoryName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // 「その他」は末尾に格納する\r\n        if(doc.data().detail !== \"その他\"){\r\n          detailAry.unshift(\r\n            doc.data())\r\n        }else{\r\n          detailAry.push(\r\n            doc.data())\r\n        }})\r\n      }).then(()=>{\r\n        setDetail([...detailAry])\r\n      })}\r\n\r\n  useEffect(() => {\r\n    fetchCategoryData()\r\n    fetchDetailData()\r\n  },[])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {categorys.map((categorys) => (\r\n        <Accordion expanded={expanded === `panel1`} onChange={handleChange(`panel1`)}>\r\n          <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n            <Link href={`/categorylist/${categorys}`} fontSize={\"18px\"} color = \"#000000\">\r\n              <strong>{categorys}</strong>\r\n            </Link>\r\n          </AccordionSummary>\r\n          <Grid container spacing={0} >\r\n            {detail.map((detail) => \r\n              ( categorys === detail.category ?\r\n                <Grid item xs={3}>\r\n                  <AccordionDetails>\r\n                    <Button \r\n                      id = {detail.detail}\r\n                      variant='outlined'\r\n                      sx = {{fontSize:11 ,\r\n                             borderRadius : 5,\r\n                             color:\"#a0522d\" , \r\n                             width : 170,\r\n                             backgroundColor : \"#faf0e6\"}}\r\n                      onClick = {() => {\r\n                        history.push(`/categorylist/${categorys}_${detail.detail}`)\r\n                      }}>\r\n                      {detail.detail}\r\n                      <ArrowForwardIosIcon sx = {{fontSize:16}}/>\r\n                    </Button>\r\n                  </AccordionDetails>\r\n                </Grid>\r\n              : \"\" )\r\n            )}\r\n          </Grid>\r\n        </Accordion>\r\n      ))}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import   React, \r\n       { useState,}          from \"react\"\r\nimport { Box ,\r\n         Typography,\r\n         Container , }       from '@mui/material'\r\nimport { createTheme,\r\n         ThemeProvider }     from '@mui/material/styles'\r\nimport { useHistory,\r\n         withRouter }        from 'react-router'\r\nimport   CategoryListHeader      from './CategoryListHeader'\r\nimport   CategoryListAccordion   from './CategoryListAccordion'\r\nimport   Footer              from '../Footer'\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nfunction CategoryList(props) {\r\n  const history = useHistory()\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Container maxWidth>\r\n            <CategoryListHeader/>\r\n        </Container>\r\n        <Container maxWidth = \"md\" >\r\n            <Box sx={{ flexGrow: 1, m: 2, pt: 4, pb: 4 }}>\r\n                <Container maxWidth>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h5\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                borderTop: \"double #E64545 6px\",\r\n                                borderBottom: \"double #E64545 6px\",\r\n                                pt : 5 , \r\n                                pb : 1 ,}}>\r\n                        作品のカテゴリー一覧\r\n                    </Typography>\r\n                    <br/>\r\n                    <CategoryListAccordion/>\r\n                </Container>\r\n            </Box>\r\n        </Container>\r\n      {/* Footer */}\r\n      <Footer/>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(CategoryList);\r\n","import   React ,\r\n       { useState }   from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport   Button       from '@mui/material/Button';\r\nimport   useLogout    from '../hooks/logOutUseAuth';\r\nimport   useProfile   from \"../../components/hooks/useProfile\"\r\n\r\nexport default function DetailListButton(props){\r\n    const history = useHistory()\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n    const { logout } = useLogout()\r\n\r\n    const handleLogout = (id) => {\r\n        if(id === \"logout\"){\r\n            logout()\r\n            setOpen(true)\r\n            setAnchorEl(null)\r\n            console.log(\"ポップアップ出す\")\r\n        }else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                console.log(\"props.id が「logout」だったらログアウトする ⇒ \" , props.id)\r\n                // ログインしていなければ新規登録画面へ遷移する\r\n                if(props.id === \"logout\" || props.id === \"login\"){\r\n                    handleLogout(props.id)\r\n                }else if(!profile){\r\n                    history.push(\"/signup\")\r\n                }else{\r\n                    history.push(props.link)\r\n                }\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import React, \r\n      {useState,}     from \"react\";\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,\r\n        ListItemIcon,\r\n        MenuItem,\r\n        Menu ,}       from \"@mui/material\"\r\nimport DetailListButton from './DetailListButton';\r\nimport EditIcon       from '@mui/icons-material/Edit';\r\nimport HomeIcon       from '@mui/icons-material/Home';\r\nimport PersonAddIcon  from '@mui/icons-material/PersonAdd';\r\nimport LoginIcon      from '@mui/icons-material/Login';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\nimport LogoutIcon     from '@mui/icons-material/Logout';\r\nimport useProfile     from \"../../components/hooks/useProfile\"\r\nimport HeaderTitle    from '../HeaderTitle'\r\nimport IconButton     from '@mui/material/IconButton'\r\nimport StarIcon       from '@mui/icons-material/Star'\r\nimport BugReportIcon from '@mui/icons-material/BugReport'\r\n\r\nexport default function DetailListHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // アバターアイコンがクリックされた時\r\n  const handleClickAvatar = (event) =>{\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n      <Box sx={{ flexGrow: 1 }} >\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar>\r\n          <HeaderTitle\r\n              variant   = \"h6\"\r\n              noWrap\r\n              component = \"div\"\r\n              sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n            <Box sx={{ flexGrow: 1 }}/>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n              {profile ? \r\n                <DetailListButton\r\n                  text      = \"ホーム\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<HomeIcon/>}/>\r\n              : \"\" }\r\n              {profile ? \r\n                <DetailListButton\r\n                  text      =\"投稿する\" \r\n                  link      = \"/postpage\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<EditIcon/>}/>\r\n                : \"\" }\r\n              {profile ? \r\n                <DetailListButton\r\n                  text      = \"マイページ\" \r\n                  link      = {profile ? \"/profiles/\"+profile.uid : \"\"} \r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<PersonIcon/>}/>\r\n                  : \"\" }\r\n              {profile ? \r\n                <DetailListButton\r\n                  id        = \"logout\"\r\n                  text      = \"ログアウト\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LogoutIcon/>}/>\r\n                : <DetailListButton\r\n                  id        = \"login\"\r\n                  text      = \"ログイン\" \r\n                  link      = \"/login\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LoginIcon/>}/>}\r\n              {profile ? \r\n                <IconButton onClick={handleClickAvatar}>\r\n                  <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n                </IconButton>\r\n                  : <DetailListButton\r\n                    text    = \"新規登録\" \r\n                    link    = \"/signup\"\r\n                    size    = \"large\"\r\n                    variant = \"contained\"\r\n                    sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                    startIcon = {<PersonAddIcon/>}/>}\r\n              </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n  )\r\n}\r\n","import React ,\r\n      { useState,}    from \"react\"\r\nimport { styled }     from '@mui/material/styles'\r\nimport Box            from '@mui/material/Box'\r\nimport ButtonBase     from '@mui/material/ButtonBase'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport ImageListItemBar from '@mui/material/ImageListItemBar'\r\n\r\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\r\n  position: 'relative',\r\n  height: 100,\r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '100% !important', // Overrides inline-style\r\n    height: 100,\r\n  },\r\n  '&:hover, &.Mui-focusVisible': {\r\n    zIndex: 1,\r\n    '& .MuiImageBackdrop-root': {\r\n      opacity: 0.25,\r\n    },\r\n    '& .MuiImageMarked-root': {\r\n      opacity: 0,\r\n    },\r\n    '& .MuiTypography-root': {\r\n      border: '4px solid currentColor',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ImageSrc = styled('span')({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center 40%',\r\n});\r\n\r\nconst Image = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\nconst ImageBackdrop = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"#ddd\",\r\n  opacity: 0.1,\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nconst ImageMarked = styled('span')(({ theme }) => ({\r\n  height: 3,\r\n  width: 18,\r\n  backgroundColor: theme.palette.common.white,\r\n  position: 'absolute',\r\n  bottom: -2,\r\n  left: 'calc(50% - 9px)',\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nexport default function DetailListImageButton(props) {\r\n    // タイトル表示\r\n    const [titlename, setTitleName] = useState(\"\");\r\n    var text  = props.text\r\n    var recipeNum = props.info.recipenum\r\n    var info = props.info\r\n    const history = useHistory();\r\n    // タイトル変更\r\n    var changeTitle = (props) => {\r\n        setTitleName(info.title)\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexWrap: 'wrap', minWidth: 100, width: '100%' }}>\r\n      <ImageButton\r\n        focusRipple\r\n        key     = {props.imgURL}\r\n        style   = {props.style}\r\n        text    = {props.text}\r\n        onClick = {() => {\r\n            changeTitle()\r\n            console.log(recipeNum)\r\n            // 作品番号(recepeNum)をアドレス末尾に付与\r\n            history.push(`/recipedetails/${recipeNum}`)}}>\r\n        <ImageSrc style={{ backgroundImage: `url(${props.imgURL})` }} />\r\n          {/* titleとsubtitleが存在する場合は、ImageListItemBarを表示する */}\r\n        {props.title && props.subtitle ?\r\n          <ImageListItemBar\r\n            title={props.title}\r\n            subtitle={props.subtitle}/>\r\n            : \"\"}\r\n        <ImageBackdrop className={props.className} />\r\n      </ImageButton>\r\n    </Box>\r\n  );\r\n}\r\n","import  React ,\r\n      { useEffect,\r\n        useState, }         from \"react\";\r\nimport { db }               from '../../firebase';\r\nimport { doc , \r\n         collection,\r\n         getDocs ,\r\n         updateDoc ,}       from 'firebase/firestore';\r\nimport { Typography , \r\n         Box ,\r\n         Grid,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         Button,\r\n         Link,}             from \"@mui/material\"\r\nimport { format ,}          from \"date-fns\"\r\nimport   useProfile         from \"../hooks/useProfile\"\r\nimport   Divider            from '@mui/material/Divider';\r\nimport   Paper              from '@mui/material/Paper';\r\nimport   Stack              from '@mui/material/Stack';\r\nimport { styled }           from '@mui/material/styles';\r\nimport   DetailListImageButton  from './DetailListImageButton'\r\nimport   ThumbUpAltIcon     from '@mui/icons-material/ThumbUpAlt';\r\nimport   StarsIcon          from '@mui/icons-material/Stars';\r\nimport { firebaseApp }      from \"../../firebase\";\r\n\r\nconst collectionRecipeName    = \"recipe\"\r\nconst collectionGoodName      = \"/good\"\r\nconst collectionBookMarkName  = \"/bookmark\"\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\nconst theme = createTheme()\r\n\r\nexport default function DetailListImageList(props) {\r\n    \r\n    const [recipe, setRecipe] = useState([]);\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    const recipeAry = [];\r\n\r\n    // firestoreからレシピ情報の取得\r\n    const fetchRecipeData = () => {\r\n        var goodBuffCount = 0\r\n        var bookmarkBuffCount = 0\r\n        const firestore = firebaseApp.firestore\r\n        getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n        querySnapshot.forEach((document) => {\r\n            // goodコレクションの個数を取得\r\n            const docGoodRef = doc(firestore, collectionRecipeName , document.id)\r\n            getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionGoodName)).then((querySnapshot)=>{\r\n            // 初期化\r\n            goodBuffCount = 0\r\n            querySnapshot.forEach((documentGood) => {\r\n                goodBuffCount = goodBuffCount + 1\r\n            })\r\n            updateDoc(docGoodRef , {\r\n                good : goodBuffCount,\r\n            })\r\n            })\r\n            // bookmarkコレクションの個数を取得\r\n            getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionBookMarkName)).then((querySnapshot)=>{\r\n            // 初期化\r\n            bookmarkBuffCount = 0  \r\n            querySnapshot.forEach((documentBookMark) => {\r\n                bookmarkBuffCount = bookmarkBuffCount + 1\r\n            })\r\n            updateDoc(docGoodRef , {\r\n                bookmark : bookmarkBuffCount,\r\n            })\r\n            })\r\n            recipeAry.push({\r\n            id : document.id,\r\n            good : 0,\r\n            bookmark : 0,\r\n            ...document.data(),\r\n            })\r\n        })\r\n        }).then(()=>{\r\n        console.log(\"recipeAry : \" , recipeAry)\r\n        setRecipe([...recipeAry])\r\n        // オブジェクト内の日付(createdAt)をキーに昇順にソートする\r\n        recipeAry.sort(function(first , second){\r\n            return (format(first.createdAt.toDate() , \"yyyyMMdd\") < format(second.createdAt.toDate() , \"yyyyMMdd\")) ? -1 : 1\r\n        })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRecipeData()\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n        <Grid item xs={12} >\r\n        {recipe.sort().map((recipe) => (\r\n            // カテゴリー(detail)が一致している場合はdetailを表示する\r\n            (recipe.detail === props.GetDetail  ? \r\n                <Box \r\n                key={recipe.id} \r\n                sx={{\r\n                    display: \"flex\",\r\n                    my: 2,\r\n                    gap: 2,\r\n                    flexGrow: 1, m: 2,}}>\r\n                    <Box>\r\n                        <DetailListImageButton\r\n                            imgURL = {recipe.image.url}\r\n                            info   = {recipe}\r\n                            className   = \"MuiImageBackdrop-root\"\r\n                            link   = \"/recipedetail/\"\r\n                            style  = {{width: \"100px\"}}/>\r\n                    </Box>\r\n                    <Box sx={{ ml: 2 }}>\r\n                        {/* 作品タイトルの表示 */}\r\n                        <Grid container spacing={0} >\r\n                        <Grid item xs= {10}>\r\n                        <Typography sx={{ fontSize: 22}}>\r\n                            {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                            <Link href={`/recipedetails/${recipe.recipenum}`} color=\"#000000\">\r\n                            <strong>{recipe.title}</strong>\r\n                            </Link>\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid item xs= {1} >\r\n                        {/* いいねボタン表示/いいね数表示 */}\r\n                        <ThumbUpAltIcon sx={{ color : \"#ffa500\" ,fontSize: 20}}/>\r\n                            <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                            {recipe.good}\r\n                            </Typography>\r\n                        </Grid>\r\n                        {/* お気に入りボタン表示/お気に入り数表示 */}\r\n                        <Grid item xs= {1}>\r\n                        <StarsIcon sx={{ color : \"#a0522d\" }}/>\r\n                        <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                            {recipe.bookmark}\r\n                        </Typography>\r\n                        </Grid>\r\n                        {/* コメント表示/コメント数表示 */}\r\n                        {/* ★後日実装 */}\r\n                        {/* <Grid item xs= {1}>\r\n                        <InsertCommentIcon sx={{ color : \"#1e90ff\" }}/>\r\n                        <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                            XXX\r\n                        </Typography>\r\n                        </Grid> */}\r\n                        </Grid>\r\n                        {/* 作品メモの表示 */}\r\n                        <Grid>\r\n                        <Typography \r\n                            sx={{ p: 1, \r\n                                fontSize: 14 , \r\n                                maxWidth : 600 ,\r\n                                minWidth : 600 , \r\n                                background: \"#dddddd\" ,\r\n                                color:\"#000000\",\r\n                                borderRadius : 3,}}>\r\n                            {recipe.memo}\r\n                            <Typography\r\n                            sx={{ fontSize: 12 ,color:\"#000000\" }}\r\n                            align = \"right\">\r\n                            投稿した日：{format(recipe.createdAt.toDate(), \"yyyy年MM月dd日\")}\r\n                            </Typography>\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Stack\r\n                        direction=\"row\"\r\n                        divider={<Divider orientation=\"vertical\" flexItem />}\r\n                        spacing={2}>\r\n                            {/* 投稿日時の表示 */}\r\n                        <Item \r\n                            sx = {{\r\n                            minWidth : 250,\r\n                            maxWidth : 250,}}>\r\n                            {/* 投稿したユーザーの表示 */}\r\n                            {/* uidをアドレスの末尾に付与して遷移する */}\r\n                            <Typography\r\n                            sx={{ fontSize: 12 ,color:\"#000000\" }}\r\n                            align = \"left\">\r\n                            <Link href={`/profiles/${recipe.image.uid}`} color=\"#000000\">\r\n                                {recipe.image.user}\r\n                            </Link>\r\n                            </Typography>\r\n                        </Item>\r\n                        {/* 制作費用の表示 */}\r\n                        <Item sx = {{\r\n                            minWidth : 250,\r\n                            maxWidth : 250,}}>\r\n                            <Typography\r\n                            sx={{ fontSize: 12 ,color:\"#000000\" }}\r\n                            align = \"left\">\r\n                            制作費用：<strong>{Number(recipe.cost).toLocaleString()}</strong> 円\r\n                            </Typography>\r\n                        </Item>\r\n                        </Stack>\r\n                    </Box>\r\n                </Box>\r\n                // getDetailの中身が無い場合は、categoryが一致する作品を表示する\r\n            : recipe.category === props.GetCategory && !props.GetDetail ? \r\n            <Box \r\n                key={recipe.id} \r\n                sx={{\r\n                    display: \"flex\",\r\n                    my: 2,\r\n                    gap: 2,\r\n                    flexGrow: 1, m: 2,}}>\r\n                    <Box>\r\n                        <DetailListImageButton\r\n                            imgURL = {recipe.image.url}\r\n                            info   = {recipe}\r\n                            className   = \"MuiImageBackdrop-root\"\r\n                            link   = \"/recipedetail/\"\r\n                            style  = {{width: \"100px\"}}/>\r\n                    </Box>\r\n                    <Box sx={{ ml: 2 }}>\r\n                        {/* 作品タイトルの表示 */}\r\n                        <Grid container spacing={0} >\r\n                        <Grid item xs= {10}>\r\n                        <Typography sx={{ fontSize: 22}}>\r\n                            {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                            <Link href={`/recipedetails/${recipe.recipenum}`} color=\"#000000\">\r\n                            <strong>{recipe.title}</strong>\r\n                            </Link>\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid item xs= {1} >\r\n                        {/* いいねボタン表示/いいね数表示 */}\r\n                        <ThumbUpAltIcon sx={{ color : \"#ffa500\" ,fontSize: 20}}/>\r\n                            <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                            {recipe.good}\r\n                            </Typography>\r\n                        </Grid>\r\n                        {/* お気に入りボタン表示/お気に入り数表示 */}\r\n                        <Grid item xs= {1}>\r\n                        <StarsIcon sx={{ color : \"#a0522d\" }}/>\r\n                        <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                            {recipe.bookmark}\r\n                        </Typography>\r\n                        </Grid>\r\n                        {/* コメント表示/コメント数表示 */}\r\n                        {/* ★後日実装 */}\r\n                        {/* <Grid item xs= {1}>\r\n                        <InsertCommentIcon sx={{ color : \"#1e90ff\" }}/>\r\n                        <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                            XXX\r\n                        </Typography>\r\n                        </Grid> */}\r\n                        </Grid>\r\n                        {/* 作品メモの表示 */}\r\n                        <Grid>\r\n                        <Typography \r\n                            sx={{ p: 1, \r\n                                fontSize: 14 , \r\n                                maxWidth : 600 ,\r\n                                minWidth : 600 , \r\n                                background: \"#dddddd\" ,\r\n                                color:\"#000000\",\r\n                                borderRadius : 3,}}>\r\n                            {recipe.memo}\r\n                            <Typography\r\n                            sx={{ fontSize: 12 ,color:\"#000000\" }}\r\n                            align = \"right\">\r\n                            投稿した日：{format(recipe.createdAt.toDate(), \"yyyy年MM月dd日\")}\r\n                            </Typography>\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Stack\r\n                        direction=\"row\"\r\n                        divider={<Divider orientation=\"vertical\" flexItem />}\r\n                        spacing={2}>\r\n                            {/* 投稿日時の表示 */}\r\n                        <Item \r\n                            sx = {{\r\n                            minWidth : 250,\r\n                            maxWidth : 250,}}>\r\n                            {/* 投稿したユーザーの表示 */}\r\n                            {/* uidをアドレスの末尾に付与して遷移する */}\r\n                            <Typography\r\n                            sx={{ fontSize: 12 ,color:\"#000000\" }}\r\n                            align = \"left\">\r\n                            <Link href={`/profiles/${recipe.image.uid}`} color=\"#000000\">\r\n                                {recipe.image.user}\r\n                            </Link>\r\n                            </Typography>\r\n                        </Item>\r\n                        {/* 制作費用の表示 */}\r\n                        <Item sx = {{\r\n                            minWidth : 250,\r\n                            maxWidth : 250,}}>\r\n                            <Typography\r\n                            sx={{ fontSize: 12 ,color:\"#000000\" }}\r\n                            align = \"left\">\r\n                            制作費用：<strong>{Number(recipe.cost).toLocaleString()}</strong> 円\r\n                            </Typography>\r\n                        </Item>\r\n                        </Stack>\r\n                    </Box>\r\n                </Box> : \"\")))}\r\n        </Grid>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import   React, \r\n       { useState,\r\n         useEffect,}         from \"react\"\r\nimport { Box ,\r\n         Typography,\r\n         Container , }       from '@mui/material'\r\nimport { createTheme,\r\n         ThemeProvider }     from '@mui/material/styles'\r\nimport { useHistory,\r\n         withRouter }        from 'react-router'\r\nimport   DetailListHeader    from './DetailListHeader'\r\nimport   DetailListImageList from './DetailListImageList'\r\nimport   Footer              from '../Footer'\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nfunction DetailList(props) {\r\n  const history = useHistory()\r\n  var categoryAry = decodeURI(window.location.pathname).split(\"/\")\r\n  const [getcategory , setGetCategory] = useState()\r\n  const [getdetail , setGetDetail] = useState()\r\n\r\n  // pathnameからcategoryとdetailを取得\r\n  const getCategoryDetail = () =>{\r\n    // categoryのみの場合もあるので、\"_\"で切り分け\r\n    if(categoryAry[2].indexOf(\"_\") != -1){\r\n      setGetCategory(categoryAry[2].substring(0,categoryAry[2].indexOf(\"_\")))\r\n      setGetDetail(categoryAry[2].substring(categoryAry[2].indexOf(\"_\")+1))\r\n    }else{\r\n      setGetCategory(categoryAry[2])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategoryDetail()\r\n  },[]);\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Container maxWidth>\r\n            <DetailListHeader/>\r\n        </Container>\r\n        <Container maxWidth = \"md\" >\r\n            <Box sx={{ flexGrow: 1, m: 2, pt: 4, pb: 4 }}>\r\n                <Container maxWidth>\r\n                    {getdetail ? \r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h5\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                borderTop: \"double #E64545 6px\",\r\n                                borderBottom: \"double #E64545 6px\",\r\n                                pt : 5 , \r\n                                pb : 1 ,}}>\r\n                        \"{getdetail}\"に関する作品の検索結果\r\n                    </Typography>\r\n                    : <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h5\"\r\n                    align=\"left\"\r\n                    color=\"text.primary\"\r\n                    gutterBottom\r\n                    sx = {{backgroundColor : \"#ffffff\",\r\n                            color : \"#000000\",\r\n                            padding: \"1rem 2rem\",\r\n                            borderTop: \"double #E64545 6px\",\r\n                            borderBottom: \"double #E64545 6px\",\r\n                            pt : 5 , \r\n                            pb : 1 ,}}>\r\n                    \"{getcategory}\"に関する作品の検索結果\r\n                </Typography> }\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h5\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                    </Typography>\r\n                    <DetailListImageList\r\n                      GetCategory = {getcategory}\r\n                      GetDetail   = {getdetail}/>\r\n                </Container>\r\n            </Box>\r\n        </Container>\r\n      {/* Footer */}\r\n      <Footer/>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(DetailList);\r\n","import React          from 'react'\r\nimport Button         from '@mui/material/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function RecipeDetailButton(props){\r\n    const history = useHistory();\r\n    return(\r\n        <Button \r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disabled  = {props.disabled}\r\n            fullWidth = {props.fullWidth}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            padding   = {props.padding}\r\n            onClick={() => {\r\n                history.push(props.link);\r\n                }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import * as React     from 'react';\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,} from \"@mui/material\"\r\nimport RecipeDetailButton from './RecipeDetailsButton';\r\nimport HeaderTitle    from '../HeaderTitle';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport useProfile from \"../hooks/useProfile\"\r\n\r\nexport default function MainpageHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }} >\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <HeaderTitle\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            {/* <ProfileButton\r\n              text      =\"操作説明\" \r\n              link      = \"/operation\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<FeedIcon/>}/> */}\r\n            <RecipeDetailButton\r\n              text      =\"ホーム\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<HomeIcon/>}\r\n              sx        = {{\"&:hover\": {background: \"#E64545\"}}}/>\r\n            {/* <ProfileButton\r\n              id        = \"logout\"\r\n              text      = \"ログアウト\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<LogoutIcon/>}/> */}\r\n            <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React ,\r\n      { useState,}    from \"react\"\r\nimport { styled }     from '@mui/material/styles'\r\nimport Box            from '@mui/material/Box'\r\nimport ButtonBase     from '@mui/material/ButtonBase'\r\nimport { useHistory,\r\n         withRouter } from \"react-router-dom\"\r\nimport ImageListItemBar from '@mui/material/ImageListItemBar'\r\nimport { WindowSharp } from \"@mui/icons-material\"\r\n\r\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\r\n  position: 'relative',\r\n  height: 100,\r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '100% !important', // Overrides inline-style\r\n    height: 100,\r\n  },\r\n  '&:hover, &.Mui-focusVisible': {\r\n    zIndex: 1,\r\n    '& .MuiImageBackdrop-root': {\r\n      opacity: 0.25,\r\n    },\r\n    '& .MuiImageMarked-root': {\r\n      opacity: 0,\r\n    },\r\n    '& .MuiTypography-root': {\r\n      border: '4px solid currentColor',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ImageSrc = styled('span')({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center 40%',\r\n});\r\n\r\nconst Image = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\nconst ImageBackdrop = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"#ddd\",\r\n  opacity: 0.1,\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nconst ImageMarked = styled('span')(({ theme }) => ({\r\n  height: 3,\r\n  width: 18,\r\n  backgroundColor: theme.palette.common.white,\r\n  position: 'absolute',\r\n  bottom: -2,\r\n  left: 'calc(50% - 9px)',\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nfunction RecipeDetailsImageButton(props) {\r\n  // タイトル表示\r\n  const [titlename, setTitleName] = useState(\"\");\r\n  var text  = props.text\r\n  var recipeNum = props.info.recipenum\r\n  var info = props.info\r\n  const history = useHistory()\r\n  // タイトル変更\r\n  var changeTitle = (props) => {\r\n      setTitleName(info.title)\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexWrap: 'wrap', minWidth: 100, width: '100%' }}>\r\n      <ImageButton\r\n        focusRipple\r\n        key     = {props.imgURL}\r\n        style   = {props.style}\r\n        text    = {props.text}\r\n        onClick = {() => {\r\n            changeTitle()\r\n            console.log(\"★\",recipeNum)\r\n            // 作品番号(recepeNum)をアドレス末尾に付与\r\n            // 1回ホーム画面への遷移をかませる\r\n            history.push(\"/\")\r\n            setTimeout(() => {\r\n              history.push(`/recipedetails/${recipeNum}`)\r\n            },1)\r\n            }}>\r\n        <ImageSrc style={{ backgroundImage: `url(${props.imgURL})` }} />\r\n          {/* titleとsubtitleが存在する場合は、ImageListItemBarを表示する */}\r\n        {props.title && props.subtitle ?\r\n          <ImageListItemBar\r\n            title={props.title}\r\n            subtitle={props.subtitle}/>\r\n            : \"\"}\r\n        <ImageBackdrop className={props.className} />\r\n      </ImageButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default withRouter(RecipeDetailsImageButton);\r\n","import  React ,\r\n      { useEffect,\r\n        useState, }         from \"react\";\r\nimport { db }               from '../../firebase';\r\nimport { doc , \r\n         collection,\r\n         getDocs ,\r\n         updateDoc ,}       from 'firebase/firestore';\r\nimport { Typography , \r\n         Box ,\r\n         Grid,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         Link,\r\n         Button,}             from \"@mui/material\"\r\nimport { format ,}          from \"date-fns\"\r\nimport   useProfile         from \"../hooks/useProfile\"\r\nimport   Paper              from '@mui/material/Paper';\r\nimport { styled }           from '@mui/material/styles';\r\nimport   RecipeDetailsImageButton  from './RecipeDetailsImageButton'\r\nimport   ThumbUpAltIcon     from '@mui/icons-material/ThumbUpAlt';\r\nimport   StarsIcon          from '@mui/icons-material/Stars';\r\nimport { firebaseApp }      from \"../../firebase\";\r\nimport { Receipt } from \"@mui/icons-material\";\r\n\r\nconst collectionRecipeName    = \"recipe\"\r\nconst collectionGoodName      = \"/good\"\r\nconst collectionBookMarkName  = \"/bookmark\"\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\nconst theme = createTheme()\r\n\r\nexport default function RecipeDetailsImageModule(props) {\r\n  const [recipe, setRecipe] = useState([]);\r\n\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const recipeAry = [];\r\n\r\n  // firestoreからレシピ情報の取得\r\n  const fetchRecipeData = () => {\r\n    var goodBuffCount = 0\r\n    var bookmarkBuffCount = 0\r\n    const firestore = firebaseApp.firestore\r\n    getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((document) => {\r\n        // goodコレクションの個数を取得\r\n        const docGoodRef = doc(firestore, collectionRecipeName , document.id)\r\n        getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionGoodName)).then((querySnapshot)=>{\r\n          // 初期化\r\n          goodBuffCount = 0\r\n          querySnapshot.forEach((documentGood) => {\r\n            goodBuffCount = goodBuffCount + 1\r\n          })\r\n          updateDoc(docGoodRef , {\r\n            good : goodBuffCount,\r\n          })\r\n        })\r\n        // bookmarkコレクションの個数を取得\r\n        getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionBookMarkName)).then((querySnapshot)=>{\r\n          // 初期化\r\n          bookmarkBuffCount = 0  \r\n          querySnapshot.forEach((documentBookMark) => {\r\n            bookmarkBuffCount = bookmarkBuffCount + 1\r\n          })\r\n          updateDoc(docGoodRef , {\r\n            bookmark : bookmarkBuffCount,\r\n          })\r\n        })\r\n        recipeAry.push({\r\n          id : document.id,\r\n          good : 0,\r\n          bookmark : 0,\r\n          ...document.data(),\r\n        })\r\n      })\r\n    }).then(()=>{\r\n      console.log(\"recipeAry : \" , recipeAry)\r\n      setRecipe([...recipeAry])\r\n      // オブジェクト内の日付(createdAt)をキーに昇順にソートする\r\n      recipeAry.sort(function(first , second){\r\n        return (format(first.createdAt.toDate() , \"yyyyMMdd\") < format(second.createdAt.toDate() , \"yyyyMMdd\")) ? -1 : 1\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecipeData()\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container spacing={0} >\r\n      {recipe.sort().map((recipe) => (\r\n            // カテゴリー(detail)が一致していて、表示している作品以外の投稿を表示する\r\n            (recipe.detail === props.detail && recipe.recipenum !== props.recipeNum ? \r\n              <Grid item xs={3}>\r\n                <Box \r\n                  key={recipe.id} \r\n                  sx={{\r\n                    display: \"flex\",\r\n                    pt : 2,\r\n                    pb : 2,\r\n                    pl : 1,\r\n                    pr : 1,\r\n                    m: 1,\r\n                    maxWidth : 185,\r\n                    borderTop    : \"solid #dddddd 1px\",\r\n                    borderBottom : \"solid #dddddd 1px\",\r\n                    borderLeft   : \"solid #dddddd 1px\",\r\n                    borderRight  : \"solid #dddddd 1px\",}}>\r\n                  <Box>\r\n                    <RecipeDetailsImageButton\r\n                        imgURL = {recipe.image.url}\r\n                        info   = {recipe}\r\n                        className   = \"MuiImageBackdrop-root\"\r\n                        link   = \"/recipedetail/\"\r\n                        style  = {{width: \"167px\",height:\"167px\"}}/>\r\n                      <Typography sx={{ fontSize: 14}}>\r\n                        {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                        <Button \r\n                          sx = {{fontSize:11 ,\r\n                                  borderRadius : 2,\r\n                                  color:\"#ffffff\" , \r\n                                  backgroundColor : \"#E64545\",\r\n                                  height : 20,\r\n                                  \"&:hover\": {\r\n                                    background: \"#E64545\"},}}>\r\n                          {recipe.detail}\r\n                        </Button>\r\n                      </Typography>\r\n                      <Typography sx={{ fontSize: 14}}>\r\n                        {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                        <Link href={`/recipedetails/${recipe.recipenum}`} color=\"#000000\" underline=\"none\">\r\n                          <strong>{recipe.title}</strong>\r\n                        </Link>\r\n                      </Typography>\r\n                      {/* 投稿したユーザーの表示 */}\r\n                      {/* uidをアドレスの末尾に付与して遷移する */}\r\n                      <Typography\r\n                        sx={{ fontSize: 9 ,color:\"#000000\" }}\r\n                        align = \"right\">\r\n                        <Link href={`/profiles/${recipe.image.uid}`} color=\"#000000\" underline=\"none\">\r\n                          {recipe.image.user}\r\n                        </Link>\r\n                      </Typography>\r\n                      <Grid container spacing={0} >\r\n                        <Grid item xs= {9} align = \"right\">\r\n                          {/* いいねボタン表示/いいね数表示 */}\r\n                          <ThumbUpAltIcon sx={{ color : \"#ffa500\" ,fontSize: 13}}/>\r\n                            <Typography color=\"#000000\" variant=\"caption\" fontSize={13}>\r\n                              {recipe.good}\r\n                            </Typography>\r\n                        </Grid>\r\n                        {/* お気に入りボタン表示/お気に入り数表示 */}\r\n                        <Grid item xs= {3} align = \"right\">\r\n                          <StarsIcon sx={{ color : \"#a0522d\" ,fontSize: 13}}/>\r\n                          <Typography color=\"#000000\" variant=\"caption\" fontSize={13}>\r\n                            {recipe.bookmark}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n        : \"\")))}\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React, \r\n      { useEffect,\r\n        useState,\r\n        useRef ,}           from \"react\"\r\nimport { db }               from '../../firebase'\r\nimport {firebaseApp }       from \"../../firebase\"\r\nimport { collection,\r\n         deleteDoc,\r\n         doc ,\r\n         getDocs ,\r\n         addDoc ,\r\n         Timestamp ,}       from 'firebase/firestore'\r\nimport { Alert ,\r\n         Avatar ,\r\n         Typography , \r\n         Box ,\r\n         Grid,\r\n         Stack ,\r\n         TextField,\r\n         Button,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         Tooltip ,\r\n         CssBaseline ,\r\n         IconButton , }     from \"@mui/material\"\r\nimport { format ,\r\n         formatDistance,  } from \"date-fns\"\r\nimport { ja }               from \"date-fns/locale\"\r\nimport useProfile           from \"../hooks/useProfile\"\r\nimport DeleteIcon           from '@mui/icons-material/Delete'\r\nimport ChatBubbleIcon       from '@mui/icons-material/ChatBubble';\r\nimport store                from '../../store/index';\r\nimport { useHistory }       from \"react-router-dom\"\r\n\r\nconst collectionMessageName = \"message\"\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nfunction App() {\r\n  // 追加\r\n  const [message, setMessage] = useState([])\r\n  const [sendmessage , setSendMessage] = useState(\"\")\r\n  const [error, setError] = useState(false)\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const messageAry = [];\r\n  const bottomRef = useRef(null)\r\n  const history = useHistory()\r\n\r\n  // pathnameから作品Noを取得\r\n  var recipenumAry = window.location.pathname.split(\"/\")\r\n  const getrecipenum = recipenumAry[2]\r\n  \r\n  const time = (date) => {\r\n    let timestamp = formatDistance(new Date(), date.toDate(), {\r\n      locale: ja,\r\n    })\r\n    if (timestamp.indexOf(\"未満\") !== -1) {\r\n      return (timestamp = \"たった今\")\r\n    } else if (\r\n      timestamp.indexOf(\"か月\") !== -1 ||\r\n      timestamp.indexOf(\"年\") !== -1\r\n    ) {\r\n      return (timestamp = format(date.toDate(), \"yyyy年MM月dd日\", {\r\n        locale: ja,\r\n      }))\r\n    } else {\r\n      return (timestamp = timestamp + \"前\")\r\n    }\r\n  }\r\n  \r\n  // firestoreからメッセージ情報を取得\r\n  const fetchMessageData = () => {\r\n    getDocs(collection(db, collectionMessageName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // 対象の作品(getrecipenum)と一致するコメントのみ表示する\r\n        if(String(getrecipenum) === String(doc.data().recipeCommentNum)){\r\n          messageAry.push({\r\n            id : doc.id,\r\n            ...doc.data()\r\n          })\r\n        }\r\n      })\r\n    }).then(()=>{\r\n      messageAry.sort(function(a, b) {\r\n        return (a.createdAt < b.createdAt) ? -1 : 1;  //オブジェクトの昇順ソート\r\n      })\r\n      setMessage([...messageAry])\r\n    })}\r\n\r\n  useEffect(() => {\r\n    fetchMessageData()\r\n  },[])\r\n\r\n  // 削除ボタンクリック時\r\n  const handleDelete = (id) => {\r\n    console.log(\"id => \",id)\r\n    if (window.confirm(\"削除してもよろしいですか？\")) {\r\n      console.log(\"OK を選択してます\" , id)\r\n      \r\n      // ドキュメントのid（名前）を取得\r\n      console.log(\"ドキュメントのid（名前）を取得\")\r\n      console.log(\"削除するID\",id)\r\n      deleteDoc(doc(db , collectionMessageName , id)).then((doc) => {\r\n        fetchMessageData()\r\n        alert(\"削除しました。\")\r\n      })\r\n      .catch(() => {\r\n        alert(\"失敗しました\")\r\n     })\r\n    }else{\r\n      console.log(\"キャンセルを選択してます。\")\r\n    }\r\n  }\r\n\r\n  // 送信ボタンクリック時\r\n  const handleClick = () => {\r\n    setError(false)\r\n    const firestore = firebaseApp.firestore\r\n\r\n    // メッセージボックスが空の場合はエラーを返す\r\n    if (sendmessage === \"\") {\r\n        console.log(\"空文字のため未送信\")\r\n        setError(true)\r\n        return\r\n      }\r\n\r\n    try {\r\n        const docRef = collection(firestore, \"message\")\r\n        addDoc(docRef, {\r\n            text:sendmessage,                           // メッセージ内容\r\n            createdAt: Timestamp.fromDate(new Date()),  // メッセージ送信日時\r\n            recipeCommentNum : getrecipenum,            // 対象の投稿(recipenumで認識)\r\n            user: {\r\n                name: profile?.name,                    // メッセージ送信者の名前\r\n                image: profile?.image,                  // メッセージ送信者のアバター画像\r\n                uid: profile?.uid,                      // メッセージ送信者のUID\r\n              },\r\n          })\r\n        console.log(\"書き込み成功\")\r\n        // 画面をリフレッシュする\r\n        fetchMessageData()\r\n        setSendMessage(\"\")\r\n      } catch (err) {\r\n        console.log(\"メッセージが送信できませんでした。。。\")\r\n        console.log(err)\r\n        setError(true)\r\n      }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Box sx={{ flexGrow: 1, m: 2, }}>\r\n        <Grid item xs={12}>\r\n          {message ? (\r\n            message.map((message) => (\r\n              <Box \r\n                key={message.id} \r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection:profile && profile.uid === message.user.uid ? \"row\" : \"row-reverse\",\r\n                  my: 2,\r\n                  gap: 2,\r\n                  flexGrow: 1, m: 2,}}>\r\n                <Box>\r\n                  <Avatar src={message.user.image ? message.user.image : \"\"} alt=\"\" />\r\n                </Box>\r\n                <Box sx={{ ml: 0 }}>\r\n                  <Typography \r\n                    sx={{ fontSize: 12 }}\r\n                    align = {profile && profile.uid === message.user.uid ? \"left\" : \"right\"}>\r\n                      {/* ユーザー名の表示 */}\r\n                    {message.user.name}\r\n                  </Typography>\r\n                  <Typography \r\n                    sx={{ \r\n                      p: 1, \r\n                      background: \"#dddddd\", \r\n                      borderRadius: 1 ,\r\n                      maxWidth : 400,\r\n                      minWidth : 200,}}\r\n                    align = {profile && profile.uid === message.user.uid ? \"left\" : \"right\"}>\r\n                      {/* メッセージ内容の表示 */}\r\n                      {message.text}\r\n                  </Typography>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={8} align = \"left\">\r\n                      <Typography sx={{ fontSize: 12 }}>\r\n                        {/* メッセージの送信日時の表示 */}\r\n                        {format(message.createdAt.toDate(), \"yyyy年MM月dd日hh:mm\")}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3} align = \"right\">\r\n                      <Typography sx={{ fontSize: 12 }}>\r\n                        {/* メッセージ送信日時の履歴表示 */}\r\n                        {time(message.createdAt)}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1} align = \"center\">\r\n                      {/* 削除ボタンの表示 */}\r\n                      {/* 他のユーザーの投稿した作品に対して、自分のメッセージは削除可能 */}\r\n                      {/* 自分の投稿した作品のメッセージはすべての削除可能 */}\r\n                      {profile && (profile.uid === message.user.uid || profile.uid === store.getState().recipeUID)  ? \r\n                        <IconButton \r\n                          onClick={() => handleDelete(message.id)}>\r\n                          <Tooltip title=\"削除する\" arrow>\r\n                            <DeleteIcon sx={{ color : \"#808080\" ,fontSize: 16}}/>\r\n                          </Tooltip>\r\n                        </IconButton> : \"\"}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Box>\r\n            ))) : (\r\n            <p>メッセージが存在しません</p>)}\r\n            {/* ログイン状態の時だけメッセージ送信機能を表示 */}\r\n            {/* メッセージ送信部分 */}\r\n            <Stack direction=\"row\" spacing={2} sx={{ margin: \"0.5rem 1rem\" }}>\r\n              <TextField \r\n                  size=\"small\" \r\n                  sx={{ flex: 1 }}\r\n                  value = {sendmessage}\r\n                  label = \"この作品にコメントする\"\r\n                  onChange={e => setSendMessage(e.target.value)} />\r\n              <Button \r\n                  variant=\"contained\" \r\n                  endIcon={<ChatBubbleIcon />}\r\n                  onClick={() => \r\n                    {profile ? \r\n                      handleClick()\r\n                    : history.push(\"/signup\")}}>\r\n              コメントする\r\n              </Button>\r\n            </Stack>\r\n          </Grid>\r\n      </Box>\r\n      {/* 空入力の場合はエラーを表示 */}\r\n      {error && <Alert severity=\"error\">送信できませんでした</Alert>}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React, \r\n     { useEffect,\r\n       useState }          from \"react\"\r\nimport {Alert , \r\n        Avatar,\r\n        Box,\r\n        Grid,\r\n        Typography,\r\n        Container,\r\n        CssBaseline,\r\n        Link, \r\n        Button,\r\n        IconButton,\r\n        Tooltip , }        from \"@mui/material\"\r\nimport { createTheme, \r\n         ThemeProvider }   from '@mui/material/styles';\r\nimport RecipeDetailsHeader from \"./RecipeDetailsHeader\"\r\nimport RecipeDetailsImageModule from \"./RecipeDetailsImageModule\"\r\nimport RecipeDetailsImageButton from \"./RecipeDetailsImageButton\"\r\nimport Footer              from '../Footer';\r\nimport ThumbUpAltIcon      from '@mui/icons-material/ThumbUpAlt';\r\nimport CardMedia           from '@mui/material/CardMedia';\r\nimport useProfile          from \"../hooks/useProfile\"\r\nimport { firebaseApp }     from \"../../firebase\";\r\nimport { useHistory }      from 'react-router';\r\nimport { db }              from '../../firebase';\r\nimport { collection,\r\n         getDocs ,\r\n         addDoc ,\r\n         Timestamp ,\r\n         doc ,\r\n         deleteDoc ,}      from 'firebase/firestore';\r\nimport { format }          from \"date-fns\"\r\nimport InsertCommentIcon   from '@mui/icons-material/InsertComment';\r\nimport store               from '../../store/index';\r\nimport Message             from \"./RecipeDetailsMessage\";\r\nimport StarsIcon           from '@mui/icons-material/Stars';\r\n\r\nconst collectionRecipeName    = \"recipe\"\r\nconst collectionUserName      = \"users\"\r\nconst collectionMessageName   = \"message\"\r\nconst collectionBookMarkName  = \"/bookmark\"\r\nconst collectionGoodName      = \"/good\"\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { \r\n      primary: '#000000' },\r\n    },\r\n});\r\n\r\nexport default function RecipDetail() {\r\n  const [goodadd , setGoodAdd] = useState(\"\")\r\n  const [goodcansel , setGoodCansel] = useState(\"\")\r\n  const [goodflg , setGoodFlg] = useState(false)\r\n  const [bookmarkadd , setBookMarkAdd] = useState(\"\")\r\n  const [bookmarkcansel , setBookMarkCansel] = useState(\"\")\r\n  const [bookmarkflg , setBookMarkFlg] = useState(false)\r\n  const [recipe, setRecipe] = useState([])\r\n  const [userinfo, setUserInfo] = useState([])\r\n  const [message, setMessage] = useState([])\r\n  const [getuid , setGetUID] = useState(\"\")\r\n  const [getavatarurl , setGetAvatarURL] = useState(\"\")\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const firestorage = firebaseApp.firestorage\r\n  const history = useHistory()\r\n  const recipeAry = [];\r\n  const userDataAry = [];\r\n  const messageAry = [];\r\n  const [commentcount , setCommentCount] = useState(\"\")\r\n\r\n  // pathnameから作品Noを取得\r\n  var recipenumAry = window.location.pathname.split(\"/\")\r\n  const getrecipenum = recipenumAry[2]\r\n\r\n  // firestoreからレシピ情報の取得\r\n  const fetchRecipeData = () => {\r\n    var goodBuffCount = 0\r\n    var bookarkBuffCount = 0\r\n    var goodFlg = 0\r\n    var bookmarkFlg = 0\r\n    getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n      // recipenumと遷移元のレシピNoを比較する\r\n      querySnapshot.forEach((doc) => {\r\n        // 備忘録：文字列を比較する際、見た目は一緒なのになぜか一致しない現象が起きた。\r\n        // ただし、文字列同士をString()で処理すると問題解決\r\n        if(String(doc.data().recipenum) === String(getrecipenum)){\r\n          recipeAry.push({\r\n            id : doc.id,\r\n            ...doc.data()\r\n          })\r\n          setGetUID(doc.data().image.uid)\r\n          store.getState().documentID       = doc.id               // ドキュメントID\r\n          store.getState().recipeUID        = doc.data().image.uid // 投稿したユーザーのUID\r\n          store.getState().recipetitle      = doc.data().title     // 作品タイトル\r\n          store.getState().category         = doc.data().category  // 大項目(category)\r\n          store.getState().detail           = doc.data().detail    // 小項目(detail)\r\n          store.getState().productionCost   = doc.data().cost      // 制作費用\r\n          store.getState().productionPeriod = doc.data().period    // 制作期間\r\n          store.getState().productionMemo   = doc.data().memo      // 作品メモ\r\n          store.getState().createdAt        = doc.data().createdAt // 制作日時\r\n          store.getState().displayName      = doc.data().image.user// ユーザー名\r\n          store.getState().recipeimage      = doc.data().image.url // アバター画像\r\n          // goodコレクションの個数を取得\r\n          getDocs(collection(db, collectionRecipeName+\"/\"+doc.id+collectionGoodName)).then((querySnapshot)=>{\r\n            querySnapshot.forEach((doc) => {\r\n              goodBuffCount = goodBuffCount +1\r\n              // 既にgoodコレクションに登録されているか判定する\r\n              // 登録済の場合は、いいねボタンをカラー表示する\r\n              if(String(doc.data().uid)===String(store.getState().loginUserUID)){\r\n                console.log(\"goodコレクションにて一致しています。\")\r\n                console.log(doc.data().uid , store.getState().loginUserUID)\r\n                goodFlg = goodFlg + 1 \r\n              }else{\r\n                console.log(\"goodコレクションにて一致していません。\")\r\n                console.log(doc.data().uid , store.getState().loginUserUID)\r\n              }\r\n            })\r\n            // goodFlgが0以上であればgoodコレクションに同じUIDが存在する\r\n            if(goodFlg > 0){\r\n              setGoodFlg(true)\r\n            }else{\r\n              setGoodFlg(false)\r\n            }\r\n            setGoodCount(goodBuffCount)\r\n          })\r\n          // bookmarkコレクションの個数を取得\r\n          getDocs(collection(db, collectionRecipeName+\"/\"+doc.id+collectionBookMarkName)).then((querySnapshot)=>{\r\n            querySnapshot.forEach((doc) => {\r\n              bookarkBuffCount = bookarkBuffCount +1\r\n              // 既にbookmarkコレクションに登録されているか判定する\r\n              // 登録済の場合は、いいねボタンをカラー表示する\r\n              if(String(doc.data().uid)===String(store.getState().loginUserUID)){\r\n                console.log(\"bookmarkコレクションにて一致しています。\")\r\n                console.log(doc.data().uid , store.getState().loginUserUID)\r\n                bookmarkFlg = bookmarkFlg + 1 \r\n              }else{\r\n                console.log(\"bookmarkコレクションにて一致していません。\")\r\n                console.log(doc.data().uid , store.getState().loginUserUID)\r\n              }\r\n            })\r\n            // bookmarkFlgが0以上であればbookmarkコレクションに同じUIDが存在する\r\n            if(bookmarkFlg > 0){\r\n              setBookMarkFlg(true)\r\n            }else{\r\n              setBookMarkFlg(false)\r\n            }\r\n            setBookMarkCount(bookarkBuffCount)\r\n          })\r\n      }else{\r\n    }})\r\n    }).then(()=>{\r\n      setRecipe([...recipeAry])\r\n    })};\r\n\r\n  // 編集ボタンをクリックしたらgetStateに各値を代入して遷移する\r\n  const handleClick = () => {\r\n    store.getState().photoURL    = getavatarurl      // アバターのURL\r\n    history.push(`/recipedetails/${getrecipenum}/edit`)\r\n  }\r\n\r\n  // firestoreからユーザー情報の取得\r\n  const fetchUsersData = () => {\r\n    getDocs(collection(db, collectionUserName)).then((querySnapshot)=>{\r\n      // recipenumと遷移元のレシピNoを比較する\r\n      querySnapshot.forEach((doc) => {\r\n        // 備忘録：文字列を比較する際、見た目は一緒なのになぜか一致しない現象が起きた。\r\n        // ただし、文字列同士をString()で処理すると問題解決  \r\n        if(String(doc.data().uid) === String(getuid)){\r\n          userDataAry.push({\r\n            id : doc.id,\r\n            ...doc.data()\r\n        })\r\n        setGetAvatarURL(doc.data().image)\r\n      }\r\n    })\r\n    }).then(()=>{\r\n      setUserInfo([...userDataAry])\r\n    })};\r\n\r\n  // firebaseからメッセージ情報の取得\r\n  const fetchMessageData = () => {\r\n    getDocs(collection(db, collectionMessageName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // 対象の作品(getrecipenum)と一致するコメントのみ表示する\r\n        if(String(getrecipenum) === String(doc.data().recipeCommentNum)){\r\n          messageAry.push({\r\n            id : doc.id,\r\n            ...doc.data()\r\n          })\r\n        }\r\n      })\r\n    }).then(()=>{\r\n      setMessage([...messageAry])\r\n      setCommentCount(messageAry.length)\r\n    })};\r\n\r\n  useEffect(() => {\r\n    fetchUsersData()\r\n    fetchRecipeData()\r\n    fetchMessageData()\r\n  },[getuid]);\r\n\r\n// いいねボタンクリック時の操作\r\n  const [goodcount , setGoodCount] = useState(\"\")\r\n  const handleGoodIcon = () => {\r\n    // 表示中のアラートを消す\r\n    setGoodAdd(false)\r\n    setGoodCansel(false)\r\n    setBookMarkAdd(false)\r\n    setBookMarkCansel(false)\r\n    var count = 0\r\n    var documentOKFlg = 0\r\n    var buffDocID = \"\"\r\n    const firestore = firebaseApp.firestore\r\n    // recipeのドキュメントを取得\r\n    getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((document) => {\r\n        // goodコレクションに追加1\r\n        if(String(document.id)===String(recipe[0].id)){\r\n          const docRef = collection(firestore , collectionRecipeName+\"/\"+document.id+collectionGoodName)\r\n          // goodコレクションの個数を取得\r\n          const goodCollectionRef = collectionRecipeName+\"/\"+document.id+collectionGoodName\r\n          getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionGoodName)).then((querySnapshot)=>{\r\n            querySnapshot.forEach((documentGood) => {\r\n              count = count +1\r\n              documentOKFlg = documentOKFlg + 1\r\n              if(String(documentGood.data().uid)===String(store.getState().loginUserUID)){\r\n                // 既に登録済しているのでgoodコレクションから削除する\r\n                buffDocID = documentGood.id\r\n                console.log(\"documentOKFlg : \",documentOKFlg)\r\n                documentOKFlg = documentOKFlg + 1\r\n              }else{\r\n                // 登録していないのでgoodコレクションに追加する\r\n                console.log(\"documentOKFlg : \",documentOKFlg)\r\n              }\r\n            })\r\n            console.log(\"documentOKFlg : \",documentOKFlg)\r\n            if(count === 0 && documentOKFlg === 0){\r\n              // いいねが0件の場合はこちらから追加する\r\n              console.log(\"いいねが0件の場合はこちらから追加する\")\r\n              addDoc(docRef, {\r\n                uid : profile.uid,\r\n                clickdate: Timestamp.fromDate(new Date()),  // ボタンをクリックした日時\r\n              })\r\n              count = count + 1\r\n              setGoodCount(count)\r\n              setGoodAdd(true)\r\n              setGoodFlg(true)\r\n            }else if(documentOKFlg > 1){\r\n              console.log(\"goodコレクションから削除しました。\")\r\n              deleteDoc(doc(db , goodCollectionRef , buffDocID))\r\n              count = count - 1\r\n              setGoodCount(count)\r\n              setGoodCansel(true)\r\n              setGoodFlg(false)\r\n            }else if(documentOKFlg === 1){\r\n              console.log(\"いいねが1件以上の場合はこちらから追加する\")\r\n              addDoc(docRef, {\r\n                uid : profile.uid,\r\n                clickdate: Timestamp.fromDate(new Date()),  // ボタンをクリックした日時\r\n              })\r\n              count = count + 1\r\n              setGoodCount(count)\r\n              setGoodAdd(true)\r\n              setGoodFlg(true)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }).then(()=>{\r\n      // 何もしない\r\n    })\r\n  }\r\n\r\n// お気に入りボタンクリック時の操作\r\nconst [bookmarkcount , setBookMarkCount] = useState(\"\")\r\n  const handleBookMarkIcon = () => {\r\n    // 表示中のアラートを消す\r\n    setGoodAdd(false)\r\n    setGoodCansel(false)\r\n    setBookMarkAdd(false)\r\n    setBookMarkCansel(false)\r\n    var count = 0\r\n    var documentOKFlg = 0\r\n    var buffDocID = \"\"\r\n    const firestore = firebaseApp.firestore\r\n    // recipeのドキュメントを取得\r\n    getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((document) => {\r\n        // bookmarkコレクションに追加\r\n        if(String(document.id)===String(recipe[0].id)){\r\n          const docRef = collection(firestore , collectionRecipeName+\"/\"+document.id+collectionBookMarkName)\r\n          // bookmarkコレクションの個数を取得\r\n          const bookmarkCollectionRef = collectionRecipeName+\"/\"+document.id+collectionBookMarkName\r\n          getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionBookMarkName)).then((querySnapshot)=>{\r\n            querySnapshot.forEach((documentBookMark) => {\r\n              count = count +1\r\n              documentOKFlg = documentOKFlg + 1\r\n              if(String(documentBookMark.data().uid)===String(store.getState().loginUserUID)){\r\n                // 既に登録済しているのでgoodコレクションから削除する\r\n                buffDocID = documentBookMark.id\r\n                console.log(\"documentOKFlg : \",documentOKFlg)\r\n                documentOKFlg = documentOKFlg + 1\r\n              }else{\r\n                // 登録していないのでgoodコレクションに追加する\r\n                console.log(\"documentOKFlg : \",documentOKFlg)\r\n              }\r\n            })\r\n            console.log(\"documentOKFlg : \",documentOKFlg)\r\n            if(count === 0 && documentOKFlg === 0){\r\n              // いいねが0件の場合はこちらから追加する\r\n              console.log(\"いいねが0件の場合はこちらから追加する\")\r\n              addDoc(docRef, {\r\n                uid : profile.uid,\r\n                clickdate: Timestamp.fromDate(new Date()),  // ボタンをクリックした日時\r\n              })\r\n              count = count + 1\r\n              setBookMarkCount(count)\r\n              setBookMarkAdd(true)\r\n              setBookMarkFlg(true)\r\n            }else if(documentOKFlg > 1){\r\n              console.log(\"goodコレクションから削除しました。\")\r\n              deleteDoc(doc(db , bookmarkCollectionRef , buffDocID))\r\n              count = count - 1\r\n              setBookMarkCount(count)\r\n              setBookMarkCansel(true)\r\n              setBookMarkFlg(false)\r\n            }else if(documentOKFlg === 1){\r\n              console.log(\"いいねが1件以上の場合はこちらから追加する\")\r\n              addDoc(docRef, {\r\n                uid : profile.uid,\r\n                clickdate: Timestamp.fromDate(new Date()),  // ボタンをクリックした日時\r\n              })\r\n              count = count + 1\r\n              setBookMarkCount(count)\r\n              setBookMarkAdd(true)\r\n              setBookMarkFlg(true)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }).then(()=>{\r\n      // 何もしない\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <RecipeDetailsHeader/>\r\n      {recipe ? ( \r\n          recipe.map((recipe) => (\r\n      <Box>\r\n        <Box\r\n          sx={{\r\n            bgcolor: 'background.paper',\r\n            pt: 1,\r\n            pb: 6,}}>\r\n          <Container maxWidth=\"md\">\r\n            {/* 作品タイトル表示欄 */}\r\n            <Typography\r\n              sx={{ \r\n                p: 1, \r\n                pl : 3,\r\n                fontSize: 32 , \r\n                background: \"#faf0e6\", \r\n                borderRadius: 1 ,\r\n                color:\"#a0522d\",\r\n                borderLeft : \"solid #a0522d 6px\",}}>\r\n              <strong>{recipe.title}</strong>\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                pl : 4,\r\n                pr : 4,}}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={1}>\r\n                  {/* 作成したユーザーのアバター画像表示 */}\r\n                  <Avatar src={getavatarurl} alt=\"\" />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {/* 作成したユーザー名を表示 */}\r\n                  <Typography \r\n                    sx={{ \r\n                      p: 1, \r\n                      fontSize: 14 , \r\n                      width : 600 , \r\n                      color:\"#000000\"}}>\r\n                    {/* uidをアドレスの末尾に付与して遷移する */}\r\n                    <Link href={`/profiles/${recipe.image.uid}`} color=\"#000000\">\r\n                      {recipe ? recipe.image.user : \"\"}\r\n                    </Link>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} align=\"center\">\r\n                  {/* 投稿した日時を表示 */}\r\n                  <Typography \r\n                    sx={{ \r\n                      p: 1, \r\n                      fontSize: 14 , \r\n                      width : 600 , \r\n                      color:\"#000000\"}}>\r\n                    投稿した日時：{format(recipe.createdAt.toDate(), \"yyyy年MM月dd日\")}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Container>\r\n        </Box>\r\n        <Container sx={{ py: 1 }} maxWidth=\"md\">\r\n        <Box\r\n          sx={{\r\n            bgcolor: '#eeeeee',\r\n            pb : 4,\r\n            pl : 4,\r\n            pr : 4,}}>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={6}>\r\n              {/* 作品画像を表示 */}\r\n              <Typography variant=\"body2\" align='left'>\r\n                <CardMedia\r\n                  component = \"img\"\r\n                  height    = \"400\"\r\n                  image     = {recipe.image.url}\r\n                  alt       = \"Paella dish\"/>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {/* 作品カテゴリー表示欄 */}\r\n              <Grid>\r\n                <Typography \r\n                  sx={{ \r\n                    pl : 1 ,\r\n                    fontSize: 14 , \r\n                    color:\"#a0522d\",\r\n                    borderLeft : \"solid #a0522d 6px\"}}>\r\n                  <strong>作品カテゴリー</strong>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={6}>\r\n                <Typography \r\n                  sx={{ \r\n                    pl : 2,\r\n                    fontSize: 14 , \r\n                    color:\"#000000\"}}>\r\n                  大項目\r\n                </Typography>\r\n                  <Typography \r\n                    sx={{ \r\n                      p: 1, \r\n                      fontSize: 16 , \r\n                      background: \"#ffffff\", \r\n                      borderRadius: 1 ,\r\n                      color:\"#000000\"}}>\r\n                    {recipe.category}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography \r\n                    sx={{ \r\n                      pl : 2 ,\r\n                      fontSize: 14 , \r\n                      color:\"#000000\"}}>\r\n                    小項目\r\n                  </Typography>\r\n                  <Typography \r\n                    sx={{ \r\n                      p: 1, \r\n                      fontSize: 16 , \r\n                      background: \"#ffffff\", \r\n                      borderRadius: 1 ,\r\n                      color:\"#000000\"}}>\r\n                    {recipe.detail}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <br/>\r\n              {/* 制作費用の表示 */}\r\n              <Typography \r\n                sx={{ \r\n                  pl : 1 ,\r\n                  fontSize: 14 , \r\n                  color:\"#a0522d\",\r\n                  borderLeft : \"solid #a0522d 6px\"}}>\r\n                <strong>かかった費用</strong>\r\n              </Typography>\r\n              <Typography \r\n                sx={{ \r\n                  p: 1, \r\n                  fontSize: 16 , \r\n                  background: \"#ffffff\", \r\n                  borderRadius: 1 ,\r\n                  color:\"#000000\"}}>\r\n                {Number(recipe.cost).toLocaleString()} 円\r\n              </Typography>\r\n              <br/>\r\n              {/* 制作期間の表示 */}\r\n              <Typography \r\n                sx={{ \r\n                  pl : 1 ,\r\n                  fontSize: 14 , \r\n                  color:\"#a0522d\",\r\n                  borderLeft : \"solid #a0522d 6px\"}}>\r\n                <strong>所要時間</strong>\r\n              </Typography>\r\n              <Typography \r\n                sx={{ \r\n                  p: 1, \r\n                  fontSize: 16 , \r\n                  background: \"#ffffff\", \r\n                  borderRadius: 1 ,\r\n                  color:\"#000000\"}}>\r\n                約 {recipe.period}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          {/* 作品コメント表示欄 */}\r\n          <br/>\r\n          <Grid>\r\n            <Typography \r\n              sx={{ \r\n                pl : 1 ,\r\n                fontSize: 14 , \r\n                color:\"#a0522d\",\r\n                borderLeft : \"solid #a0522d 6px\"}}>\r\n              <strong>作品コメント</strong>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid>\r\n            <Typography \r\n              sx={{ \r\n                p: 1, \r\n                fontSize: 16 , \r\n                background: \"#ffffff\", \r\n                borderRadius: 1 ,\r\n                color:\"#000000\"}}>\r\n              {recipe.memo}\r\n            </Typography>\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            bgcolor: '#eeeeee',\r\n            pl : 4,\r\n            pr : 4,}}>\r\n          <Grid container spacing={0} >\r\n            <Grid item xs={2}>\r\n              {/* いいねボタン/数の表示 */}\r\n              {/* 既にいいねが押されている場合は、青色(color:\"#4169e1\")を設置、\r\n                  押されていない場合は、グレー表示\r\n                  登録済の状態でクリックした場合は、goodコレクションから削除し、\r\n                  グレー表示にする */}\r\n              {goodflg ? \r\n              <Typography \r\n                sx={{ \r\n                  fontSize: 14 , \r\n                  color:\"#4169e1\"}}>\r\n                <IconButton\r\n                  onClick={handleGoodIcon}>\r\n                  <Tooltip title=\"いいねする\" arrow>\r\n                    <ThumbUpAltIcon sx={{ color : \"#4169e1\" ,fontSize: 20}}/>\r\n                  </Tooltip>\r\n                </IconButton>\r\n                いいね！：{goodcount}件\r\n              </Typography>:\r\n              <Typography \r\n                sx={{ \r\n                  fontSize: 14 , \r\n                  color:\"#000000\"}}>\r\n                <IconButton\r\n                  onClick={handleGoodIcon}>\r\n                  <Tooltip title=\"いいねする\" arrow>\r\n                    <ThumbUpAltIcon sx={{ color : \"#696969\" ,fontSize: 20}}/>\r\n                  </Tooltip>\r\n                </IconButton>\r\n                いいね！：{goodcount}件\r\n              </Typography> }\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              {/* お気に入りボタン/数の表示 */}\r\n              {/* 既にお気に入りが押されている場合は、青色(color:\"#4169e1\")を設置、\r\n                  押されていない場合は、グレー表示\r\n                  登録済の状態でクリックした場合は、bookmarkコレクションから削除し、\r\n                  グレー表示にする */}\r\n               {bookmarkflg ? \r\n               <Typography \r\n                sx={{ \r\n                  fontSize: 14 , \r\n                  color:\"#ffa500\"}}>\r\n                <IconButton\r\n                  onClick={handleBookMarkIcon}>\r\n                  <Tooltip title=\"お気に入り登録する\" arrow>\r\n                    <StarsIcon sx={{ color : \"#ffa500\" ,fontSize: 20}}/>\r\n                  </Tooltip>\r\n                </IconButton>\r\n                お気に入り：{bookmarkcount}件\r\n              </Typography> : \r\n              <Typography \r\n                sx={{ \r\n                  fontSize: 14 , \r\n                  color:\"#000000\"}}>\r\n                <IconButton\r\n                  onClick={handleBookMarkIcon}>\r\n                  <Tooltip title=\"お気に入り登録する\" arrow>\r\n                    <StarsIcon sx={{ color : \"#696969\" ,fontSize: 20}}/>\r\n                  </Tooltip>\r\n                </IconButton>\r\n                お気に入り：{bookmarkcount}件\r\n              </Typography>}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        {goodadd && <Alert severity=\"success\">この投稿にいいね！しました。</Alert>}\r\n        {goodcansel && <Alert severity=\"error\">この投稿のいいね！を取り消しました。</Alert>}\r\n        {bookmarkadd && <Alert severity=\"success\">お気に入りに登録しました。</Alert>}\r\n        {bookmarkcansel && <Alert severity=\"error\">お気に入り登録を取り消しました。</Alert>}\r\n        <br/>\r\n        {/* メッセージ表示領域 */}\r\n\r\n          <Grid container spacing={0}>\r\n            <Typography\r\n              sx={{ \r\n                p: 1, \r\n                fontSize: 20 , \r\n                color:\"#000000\"}}>\r\n              <strong>コメント：</strong> \r\n            </Typography>\r\n            <Typography\r\n              sx={{ \r\n                p: 1, \r\n                fontSize: 20 , \r\n                color:\"#E64545\"}}>\r\n              <strong>{commentcount}</strong>\r\n            </Typography>\r\n            <Typography\r\n              sx={{ \r\n                p: 1, \r\n                fontSize: 20 , \r\n                color:\"#000000\"}}>\r\n              <strong>件</strong>\r\n            </Typography>\r\n          </Grid>\r\n          <Box\r\n          sx={{\r\n            bgcolor: '#ffffff',\r\n            pb : 4,\r\n            pl : 4,\r\n            pr : 4,}}>\r\n          <Grid container spacing={0} >\r\n            {/* メッセージ入力&送信ボタン表示 */}\r\n            <Grid item xs={12} align = \"center\">\r\n              {/* メッセージ内容の表示 */}\r\n              <Message/>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <br/>\r\n        {/* 作成者がログインユーザーの場合は編集ボタンを表示する */}\r\n        <Grid container spacing={0} >\r\n          <Grid item xs={12} align = \"right\">\r\n            {/* 編集ボタンの表示 */}\r\n            {profile && profile.uid === recipe.image.uid ? \r\n            <Button \r\n              variant = \"contained\"\r\n              onClick = {handleClick}\r\n              sx = {{width : 200}}>\r\n                この投稿を編集する\r\n            </Button> : \"\"}\r\n          </Grid>\r\n        </Grid>\r\n        <br/>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h5\"\r\n            align=\"left\"\r\n            color=\"text.primary\"\r\n            gutterBottom\r\n            sx = {{backgroundColor : \"#ffffff\",\r\n                    color : \"#000000\",\r\n                    padding: \"1rem 2rem\",\r\n                    borderBottom: \"double #E64545 6px\",\r\n                    pb : 1 ,}}>\r\n            関連するほかの作品\r\n          </Typography>\r\n          <RecipeDetailsImageModule\r\n            detail    = {recipe.detail}\r\n            recipeNum = {recipe.recipenum}/>\r\n        </Container>\r\n      </Box>\r\n      ))) : (\r\n        <p>投稿が存在しません</p>)}\r\n        {/* フッターの表示 */}\r\n      <Footer/>\r\n    </ThemeProvider>\r\n  );\r\n}","import React          from 'react'\r\nimport Button         from '@mui/material/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function RecipeDetailsEditButton(props){\r\n    const history = useHistory();\r\n    return(\r\n        <Button \r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disabled  = {props.disabled}\r\n            fullWidth = {props.fullWidth}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            padding   = {props.padding}\r\n            onClick={() => {\r\n                history.push(props.link);\r\n                }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import * as React     from 'react';\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,} from \"@mui/material\"\r\nimport RecipeDetailButton from './RecipeDetailsEditButton';\r\nimport HeaderTitle    from '../HeaderTitle';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport useProfile from \"../hooks/useProfile\"\r\n\r\nexport default function RecipeDetailsEditHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }} >\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <HeaderTitle\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            {/* <ProfileButton\r\n              text      =\"操作説明\" \r\n              link      = \"/operation\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<FeedIcon/>}/> */}\r\n            <RecipeDetailButton\r\n              text      =\"ホーム\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<HomeIcon/>}\r\n              sx        = {{\"&:hover\": {background: \"#E64545\"}}}/>\r\n            {/* <ProfileButton\r\n              id        = \"logout\"\r\n              text      = \"ログアウト\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<LogoutIcon/>}/> */}\r\n            <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import   React, \r\n       { useEffect ,\r\n         useState }              from \"react\"\r\nimport { Alert ,\r\n         Avatar,\r\n         Button,\r\n         Box,\r\n         Grid,\r\n         Typography,\r\n         Container,\r\n         CssBaseline,\r\n         TextField,\r\n         FormControl , \r\n         InputLabel, \r\n         Select,\r\n         MenuItem,}              from \"@mui/material\"\r\nimport { createTheme, \r\n         ThemeProvider }         from '@mui/material/styles';\r\nimport { addDoc,\r\n         collection,\r\n         doc,\r\n         getDocs ,\r\n         updateDoc,\r\n         deleteDoc, }            from \"firebase/firestore\"\r\nimport { ref,\r\n         uploadBytes,\r\n         getDownloadURL,}        from \"firebase/storage\"\r\nimport   RecipeDetailsEditHeader from \"./RecipeDetailsEditHeader\"\r\nimport   RecipeDetailsEditButton from \"./RecipeDetailsEditButton\";\r\nimport   Footer                  from '../Footer';\r\nimport   CardMedia               from '@mui/material/CardMedia';\r\nimport   useProfile              from \"../hooks/useProfile\"\r\nimport { firebaseApp }           from \"../../firebase\";\r\nimport { useHistory }            from 'react-router';\r\nimport   store                   from '../../store/index';\r\nimport { db }                    from '../../firebase';\r\nimport { format }                from \"date-fns\"\r\n\r\nconst collectionRecipeName   = \"recipe\"\r\nconst collectionUserName     = \"users\"\r\nconst collectionCategoryName = \"category\"\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n});\r\n\r\nexport default function RecipeDetailsEdit() {\r\n  const [title , setTilte]                   = useState(store.getState().recipetitle)      // 作品タイトルを表示\r\n  const [memo , setMemo]                     = useState(store.getState().productionMemo)   // 作品コメントを表示\r\n  const [cost , setCost]                     = useState(store.getState().productionCost)   // 制作費用を表示\r\n  const [period , setPeriod]                 = useState(store.getState().productionPeriod) // 制作期間を表示\r\n  const [createdat , setCreatedAt]           = useState(store.getState().createdAt)        // 制作日時を表示    \r\n  const [image , setImage]                   = useState()                                  // 作品画像を表示\r\n  const [imagename , setImageName]           = useState()                                  // 画像変更時のファイル名を表示\r\n  const [error, setError]                    = useState(false)                             // エラー判定\r\n  const [success, setSuccess]                = useState(false)                             // 成功判定\r\n  const [errormessage , setErrorMessage]     = useState(\"\")                                // エラーメッセージ\r\n  const [getavatarurl , setGetAvatarURL]     = useState(\"\")\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const firestorage = firebaseApp.firestorage\r\n  const firestore = firebaseApp.firestore\r\n  const history = useHistory()\r\n\r\n  // pathnameから作品Noを取得\r\n  var recipenumAry = window.location.pathname.split(\"/\")\r\n  const getrecipenum = recipenumAry[2]\r\n\r\n  // ------【START】セレクトボックス用------\r\n  const [category , setCategory]             = useState([])         // 作品カテゴリーを表示(category)\r\n  const [detail , setDetail]                 = useState([])         // 作品カテゴリーを表示(detail)\r\n  const categoryAry = [];\r\n  const detailAry = [];\r\n  const [selectcategory , setSelectCategory] = useState(store.getState().category)\r\n  const [selectdetail , setSelectDetail]     = useState(store.getState().detail)\r\n\r\n  // categoryセレクトボックスの要素選択時\r\n  const handleSelectChange = (event) => {\r\n    setSelectCategory(event.target.value)\r\n    setSelectDetail(\"\")\r\n    console.log(event.target.value)\r\n    fetchDetailData(event.target.value)\r\n  }\r\n\r\n  // detailセレクトボックスの要素選択時\r\n  const handleDetailChange = (event) => {\r\n    setSelectDetail(event.target.value)\r\n    console.log(event.target.value)\r\n  }\r\n\r\n  // firestoreからcategoryの取得\r\n  const fetchCategoryData = () => {\r\n    getDocs(collection(db, collectionCategoryName)).then((querySnapshot)=>{\r\n      // recipenumと遷移元のレシピNoを比較する\r\n      querySnapshot.forEach((doc) => {\r\n      // 重複していない要素だけを追加する\r\n      if(!categoryAry.includes(doc.data().category)){\r\n        // 「その他」は末尾に格納する\r\n        if(doc.data().category !== \"その他\"){\r\n          categoryAry.unshift(\r\n            doc.data().category)\r\n        }else{\r\n          categoryAry.push(\r\n            doc.data().category)\r\n        }\r\n      }\r\n    })\r\n  }).then(()=>{\r\n    setCategory([...categoryAry])\r\n  })}\r\n\r\n  // firestoreからdetailの取得\r\n  const fetchDetailData = (detail) => {\r\n    console.log(\"detail => \", detail)\r\n    getDocs(collection(db, collectionCategoryName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // カテゴリーで選択している要素だけを追加する\r\n        if(doc.data().category === detail){\r\n          // 「その他」は末尾に格納する\r\n          if(doc.data().detail !== \"その他\"){\r\n            detailAry.unshift(\r\n              doc.data().detail)\r\n          }else{\r\n            detailAry.push(\r\n              doc.data().detail)\r\n          }\r\n        }\r\n      })\r\n    }).then(()=>{\r\n      setDetail([...detailAry])\r\n    })};\r\n\r\n  useEffect(() => {\r\n    fetchCategoryData()\r\n    fetchDetailData(store.getState().category)\r\n  },[]);\r\n  // ------【END】セレクトボックス用------\r\n  \r\n  // ------【START】画像選択用------\r\n  const handleChange = (e) => {\r\n    if (e.target.files !== null) {\r\n      setImage(e.target.files[0])\r\n      setImageName(e.target.files[0].name)\r\n    }\r\n  }\r\n  // ------【END】画像選択用------\r\n\r\n  // 「削除」ボタンクリック時\r\n  const handleDelete = (id) => {\r\n    console.log(\"id => \" , id)\r\n    if (window.confirm(\"削除してもよろしいですか？\")) {\r\n            // ドキュメントのid（名前）を取得\r\n      deleteDoc(doc(db , collectionRecipeName , id)).then((doc) => {\r\n        // fetchUsersData()\r\n        alert(\"削除しました。\")\r\n        setTimeout(() => {\r\n          history.push(\"/\")\r\n        },1000)\r\n      })\r\n      .catch(() => {\r\n        alert(\"失敗しました\")\r\n     })\r\n    }else{\r\n    }\r\n  }\r\n\r\n  // 「更新」ボタンクリック\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    // アラートが出ている場合は一旦消す\r\n    setError(false)\r\n    setSuccess(false)\r\n    // 入力内容が空の場合はエラーを返す\r\n    if(title === \"\"){\r\n      console.log(\"作品タイトルが未入力\")\r\n      setErrorMessage(\"作品タイトルを入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(memo === \"\"){\r\n      console.log(\"作品コメントが未入力\")\r\n      setErrorMessage(\"作品コメントを入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(selectcategory === \"\"){\r\n      console.log(\"大項目が未入力\")\r\n      setErrorMessage(\"大項目を選択してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(selectdetail === \"\"){\r\n      console.log(\"小項目が未入力\")\r\n      setErrorMessage(\"小項目を選択してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(cost === \"\"){\r\n      console.log(\"かかった費用が未入力\")\r\n      setErrorMessage(\"かかった費用を入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(period === \"\"){\r\n      console.log(\"所要時間が未入力\")\r\n      setErrorMessage(\"所要時間を入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    try {\r\n      // const uid = user.uid\r\n      const docRef = collection(firestore, collectionRecipeName);\r\n      if(image){\r\n          const imageRef = ref(firestorage, '/RECIPE_IMG/' + getrecipenum + \"/\" + image.name)\r\n          // firebase strageへ画像をアップロード\r\n          uploadBytes(imageRef, image).then(() => {\r\n              // getDownloadURLの中で、profileがある場合はupdateDocを指定\r\n              // profileがない場合はaddDocを指定\r\n              // imageがない場合も同様に指定\r\n              getDownloadURL(imageRef).then(url => {\r\n                if (profile) {\r\n                  const redipeRef = doc(firestore, collectionRecipeName , store.getState().documentID)\r\n                  updateDoc(redipeRef, {\r\n                    title ,                     // 作品タイトルを入力\r\n                    category : selectcategory , // category(大項目)を入力\r\n                    detail : selectdetail ,     // detail(小項目)を入力\r\n                    memo ,                      // 作品メモを入力\r\n                    cost ,                      // 制作費用を入力\r\n                    period ,                    // 制作期間を入力\r\n                    image : {\r\n                      filename : image.name ,   // image - ファイル名\r\n                      url      : url ,\r\n                      uid      : profile.uid,\r\n                      user     : profile.name}, // image - 画像URLを入力\r\n                  })\r\n                }else{\r\n                  // firestoreに名前、画像URL、uidを追加する\r\n                  addDoc(docRef, {\r\n                      title,\r\n                      category : selectcategory,\r\n                      detail   : selectdetail,\r\n                      memo,\r\n                      cost,\r\n                      period,\r\n                      image: {\r\n                        filename : image.name,\r\n                        url : url,},\r\n                    })\r\n                  }\r\n              })\r\n            })\r\n          }else{\r\n            // 画像を選択する\r\n            if (profile) {\r\n              const redipeRef = doc(firestore, collectionRecipeName, store.getState().documentID)\r\n              updateDoc(redipeRef, \r\n                { title , \r\n                  category : selectcategory, \r\n                  detail   : selectdetail,\r\n                  memo , \r\n                  cost , \r\n                  period})\r\n            } else {\r\n              addDoc(docRef, { \r\n                title, \r\n                category : selectcategory, \r\n                detail   : selectdetail,\r\n                memo,\r\n                cost , \r\n                period ,\r\n                image : {\r\n                  filename : \"\" , \r\n                  url : \"\" , },\r\n              })\r\n            }}\r\n            console.log(\"画像アップロード完了!\")\r\n            // 成功したアラート表示\r\n            setSuccess(true)\r\n            setTimeout(() => {\r\n              history.push(\"/\")\r\n            },2000)\r\n        } catch (err) {\r\n            console.log(err)\r\n            // 失敗したアラート表示\r\n            setError(true)\r\n            setErrorMessage(\"更新できませんでした。\")\r\n        }\r\n      }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <RecipeDetailsEditHeader/>\r\n      <Box>\r\n        <Box\r\n          sx={{\r\n            bgcolor: 'background.paper',\r\n            pt: 8,\r\n            pb: 6,}}>\r\n          <Container maxWidth=\"md\">\r\n            {/* 作品タイトル表示欄 */}\r\n            <Typography \r\n              sx={{ \r\n                p: 1, \r\n                pt : 2 ,\r\n                pb : 2 ,\r\n                fontSize: 20 , \r\n                width : 600 , \r\n                color:\"#a0522d\",\r\n                borderLeft : \"solid #a0522d 6px\"}}>\r\n              <strong>作品タイトル</strong>\r\n            </Typography>\r\n            <TextField \r\n              fullWidth\r\n              id           = \"name\"\r\n              name         = \"name\"\r\n              variant      = \"outlined\"\r\n              label        = \"タイトルを入力してください\"\r\n              defaultValue = {title}\r\n              value        = {title ?  title : \"\"}\r\n              onChange     = {e => setTilte(e.target.value)}\r\n              sx={{ \r\n                fontSize: 32 , \r\n                background: \"#faf0e6\", \r\n                borderRadius: 1 ,\r\n                color:\"#a0522d\"}}/>\r\n            <Box\r\n              sx={{\r\n                pt : 1,\r\n                pl : 4,\r\n                pr : 4,}}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={1}>\r\n                  {/* 作成したユーザーのアバター画像表示 */}\r\n                  <Avatar src={store.getState().photoURL} alt=\"\" />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  {/* 作成したユーザー名を表示 */}\r\n                  <Typography \r\n                    sx={{ \r\n                      p: 1, \r\n                      fontSize: 14 , \r\n                      width : 600 , \r\n                      color:\"#000000\"}}>\r\n                    {store.getState().displayName}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} align=\"center\">\r\n                  {/* 投稿した日時を表示 */}\r\n                  <Typography \r\n                    sx={{ \r\n                      p: 1, \r\n                      fontSize: 14 , \r\n                      width : 600 , \r\n                      color:\"#000000\"}}>\r\n                    投稿した日時：{format(createdat.toDate(), \"yyyy年MM月dd日\")}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Container>\r\n        </Box>\r\n        <Container sx={{ py: 1 }} maxWidth=\"md\">\r\n        <Box\r\n          sx={{\r\n            bgcolor: '#eeeeee',\r\n            pb : 4,\r\n            pl : 4,\r\n            pr : 4,}}>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={4}>\r\n              <Typography variant=\"body2\" align='left'>\r\n                {/* 作品画像を表示 */}\r\n                <CardMedia\r\n                  component = \"img\"\r\n                  height    = \"250\"\r\n                  image     = {image ? URL.createObjectURL(image) : profile ? store.getState().recipeimage : \"\"}\r\n                  alt       = \"\"/>\r\n              </Typography>\r\n              {/* 画像選択のボタン */}\r\n              <Box component=\"form\"  noValidate sx={{ mt: 4 }}>\r\n                <Container align = \"center\">\r\n                  <input\r\n                    id=\"image\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleChange}\r\n                    style={{ display: \"none\" }}/>\r\n                  <label htmlFor=\"image\">\r\n                    <Button \r\n                      variant=\"contained\" \r\n                      color=\"primary\" \r\n                      component=\"span\"\r\n                      sx = {{width : 200}}>\r\n                      画像を選択\r\n                    </Button>\r\n                  </label>\r\n                </Container>\r\n              </Box>\r\n              {/* 作品画像テスト用 */}\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              {/* 制作費用の表示 */}\r\n              <Grid>\r\n                <Typography \r\n                  sx={{ \r\n                    pt       :  1,\r\n                    pb       :  1,\r\n                    pl       :  1,\r\n                    fontSize : 14 , \r\n                    color    : \"#a0522d\",\r\n                    borderLeft : \"solid #a0522d 6px\"}}>\r\n                  <strong>作品カテゴリー</strong>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={12} md={6}>\r\n                  {/* categoryセレクトボックステスト用 */}\r\n                  <FormControl fullWidth >\r\n                    <InputLabel id=\"category-label\">\r\n                      大項目を選択してください\r\n                    </InputLabel>\r\n                    {/* category選択のセレクトボックス */}\r\n                    <Select\r\n                      labelId      = \"category-name-label\"\r\n                      id           = \"category-name\"\r\n                      defaultValue = {selectcategory}\r\n                      value        = {selectcategory ? selectcategory : store.getState().category}\r\n                      onChange     = {handleSelectChange}\r\n                      label        = \"カテゴリーを選択してください\"\r\n                      sx={{ \r\n                        background: \"#ffffff\", \r\n                        borderRadius: 1 ,\r\n                        }}>\r\n                      {category.map((category) => (\r\n                        <MenuItem\r\n                          key   = {category}\r\n                          value = {category ? category : \"\"}>\r\n                          {category}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  {/* category セレクトボックステスト用 */}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  {/* detailセレクトボックステスト用 */}\r\n                  <FormControl fullWidth >\r\n                    <InputLabel id=\"detail-label\">\r\n                      小項目を選択してください\r\n                    </InputLabel>\r\n                    {/* detail選択のセレクトボックス */}\r\n                    <Select\r\n                      labelId      = \"detail-name-label\"\r\n                      id           = \"detail-name\"\r\n                      defaultValue = {selectdetail}\r\n                      value        = {selectdetail ? selectdetail : store.getState().detail}\r\n                      onChange     = {handleDetailChange}\r\n                      label        = \"カテゴリーを選択してください\"\r\n                      sx={{ \r\n                        background: \"#ffffff\", \r\n                        borderRadius: 1 ,\r\n                        \r\n                        }}>\r\n                      {detail.map((detail) => (\r\n                        <MenuItem\r\n                          key   = {detail}\r\n                          value = {detail ? detail : \"\"}>\r\n                          {detail}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  {/* detail セレクトボックステスト用 */}\r\n                </Grid>\r\n              </Grid>\r\n              <br/>\r\n              {/* 制作費用の表示 */}\r\n              <Grid>\r\n                <Typography \r\n                  sx={{ \r\n                    pt       :  1,\r\n                    pb       :  1,\r\n                    pl       :  1,\r\n                    fontSize : 14 , \r\n                    color    : \"#a0522d\",\r\n                    borderLeft : \"solid #a0522d 6px\"}}>\r\n                  かかった費用\r\n                </Typography>\r\n              </Grid>\r\n              <Grid>\r\n                <TextField \r\n                  fullWidth\r\n                  id           = \"name\"\r\n                  name         = \"name\"\r\n                  variant      = \"outlined\"\r\n                  label        = \"費用を入力してください\"\r\n                  defaultValue = {cost}\r\n                  value        = {cost ? cost : \"\"}\r\n                  onChange     = {e => setCost(e.target.value)}\r\n                  sx={{ \r\n                    fontSize: 32 , \r\n                    background: \"#ffffff\", \r\n                    borderRadius: 1 ,\r\n                    color:\"#a0522d\"}}/>\r\n              </Grid>\r\n              <br/>\r\n              {/* 制作期間の表示 */}\r\n              <Grid>\r\n                <Typography \r\n                  sx={{ \r\n                    pt       :  1,\r\n                    pb       :  1,\r\n                    pl       :  1,\r\n                    fontSize : 14 , \r\n                    color    : \"#a0522d\",\r\n                    borderLeft : \"solid #a0522d 6px\"}}>\r\n                  所要時間\r\n                </Typography>\r\n              </Grid>\r\n              <Grid>\r\n                <TextField \r\n                  fullWidth\r\n                  id           = \"name\"\r\n                  name         = \"name\"\r\n                  variant      = \"outlined\"\r\n                  label        = \"所要時間を入力してください\"\r\n                  defaultValue = {period}\r\n                  value        = {period ? period : \"\"}\r\n                  onChange     = {e => setPeriod(e.target.value)}\r\n                  sx={{ \r\n                    fontSize: 32 , \r\n                    background: \"#ffffff\", \r\n                    borderRadius: 1 ,\r\n                    color:\"#a0522d\"}}/>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <br/>\r\n          {/* 作品コメント表示欄 */}\r\n          <Grid>\r\n            <Typography \r\n              sx={{ \r\n                pt       :  1,\r\n                pb       :  1,\r\n                pl       :  1,\r\n                fontSize : 14 , \r\n                color    : \"#a0522d\",\r\n                borderLeft : \"solid #a0522d 6px\"}}>\r\n              <strong>作品のコメント</strong>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid>\r\n            <TextField \r\n              fullWidth\r\n              multiline\r\n              id           = \"name\"\r\n              name         = \"name\"\r\n              variant      = \"outlined\"\r\n              label        = \"コメントを入力してください\"\r\n              defaultValue = {memo}\r\n              value        = {memo ? memo : \"\"}\r\n              onChange     = {e => setMemo(e.target.value)}\r\n              sx={{ \r\n                fontSize: 32 , \r\n                background: \"#ffffff\", \r\n                borderRadius: 1 ,\r\n                color:\"#a0522d\"}}/>\r\n          </Grid>\r\n        </Box>\r\n        <br/>\r\n        {error && <Alert severity=\"error\">{errormessage}</Alert>}\r\n        {success && (<Alert severity=\"success\"> 更新が完了しました！</Alert>)}\r\n          <Grid container spacing={0} >\r\n            <Grid item xs={4} align = \"center\">\r\n              {/* 戻るボタンの表示 */}\r\n              <RecipeDetailsEditButton \r\n                variant = \"outlined\"\r\n                text    = \"戻る\"\r\n                link    = {`/recipedetails/${getrecipenum}`}\r\n                sx = {{width : 200}}/>\r\n            </Grid>\r\n            <Grid item xs={4} align = \"center\">\r\n              {/* 削除ボタンの表示 */}\r\n              <Button\r\n                variant = \"outlined\"\r\n                sx = {{width : 200}}\r\n                onClick = {() => handleDelete(store.getState().documentID)}>\r\n                  この投稿を削除する\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={4} align = \"center\">\r\n              {/* 編集完了ボタンの表示 */}\r\n              <Button \r\n                variant = \"contained\"\r\n                sx = {{width : 200}}\r\n                onClick = {handleSubmit}>\r\n                  更新する\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        <br/>\r\n        </Container>\r\n      </Box>\r\n      {/* Footer */}\r\n      <Footer/>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}","import React ,\r\n      { useState,}    from \"react\";\r\nimport { styled }     from '@mui/material/styles';\r\nimport Box            from '@mui/material/Box';\r\nimport ButtonBase     from '@mui/material/ButtonBase';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PrivacyTipSharp } from \"@mui/icons-material\";\r\n\r\n\r\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\r\n  position: 'relative',\r\n  height: 100,\r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '100% !important', // Overrides inline-style\r\n    height: 100,\r\n  },\r\n  '&:hover, &.Mui-focusVisible': {\r\n    zIndex: 1,\r\n    '& .MuiImageBackdrop-root': {\r\n      opacity: 0.15,\r\n    },\r\n    '& .MuiImageMarked-root': {\r\n      opacity: 0,\r\n    },\r\n    '& .MuiTypography-root': {\r\n      border: '4px solid currentColor',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ImageSrc = styled('span')({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center 40%',\r\n});\r\n\r\nconst Image = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\nconst ImageBackdrop = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundColor: \"#ddd\",\r\n  opacity: 0.1,\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nconst ImageMarked = styled('span')(({ theme }) => ({\r\n  height: 3,\r\n  width: 18,\r\n  backgroundColor: theme.palette.common.white,\r\n  position: 'absolute',\r\n  bottom: -2,\r\n  left: 'calc(50% - 9px)',\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\n\r\nexport default function ProfilesImageButton(props) {\r\n    // タイトル表示\r\n    const [titlename, setTitleName] = useState(\"\");\r\n    var text  = props.text\r\n    var recipeNum = props.info.recipenum\r\n    var info = props.info\r\n    const history = useHistory();\r\n    // タイトル変更\r\n    var changeTitle = (props) => {\r\n        setTitleName(info.title)\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexWrap: 'wrap', minWidth: 70, width: '70%' }}>\r\n      <ImageButton\r\n        focusRipple\r\n        key     = {props.imgURL}\r\n        style   = {{\r\n          width  : \"70px\",\r\n          height : \"70px\"}}\r\n        text    = {props.text}\r\n        onClick = {() => {\r\n            changeTitle()\r\n            console.log(recipeNum)\r\n            // 作品番号(recepeNum)をアドレス末尾に付与\r\n            history.push(`/recipedetails/${recipeNum}`)}}>\r\n        <ImageSrc style={{ backgroundImage: `url(${props.imgURL})` }} />\r\n        <ImageBackdrop className=\"MuiImageBackdrop-root\" />\r\n        <Image>\r\n        </Image>\r\n      </ImageButton>\r\n    </Box>\r\n  );\r\n}\r\n","import  React ,\r\n      { useEffect,\r\n        useState,\r\n        useRef , }           from \"react\";\r\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\r\nimport StarsIcon from '@mui/icons-material/Stars';\r\nimport InsertCommentIcon from '@mui/icons-material/InsertComment';\r\nimport { collection,\r\n         getDocs ,}          from 'firebase/firestore';\r\nimport { Typography , \r\n         Box ,\r\n         Grid,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         Link,\r\n         Button,}            from \"@mui/material\"\r\nimport { format ,\r\n         formatDistance,  }  from \"date-fns\"\r\nimport { db }                from '../../firebase';\r\nimport { useHistory}         from 'react-router';\r\nimport { ja }                from \"date-fns/locale\"\r\nimport   useProfile          from \"../hooks/useProfile\"\r\nimport   Paper               from '@mui/material/Paper';\r\nimport { styled }            from '@mui/material/styles';\r\nimport   ProfilesImageButton from \"./ProfilesImageButton\";\r\nimport { firebaseApp }       from \"../../firebase\";\r\n\r\n\r\nconst collectionRecipeName = \"recipe\"\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#ffffff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\nconst theme = createTheme()\r\n\r\nexport default function ProfileImageList() {\r\n  const [recipe, setRecipe] = useState([]);\r\n  const [goodcount , setGoodCount] = useState(0)\r\n  const [bookmarkcount , setBookMarkCount] = useState(0)\r\n  const profileData = useProfile()             // プロフィール取得\r\n  var profile = profileData.profile            // プロフィール取得\r\n  const bottomRef = useRef(null)\r\n  const recipeAry = [];\r\n  const history = useHistory()\r\n  const firestorage = firebaseApp.firestorage  // 認証情報チェック用\r\n\r\n  // リンク先に遷移\r\n  const handleSubmit = (event) => {\r\n    history.push(\"/recipedetails/edit\")\r\n  }\r\n\r\n  // pathnameからuidを取得\r\n  const uidAry = window.location.pathname.split(\"/\")\r\n  const getuid = uidAry[2]\r\n\r\n  // タイムスタンプ\r\n  const time = (date) => {\r\n    let timestamp = formatDistance(new Date(), date.toDate(), {\r\n      locale: ja,\r\n    })\r\n    if (timestamp.indexOf(\"未満\") !== -1) {\r\n      return (timestamp = \"たった今\")\r\n    } else if (\r\n      timestamp.indexOf(\"か月\") !== -1 ||\r\n      timestamp.indexOf(\"年\") !== -1\r\n    ) {\r\n      return (timestamp = format(date.toDate(), \"yyyy年M月d日\", {\r\n        locale: ja,\r\n      }))\r\n    } else {\r\n      return (timestamp = timestamp + \"前\")\r\n    }\r\n  }\r\n\r\n  const fetchRecipeData = () => {\r\n    getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        // ログインしているユーザー情報を取得\r\n        firebaseApp.fireauth.onAuthStateChanged(user => {\r\n            // ログインユーザーのuidとfirestore/recipe/image/uidの値が一致している場合のみ配列に追加\r\n            // if(user.uid === doc.data().image.uid){\r\n            if(getuid === doc.data().image.uid){\r\n              recipeAry.push({\r\n                id : doc.id,\r\n                ...doc.data()\r\n              })\r\n            }\r\n          })\r\n        })\r\n    }).then(()=>{\r\n      recipeAry.sort(function(a, b) {\r\n        return (a.createdAt < b.createdAt) ? -1 : 1;  //オブジェクトの昇順ソート\r\n      })\r\n      setRecipe([...recipeAry])\r\n    })};\r\n\r\n  useEffect(() => {\r\n    fetchRecipeData()\r\n  },[]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container spacing={0} >\r\n        {recipe ? ( \r\n          recipe.map((recipe) => (\r\n          <Box \r\n            key={recipe.id} \r\n            sx={{\r\n              display: \"flex\",\r\n              my: 2,\r\n              gap: 2,\r\n              flexGrow: 1, m: 2,}}>\r\n            <Grid item xs={2} align = \"left\">\r\n              <Box>\r\n                {/* 作品画像の表示 */}\r\n                <ProfilesImageButton\r\n                  imgURL = {recipe.image.url}\r\n                  info   = {recipe}\r\n                  text   = \"何か入れる\"\r\n                  link   = \"/recipedetail/\"/>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={10} align = \"left\">\r\n            {/* 作品タイトルの表示 */}\r\n              <Typography sx={{ fontSize: 18 , width : 380}}>\r\n                {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                <Link href={`/recipedetails/${recipe.recipenum}`} color=\"#000000\">\r\n                  <strong>{recipe.title}</strong>\r\n                </Link>\r\n              </Typography>\r\n              <Grid container spacing={0} >\r\n                <Grid item xs={6} align = \"center\">\r\n                  {/* いいねボタン表示 */}\r\n                  <Grid container spacing={0} >\r\n                    <Grid item xs={4} align = \"left\">\r\n                      <ThumbUpAltIcon sx={{ color : \"#ffa500\" , fontSize: 20 }}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                          {recipe.good}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} align = \"left\">\r\n                      {/* お気に入りボタン表示 */}\r\n                      <StarsIcon color=\"#ffffff\" sx={{ color : \"#a0522d\" , fontSize: 20 }}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                        {recipe.bookmark}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {/* コメントボタン表示 */}\r\n                    {/* <Grid item xs={4} align = \"left\">\r\n                      <InsertCommentIcon sx={{ color : \"#1e90ff\" , fontSize: 20 }}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                          {goodcount}\r\n                      </Typography>\r\n                    </Grid> */}\r\n                  </Grid>\r\n                </Grid>\r\n                  {/* 投稿日時の表示 */}\r\n                <Grid item xs={6} align = \"left\">\r\n                  <Typography color=\"#000000\" variant=\"body2\">\r\n                    投稿日：{format(recipe.createdAt.toDate(), \"yyyy年MM月dd日\")}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          ))) : (\r\n          <p>投稿が存在しません</p>)}\r\n          <div ref={bottomRef}></div>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import  React ,\r\n      { useEffect,\r\n        useState,\r\n        useRef , }           from \"react\";\r\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\r\nimport StarsIcon from '@mui/icons-material/Stars';\r\nimport InsertCommentIcon from '@mui/icons-material/InsertComment';\r\nimport { collection,\r\n         getDocs ,}          from 'firebase/firestore';\r\nimport { Typography , \r\n         Box ,\r\n         Grid,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         Link,\r\n         Button,}            from \"@mui/material\"\r\nimport { format ,\r\n         formatDistance,  }  from \"date-fns\"\r\nimport { db }                from '../../firebase';\r\nimport { useHistory}         from 'react-router';\r\nimport { ja }                from \"date-fns/locale\"\r\nimport   useProfile          from \"../hooks/useProfile\"\r\nimport   Paper               from '@mui/material/Paper';\r\nimport { styled }            from '@mui/material/styles';\r\nimport   ProfilesImageButton from \"./ProfilesImageButton\";\r\nimport { firebaseApp }       from \"../../firebase\";\r\n\r\nconst collectionRecipeName = \"recipe\"\r\nconst collectionBookMarkName  = \"/bookmark\"\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#ffffff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\nconst theme = createTheme()\r\n\r\nexport default function BookmarkImageList() {\r\n  const profileData = useProfile()             // プロフィール取得\r\n  var profile = profileData.profile            // プロフィール取得\r\n  const bottomRef = useRef(null)\r\n  const history = useHistory()\r\n  const firestorage = firebaseApp.firestorage  // 認証情報チェック用\r\n\r\n  // リンク先に遷移\r\n  const handleSubmit = (event) => {\r\n    history.push(\"/recipedetails/edit\")\r\n  }\r\n\r\n  // pathnameからuidを取得\r\n  const uidAry = window.location.pathname.split(\"/\")\r\n  const getuid = uidAry[2]\r\n\r\n  // タイムスタンプ\r\n  const time = (date) => {\r\n    let timestamp = formatDistance(new Date(), date.toDate(), {\r\n      locale: ja,\r\n    })\r\n    if (timestamp.indexOf(\"未満\") !== -1) {\r\n      return (timestamp = \"たった今\")\r\n    } else if (\r\n      timestamp.indexOf(\"か月\") !== -1 ||\r\n      timestamp.indexOf(\"年\") !== -1\r\n    ) {\r\n      return (timestamp = format(date.toDate(), \"yyyy年M月d日\", {\r\n        locale: ja,\r\n      }))\r\n    } else {\r\n      return (timestamp = timestamp + \"前\")\r\n    }\r\n  }\r\n\r\n  // firestoreからユーザー情報の取得\r\n  const [bookmark , setBookMark] = useState([]);\r\n  const bookmarkAry = [];\r\n  const [recipe , setRecipe] = useState([]);\r\n  const recipeAry = [];\r\n  const fetchRecipeData = () => {\r\n    getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n      // recipenumと遷移元のレシピNoを比較する\r\n      querySnapshot.forEach((document) => {\r\n        // bookmarkコレクションの個数を取得\r\n        getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionBookMarkName)).then((querySnapshot)=>{\r\n          querySnapshot.forEach((documentBookMark) => {\r\n        // 備忘録：文字列を比較する際、見た目は一緒なのになぜか一致しない現象が起きた。\r\n        // ただし、文字列同士をString()で処理すると問題解決\r\n            if(String(getuid) === String(documentBookMark.data().uid)){\r\n              bookmarkAry.push({\r\n                id : documentBookMark.id,\r\n                ...document.data(),\r\n              })\r\n            }\r\n          })\r\n        }).then(()=>{\r\n          bookmarkAry.sort(function(a, b) {\r\n            return (a.createdAt < b.createdAt) ? -1 : 1;  //オブジェクトの昇順ソート\r\n          })\r\n          recipeAry.sort(function(a, b) {\r\n            return (a.createdAt < b.createdAt) ? -1 : 1;  //オブジェクトの昇順ソート\r\n          })\r\n          setBookMark([...bookmarkAry])\r\n          setRecipe([...recipeAry])\r\n        })\r\n      })\r\n    })}\r\n\r\n  useEffect(() => {\r\n    fetchRecipeData()\r\n  },[]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container spacing={0} >\r\n        {bookmark ? ( \r\n          bookmark.map((bookmark) => (\r\n            <Box \r\n            key={bookmark.id} \r\n            sx={{\r\n              display: \"flex\",\r\n              my: 2,\r\n              gap: 2,\r\n              flexGrow: 1, m: 2,}}>\r\n            <Grid item xs={2} align = \"left\">\r\n              <Box>\r\n                {/* 作品画像の表示 */}\r\n                <ProfilesImageButton\r\n                  imgURL = {bookmark.image.url}\r\n                  info   = {bookmark}\r\n                  text   = \"何か入れる\"\r\n                  link   = \"/recipedetail/\"/>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={10} align = \"left\">\r\n            {/* 作品タイトルの表示 */}\r\n              <Typography sx={{ fontSize: 18 , width : 380}}>\r\n                {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                <Link href={`/recipedetails/${bookmark.recipenum}`} color=\"#000000\">\r\n                  <strong>{bookmark.title}</strong>\r\n                </Link>\r\n              </Typography>\r\n              <Grid container spacing={0} >\r\n                <Grid item xs={6} align = \"center\">\r\n                  {/* いいねボタン表示 */}\r\n                  <Grid container spacing={0} >\r\n                    <Grid item xs={4} align = \"left\">\r\n                      <ThumbUpAltIcon sx={{ color : \"#ffa500\" , fontSize: 20 }}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                          {bookmark.good}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} align = \"left\">\r\n                      {/* お気に入りボタン表示 */}\r\n                      <StarsIcon color=\"#ffffff\" sx={{ color : \"#a0522d\" , fontSize: 20 }}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                        {bookmark.bookmark}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {/* コメントボタン表示 */}\r\n                    {/* <Grid item xs={4} align = \"left\">\r\n                      <InsertCommentIcon sx={{ color : \"#1e90ff\" , fontSize: 20 }}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                          {goodcount}\r\n                      </Typography>\r\n                    </Grid> */}\r\n                  </Grid>\r\n                </Grid>\r\n                  {/* 投稿日時の表示 */}\r\n                <Grid item xs={6} align = \"left\">\r\n                  <Typography color=\"#000000\" variant=\"body2\">\r\n                    投稿日：{format(bookmark.createdAt.toDate(), \"yyyy年MM月dd日\")}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          ))) : (\r\n          <p>投稿が存在しません</p>)}\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import  React ,\r\n      { useEffect,\r\n        useState,\r\n        useRef , }           from \"react\";\r\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\r\nimport StarsIcon from '@mui/icons-material/Stars';\r\nimport InsertCommentIcon from '@mui/icons-material/InsertComment';\r\nimport { collection,\r\n         getDocs ,}          from 'firebase/firestore';\r\nimport { Typography , \r\n         Box ,\r\n         Grid,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         Link,\r\n         Button,}            from \"@mui/material\"\r\nimport { format ,\r\n         formatDistance,  }  from \"date-fns\"\r\nimport { db }                from '../../firebase';\r\nimport { useHistory}         from 'react-router';\r\nimport { ja }                from \"date-fns/locale\"\r\nimport   useProfile          from \"../hooks/useProfile\"\r\nimport   Paper               from '@mui/material/Paper';\r\nimport { styled }            from '@mui/material/styles';\r\nimport   ProfilesImageButton from \"./ProfilesImageButton\";\r\nimport { firebaseApp }       from \"../../firebase\";\r\n\r\nconst collectionRecipeName = \"recipe\"\r\nconst collectionGoodName  = \"/good\"\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#ffffff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\nconst theme = createTheme()\r\n\r\nexport default function GoodImageList() {\r\n  const profileData = useProfile()             // プロフィール取得\r\n  var profile = profileData.profile            // プロフィール取得\r\n  const bottomRef = useRef(null)\r\n  const history = useHistory()\r\n  const firestorage = firebaseApp.firestorage  // 認証情報チェック用\r\n\r\n  // リンク先に遷移\r\n  const handleSubmit = (event) => {\r\n    history.push(\"/recipedetails/edit\")\r\n  }\r\n\r\n  // pathnameからuidを取得\r\n  const uidAry = window.location.pathname.split(\"/\")\r\n  const getuid = uidAry[2]\r\n\r\n  // タイムスタンプ\r\n  const time = (date) => {\r\n    let timestamp = formatDistance(new Date(), date.toDate(), {\r\n      locale: ja,\r\n    })\r\n    if (timestamp.indexOf(\"未満\") !== -1) {\r\n      return (timestamp = \"たった今\")\r\n    } else if (\r\n      timestamp.indexOf(\"か月\") !== -1 ||\r\n      timestamp.indexOf(\"年\") !== -1\r\n    ) {\r\n      return (timestamp = format(date.toDate(), \"yyyy年M月d日\", {\r\n        locale: ja,\r\n      }))\r\n    } else {\r\n      return (timestamp = timestamp + \"前\")\r\n    }\r\n  }\r\n\r\n  // firestoreからユーザー情報の取得\r\n  const [good , setGood] = useState([]);\r\n  const goodAry = [];\r\n  const [recipe , setRecipe] = useState([]);\r\n  const recipeAry = [];\r\n  const fetchRecipeData = () => {\r\n    getDocs(collection(db, collectionRecipeName)).then((querySnapshot)=>{\r\n      // recipenumと遷移元のレシピNoを比較する\r\n      querySnapshot.forEach((document) => {\r\n        // goodコレクションの個数を取得\r\n        getDocs(collection(db, collectionRecipeName+\"/\"+document.id+collectionGoodName)).then((querySnapshot)=>{\r\n          querySnapshot.forEach((documentGood) => {\r\n        // 備忘録：文字列を比較する際、見た目は一緒なのになぜか一致しない現象が起きた。\r\n        // ただし、文字列同士をString()で処理すると問題解決\r\n            if(String(getuid) === String(documentGood.data().uid)){\r\n              goodAry.push({\r\n                id : documentGood.id,\r\n                ...document.data(),\r\n              })\r\n              console.log(\"if文通過してます\")\r\n            }\r\n          })\r\n        }).then(()=>{\r\n          setGood([...goodAry])\r\n          setRecipe([...recipeAry])\r\n          console.log(\"goodAry =>\" , goodAry)\r\n        })\r\n      })\r\n    })}\r\n\r\n  useEffect(() => {\r\n    fetchRecipeData()\r\n  },[]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container spacing={0} >\r\n        {good ? ( \r\n          good.map((good) => (\r\n            <Box \r\n            key={good.id} \r\n            sx={{\r\n              display: \"flex\",\r\n              my: 2,\r\n              gap: 2,\r\n              flexGrow: 1, m: 2,}}>\r\n            <Grid item xs={2} align = \"left\">\r\n              <Box>\r\n                {/* 作品画像の表示 */}\r\n                <ProfilesImageButton\r\n                  imgURL = {good.image.url}\r\n                  info   = {good}\r\n                  text   = \"何か入れる\"\r\n                  link   = \"/recipedetail/\"/>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={10} align = \"left\">\r\n            {/* 作品タイトルの表示 */}\r\n              <Typography sx={{ fontSize: 18 , width : 380}}>\r\n                {/* 作品番号をアドレスの末尾に付与して遷移する */}\r\n                <Link href={`/recipedetails/${good.recipenum}`} color=\"#000000\">\r\n                  <strong>{good.title}</strong>\r\n                </Link>\r\n              </Typography>\r\n              <Grid container spacing={0} >\r\n                <Grid item xs={6} align = \"center\">\r\n                  {/* いいねボタン表示 */}\r\n                  <Grid container spacing={0} >\r\n                    <Grid item xs={4} align = \"left\">\r\n                      <ThumbUpAltIcon sx={{ color : \"#ffa500\" , fontSize: 20 }}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                          {good.good}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} align = \"left\">\r\n                      {/* お気に入りボタン表示 */}\r\n                      <StarsIcon color=\"#ffffff\" sx={{ color : \"#a0522d\" , fontSize: 20 }}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                        {good.bookmark}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {/* コメントボタン表示 */}\r\n                    {/* <Grid item xs={4} align = \"left\">\r\n                      <InsertCommentIcon sx={{ color : \"#1e90ff\" , fontSize: 20 }}/>\r\n                      <Typography color=\"#000000\" variant=\"caption\" fontSize={15}>\r\n                          {goodcount}\r\n                      </Typography>\r\n                    </Grid> */}\r\n                  </Grid>\r\n                </Grid>\r\n                  {/* 投稿日時の表示 */}\r\n                <Grid item xs={6} align = \"left\">\r\n                  <Typography color=\"#000000\" variant=\"body2\">\r\n                    投稿日：{format(good.createdAt.toDate(), \"yyyy年MM月dd日\")}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          ))) : (\r\n          <p>投稿が存在しません</p>)}\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React          from 'react'\r\nimport Button         from '@mui/material/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ProfilesButton(props){\r\n    const history = useHistory();\r\n    return(\r\n        <Button \r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disabled  = {props.disabled}\r\n            fullWidth = {props.fullWidth}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            padding   = {props.padding}\r\n            onClick={() => {\r\n                history.push(props.link);\r\n                }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import * as React     from 'react';\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,} from \"@mui/material\"\r\nimport ProfileButton from './ProfilesButton';\r\nimport HeaderTitle    from '../HeaderTitle';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport useProfile from \"../hooks/useProfile\"\r\n\r\nexport default function ProfilesHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }} >\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <HeaderTitle\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            {/* <ProfileButton\r\n              text      =\"操作説明\" \r\n              link      = \"/operation\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<FeedIcon/>}/> */}\r\n            <ProfileButton\r\n              text      =\"ホーム\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<HomeIcon/>}\r\n              sx        = {{\"&:hover\": {background: \"#E64545\"}}}/>\r\n            {/* <ProfileButton\r\n              id        = \"logout\"\r\n              text      = \"ログアウト\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<LogoutIcon/>}/> */}\r\n            <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import   React, \r\n      {  useEffect,\r\n         useState }       from \"react\"\r\nimport { Avatar,\r\n         Paper,\r\n         Typography,\r\n         CssBaseline,\r\n         Box,\r\n         TextField,\r\n         Button,\r\n         Container,\r\n         Tabs ,\r\n         Tab , }           from \"@mui/material\"\r\nimport { useHistory}       from 'react-router';\r\nimport { createTheme, \r\n         ThemeProvider }   from '@mui/material/styles';\r\nimport   useProfile        from \"../hooks/useProfile\"\r\nimport   store             from '../../store/index';\r\nimport   ProfilesImageList from \"./ProfilesImageList\"\r\nimport   BookmarkImageList from \"./BookmarkImageList\"\r\nimport   GoodImageList     from \"./GoodImageList\"\r\nimport   ProfilesHeader    from \"./ProfilesHeader\"\r\nimport { db }              from '../../firebase';\r\nimport { collection,\r\n         getDocs ,}        from 'firebase/firestore';\r\nimport Footer            from '../Footer';\r\n\r\nconst collectionName = \"users\"\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n});\r\n\r\n// タブパネルの関数\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst Profiles = () => {\r\n  const [name, setName] = useState(\"\")\r\n  const [location , setLocation] = useState(\"\")\r\n  const [userinfo, setUserInfo] = useState([]);\r\n  const [selfintroduction , setSelfIntroduction] = useState(\"\")\r\n  const [image, setImage] = useState()\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const history = useHistory()\r\n  const userDataAry = [];\r\n\r\n  // pathnameからuidを取得\r\n  const uidAry = window.location.pathname.split(\"/\")\r\n  const getuid = uidAry[2]\r\n\r\n  const handleSubmit = (event) => {\r\n    store.getState().displayName = profile.name\r\n    store.getState().location    = profile.location\r\n    store.getState().memo        = profile.selfintroduction\r\n    history.push(\"/profile/edit\")\r\n  }\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  // firestoreからユーザー情報の取得\r\n  const fetchUsersData = () => {\r\n    getDocs(collection(db, collectionName)).then((querySnapshot)=>{\r\n      // recipenumと遷移元のレシピNoを比較する\r\n      querySnapshot.forEach((doc) => {\r\n          // 備忘録：文字列を比較する際、見た目は一緒なのになぜか一致しない現象が起きた。\r\n          // ただし、文字列同士をString()で処理すると問題解決\r\n          if(String(doc.data().uid) === String(getuid)){\r\n            userDataAry.push({\r\n              id : doc.id,\r\n              ...doc.data()\r\n          })\r\n        }\r\n      })\r\n    }).then(()=>{\r\n      setUserInfo([...userDataAry])\r\n    })}\r\n\r\n  useEffect(() => {\r\n    fetchUsersData()\r\n  },[])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Container maxWidth>\r\n            <ProfilesHeader/>\r\n        </Container>\r\n        {userinfo ? ( \r\n          userinfo.map((userinfo) => (\r\n        <Container maxWidth=\"sm\">\r\n          <CssBaseline />\r\n          {/* タブの文言 */}\r\n          <Box sx={{ width: '100%' }}>\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n              <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                <Tab label=\"プロフィール情報\" {...a11yProps(0)} />\r\n                <Tab label=\"投稿した作品\" {...a11yProps(1)} />\r\n                {/* お気に入りタブはログイン中のユーザーのみ表示する */}\r\n                {profile && profile.uid === getuid ? \r\n                  <Tab label=\"お気に入り\" {...a11yProps(2)} />\r\n                 : \"\"}\r\n                {/* いいねタブはログイン中のユーザーのみ表示する */}\r\n                {profile && profile.uid === getuid ? \r\n                  <Tab label=\"いいね\" {...a11yProps(3)} />\r\n                 : \"\"}\r\n                </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n              {/* プロフィールタブの中身表示 */}\r\n              <Paper sx={{ m: 1, p: 1 }}>\r\n                {/* ユーザー名表示 */}\r\n                  <Typography align=\"center\" variant=\"h5\" >\r\n                    {name ? name : userinfo ? userinfo.name : \"\"} さん<br/>\r\n                    のプロフィール</Typography>\r\n                  <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 4 }}>\r\n                  <Container align = \"center\">\r\n                    {/* アバター画像表示 */}\r\n                      <Avatar\r\n                        sx={{ width: 100, height: 100 }}\r\n                        src={image ? URL.createObjectURL(image) : userinfo ? userinfo.image : \"\"}alt=\"\"/>\r\n                    <input\r\n                        id     = \"image\"\r\n                        type   = \"file\"\r\n                        accept = \"image/*\"\r\n                        style  = {{ display: \"none\" }}/>\r\n                  </Container>\r\n                      <Container align=\"left\">\r\n                        <Typography\r\n                          sx = {{backgroundColor : \"#ffffff\",\r\n                                 color : \"#000000\",\r\n                                 padding: \"0.2rem\",\r\n                                 borderLeft : \"solid #E64545 6px\"}}>\r\n                          <strong>ユーザー名</strong>\r\n                        </Typography>\r\n                        {/* ユーザー名表示 */}\r\n                        <Typography\r\n                          sx = {{pt : 2 , pl : 2 ,}}>\r\n                            {name ? name : userinfo ? userinfo.name : \"\"}\r\n                        </Typography>\r\n                      </Container>\r\n                      <br/>\r\n                      <Container align=\"left\">\r\n                      <Typography\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                               color : \"#000000\",\r\n                               padding: \"0.2rem\",\r\n                               borderLeft : \"solid #E64545 6px\"}}>\r\n                        <strong>所在地</strong>\r\n                      </Typography>\r\n                        {/* 所在地表示 */}\r\n                          <Typography\r\n                            sx = {{pt : 2 , pl : 2 ,}}>\r\n                              {location ? location : userinfo ? userinfo.location : \"\"}\r\n                          </Typography>\r\n                        </Container>\r\n                        <br/>\r\n                        <Container align=\"left\">\r\n                          <Typography\r\n                            sx = {{backgroundColor : \"#ffffff\",\r\n                                   color : \"#000000\",\r\n                                   padding: \"0.2rem\",\r\n                                   borderLeft : \"solid #E64545 6px\"}}>\r\n                            <strong>自己紹介</strong>\r\n                          </Typography>\r\n                          {/* 自己紹介の表示 */}\r\n                          <Typography\r\n                            sx = {{pt : 2 , pl : 2 ,}}>\r\n                              {selfintroduction ? selfintroduction : userinfo ? userinfo.selfintroduction : \"よろしくお願いします。\"}\r\n                          </Typography>\r\n                        </Container>\r\n                        {/* 編集ボタンはログイン中のユーザーのみ表示 */}\r\n                      {profile && profile.uid === getuid ? \r\n                      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\r\n                        プロフィールを編集する\r\n                      </Button> : \"\"}\r\n                  </Box>\r\n              </Paper>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              {/* 投稿した作品の中身表示 */}\r\n              <Paper sx={{ m: 0, p: 0 }}>\r\n                <Typography align=\"center\" variant=\"h5\">\r\n                  {name ? name : userinfo ? userinfo.name : \"\"} さん<br/>\r\n                  の投稿した作品\r\n                </Typography>\r\n                <ProfilesImageList/>\r\n              </Paper>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              {/* お気に入りの中身表示 */}\r\n              <Paper sx={{ m: 1, p: 1 }}>\r\n                  <Typography align=\"center\" variant=\"h5\">\r\n                  {name ? name : profile ? profile.name : \"\"} さん<br/>\r\n                    がお気に入りした作品</Typography>\r\n                    <BookmarkImageList/>\r\n              </Paper>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n              {/* お気に入りの中身表示 */}\r\n              <Paper sx={{ m: 1, p: 1 }}>\r\n                  <Typography align=\"center\" variant=\"h5\">\r\n                  {name ? name : profile ? profile.name : \"\"} さん<br/>\r\n                    がいいねした作品</Typography>\r\n                    <GoodImageList/>\r\n              </Paper>\r\n            </TabPanel>\r\n          </Box>\r\n        </Container>\r\n        ))) : (\r\n          <p>投稿が存在しません</p>)}\r\n      <Footer/>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Profiles","import React          from 'react'\r\nimport Button         from '@mui/material/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ProfileEditButton(props){\r\n    const history = useHistory();\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disabled  = {props.disabled}\r\n            disableElevation\r\n            fullWidth = {props.fullWidth}\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                history.push(props.link);\r\n                }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import * as React     from 'react';\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,} from \"@mui/material\"\r\nimport ProfileButton from './ProfileEditButton';\r\nimport HeaderTitle    from '../HeaderTitle';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport useProfile from \"../hooks/useProfile\"\r\n\r\nexport default function ProfileEditHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }} >\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <HeaderTitle\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            {/* <ProfileButton\r\n              text      =\"操作説明\" \r\n              link      = \"/operation\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<FeedIcon/>}/> */}\r\n            <ProfileButton\r\n              text      =\"ホーム\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<HomeIcon/>}/>\r\n            {/* <ProfileButton\r\n              id        = \"logout\"\r\n              text      = \"ログアウト\" \r\n              link      = \"/\"\r\n              size      = \"large\"\r\n              variant   = \"contained\"\r\n              startIcon = {<LogoutIcon/>}/> */}\r\n            <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React           from 'react';\r\nimport Box             from '@mui/material/Box';\r\nimport InputLabel      from '@mui/material/InputLabel';\r\nimport MenuItem        from '@mui/material/MenuItem';\r\nimport FormControl     from '@mui/material/FormControl';\r\nimport { Select }      from '@mui/material';\r\nimport { withRouter }  from 'react-router-dom';\r\nimport FormHelperText  from '@mui/material/FormHelperText';\r\n\r\nfunction ProfileEditSelectBox(props) {\r\n\r\n  return (\r\n    <Box sx={{ minWidth: 120 }}>\r\n      <FormControl fullWidth error={props.error}>\r\n        <InputLabel id=\"location-label\"/>\r\n        <Select\r\n          labelId  = {props.labelId}\r\n          id       = {props.id}\r\n          label    = {props.label}\r\n          name     = {props.name}\r\n          type     = {props.type}\r\n          value    = {props.value}\r\n          onChange = {props.onChange}>\r\n            <MenuItem value=\"北海道\">北海道</MenuItem>\r\n            <MenuItem value=\"青森県\">青森県</MenuItem>\r\n            <MenuItem value=\"岩手県\">岩手県</MenuItem>\r\n            <MenuItem value=\"宮城県\">宮城県</MenuItem>\r\n            <MenuItem value=\"秋田県\">秋田県</MenuItem>\r\n            <MenuItem value=\"山形県\">山形県</MenuItem>\r\n            <MenuItem value=\"福島県\">福島県</MenuItem>\r\n            <MenuItem value=\"茨城県\">茨城県</MenuItem>\r\n            <MenuItem value=\"栃木県\">栃木県</MenuItem>\r\n            <MenuItem value=\"群馬県\">群馬県</MenuItem>\r\n            <MenuItem value=\"埼玉県\">埼玉県</MenuItem>\r\n            <MenuItem value=\"千葉県\">千葉県</MenuItem>\r\n            <MenuItem value=\"東京都\">東京都</MenuItem>\r\n            <MenuItem value=\"神奈川県\">神奈川県</MenuItem>\r\n            <MenuItem value=\"新潟県\">新潟県</MenuItem>\r\n            <MenuItem value=\"富山県\">富山県</MenuItem>\r\n            <MenuItem value=\"石川県\">石川県</MenuItem>\r\n            <MenuItem value=\"福井県\">福井県</MenuItem>\r\n            <MenuItem value=\"山梨県\">山梨県</MenuItem>\r\n            <MenuItem value=\"長野県\">長野県</MenuItem>\r\n            <MenuItem value=\"岐阜県\">岐阜県</MenuItem>\r\n            <MenuItem value=\"静岡県\">静岡県</MenuItem>\r\n            <MenuItem value=\"愛知県\">愛知県</MenuItem>\r\n            <MenuItem value=\"三重県\">三重県</MenuItem>\r\n            <MenuItem value=\"滋賀県\">滋賀県</MenuItem>\r\n            <MenuItem value=\"京都府\">京都府</MenuItem>\r\n            <MenuItem value=\"大阪府\">大阪府</MenuItem>\r\n            <MenuItem value=\"兵庫県\">兵庫県</MenuItem>\r\n            <MenuItem value=\"奈良県\">奈良県</MenuItem>\r\n            <MenuItem value=\"和歌山県\">和歌山県</MenuItem>\r\n            <MenuItem value=\"鳥取県\">鳥取県</MenuItem>\r\n            <MenuItem value=\"島根県\">島根県</MenuItem>\r\n            <MenuItem value=\"岡山県\">岡山県</MenuItem>\r\n            <MenuItem value=\"広島県\">広島県</MenuItem>\r\n            <MenuItem value=\"山口県\">山口県</MenuItem>\r\n            <MenuItem value=\"徳島県\">徳島県</MenuItem>\r\n            <MenuItem value=\"香川県\">香川県</MenuItem>\r\n            <MenuItem value=\"愛媛県\">愛媛県</MenuItem>\r\n            <MenuItem value=\"高知県\">高知県</MenuItem>\r\n            <MenuItem value=\"福岡県\">福岡県</MenuItem>\r\n            <MenuItem value=\"佐賀県\">佐賀県</MenuItem>\r\n            <MenuItem value=\"長崎県\">長崎県</MenuItem>\r\n            <MenuItem value=\"熊本県\">熊本県</MenuItem>\r\n            <MenuItem value=\"大分県\">大分県</MenuItem>\r\n            <MenuItem value=\"宮崎県\">宮崎県</MenuItem>\r\n            <MenuItem value=\"鹿児島県\">鹿児島県</MenuItem>\r\n            <MenuItem value=\"沖縄県\">沖縄県</MenuItem>\r\n        </Select>\r\n        <FormHelperText>{props.FormHelperText}</FormHelperText>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default withRouter(ProfileEditSelectBox);","import React, { useState } from \"react\"\r\nimport {Avatar,\r\n        Alert,\r\n        Paper,\r\n        Typography,\r\n        CssBaseline,\r\n        Box,\r\n        TextField,\r\n        Button,\r\n        Container,}         from \"@mui/material\"\r\nimport {firebaseApp }       from \"../../firebase\"\r\nimport {ref,\r\n        uploadBytes,\r\n        getDownloadURL,}    from \"firebase/storage\"\r\nimport useUser              from \"../hooks/getuseAuth\"\r\nimport {addDoc,\r\n        collection,\r\n        doc,\r\n        updateDoc, \r\n        getDocs,}        from \"firebase/firestore\"\r\nimport ProfileHeader        from \"./ProfileEditHeader\"\r\nimport {createTheme, \r\n        ThemeProvider }     from '@mui/material/styles';\r\nimport useProfile           from \"../hooks/useProfile\"\r\nimport ProfileEditSelectBox from \"./ProfileEditSelectBox\"\r\nimport store                from '../../store/index';\r\nimport {useHistory}         from \"react-router-dom\";\r\nimport ProfileEditButton    from \"./ProfileEditButton\"\r\nimport Footer               from '../Footer';\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n});\r\n\r\nconst collectionUserName = \"users\"\r\nconst collectionRecipeName = \"recipe\"\r\nconst collectionMessageName = \"message\"\r\n\r\nconst ProfileEdit = () => {\r\n  const [name, setName] = useState(store.getState().displayName)                   // プロフィール名\r\n  const [location , setLocation] = useState(store.getState().location)             // 所在地\r\n  const [selfintroduction , setSelfIntroduction] = useState(store.getState().memo) // 自己紹介\r\n  const [error, setError] = useState(false)                                        // エラー判定\r\n  const [success, setSuccess] = useState(false)                                    // 成功判定\r\n  const [errormessage , setErrorMessage] = useState(\"\")                            // エラーメッセージ\r\n  const [image, setImage] = useState()\r\n  const firestorage = firebaseApp.firestorage\r\n  const firestore = firebaseApp.firestore\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const { user } = useUser()\r\n  const history = useHistory()\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.files)\r\n    console.log(\"handleChange 通過\")\r\n    if (e.target.files !== null) {\r\n        setImage(e.target.files[0])\r\n      }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    // アラートが出ている場合は一旦消す\r\n    setError(false)\r\n    setSuccess(false)\r\n    // 入力内容が空の場合はエラーを返す\r\n    if(name === \"\"){\r\n      console.log(\"ユーザー名が未入力\")\r\n      setErrorMessage(\"ユーザー名を入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(location === \"\"){\r\n      console.log(\"所在地が未入力\")\r\n      setErrorMessage(\"所在地を選択してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n    if(selfintroduction === \"\"){\r\n      console.log(\"自己紹介が未入力\")\r\n      setErrorMessage(\"自己紹介を入力してください\")\r\n      setError(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n        const uid = user.uid\r\n        const docRef = collection(firestore, collectionUserName);\r\n \r\n        if(image){\r\n            const imageRef = ref(firestorage, 'USER_PROFILE_IMG/' + uid + \"/\" + image.name)\r\n            // firebase strageへ画像をアップロード\r\n            uploadBytes(imageRef, image).then(() => {\r\n                // getDownloadURLの中で、profileがある場合はupdateDocを指定\r\n                // profileがない場合はaddDocを指定\r\n                // imageがない場合も同様に指定\r\n                getDownloadURL(imageRef).then(url => {\r\n                  console.log(url)\r\n                  if (profile) {\r\n                    const userRef = doc(firestore, collectionUserName , profile?.id)\r\n                    updateDoc(userRef, {\r\n                      name,\r\n                      image: url,\r\n                      location,\r\n                      selfintroduction,})\r\n                    // messageドキュメント内の対象のユーザー情報を更新する\r\n                    updateMessage(name , url)\r\n                    // recipeドキュメント内の対象のユーザー情報を更新する\r\n                    updateRecipe(name)\r\n                  }else{\r\n                    // firestoreに名前、画像URL、uidを追加する\r\n                    addDoc(docRef, {\r\n                        name,\r\n                        image: url,\r\n                        uid,\r\n                        selfintroduction,\r\n                        location,\r\n                      })\r\n                    }\r\n                })\r\n              })\r\n              }else{\r\n                // 画像を選択する\r\n                if (profile) {\r\n                  const userRef = doc(firestore, collectionUserName, profile?.id)\r\n                  updateDoc(userRef, { name , location , selfintroduction})\r\n                  console.log(\"bbb\")\r\n                  // messageドキュメント内の対象のユーザー情報を更新する\r\n                  updateMessage(name , profile.image)\r\n                  // recipeドキュメント内の対象のユーザー情報を更新する\r\n                  updateRecipe(name)\r\n              } else {\r\n                addDoc(docRef, { \r\n                  name, \r\n                  image: \"\", \r\n                  uid ,\r\n                  selfintroduction , \r\n                  location})\r\n              }}\r\n              console.log(\"画像アップロード完了!\")\r\n              // 成功したアラート表示\r\n              setSuccess(true)\r\n              setTimeout(() => {\r\n                history.push(\"/\")\r\n              },2000)\r\n            } catch (err) {\r\n              console.log(err)\r\n              // 失敗したアラート表示\r\n              setError(true)\r\n            }\r\n          }\r\n  \r\n  //  messegeドキュメント内の対象ユーザーの情報を更新する\r\n  const updateMessage = (getName , getImage) => {\r\n    getDocs(collection(firestore, collectionMessageName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((docMessage) => {\r\n        // 対象の作品(getrecipenum)と一致するコメントのみ表示する\r\n        if(String(profile.uid) === String(docMessage.data().user.uid)){\r\n          const messageRef = doc(firestore , collectionMessageName , docMessage.id)\r\n          updateDoc(messageRef, { user : { \r\n                                    name  : getName,\r\n                                    image : getImage,\r\n                                    uid   : docMessage.data().user.uid,}, })\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  // recipeドキュメント内の対象ユーザーの情報を更新する\r\n  const updateRecipe = (getName) => {\r\n    console.log(\"updateRecipe通過\")\r\n    getDocs(collection(firestore, collectionRecipeName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((docRecipe) => {\r\n        // 対象の作品(getrecipenum)と一致するコメントのみ表示する\r\n        if(String(profile.uid) === String(docRecipe.data().image.uid)){\r\n          const recipeRef = doc(firestore , collectionRecipeName , docRecipe.id)\r\n          updateDoc(recipeRef, { image : { \r\n                                  filename : docRecipe.data().image.filename,\r\n                                  url      : docRecipe.data().image.url,\r\n                                  user     : getName,\r\n                                  uid      : docRecipe.data().image.uid,}, })\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Container maxWidth>\r\n            <ProfileHeader/>\r\n        </Container>\r\n        <Container maxWidth=\"sm\">\r\n        <CssBaseline />\r\n            <Paper sx={{ m: 4, p: 4 }}>\r\n                {error && <Alert severity=\"error\">{errormessage}</Alert>}\r\n                {success && (<Alert severity=\"success\"> {profile ? \"更新\" : \"作成\"}しました</Alert>)}\r\n                <Typography \r\n                  align=\"center\" \r\n                  variant=\"h5\"\r\n                  sx = {{color : \"#000000\",\r\n                         padding: \"1rem 2rem\",\r\n                         borderTop: \"double #E64545 6px\",\r\n                         borderBottom: \"double #E64545 6px\",\r\n                         pt : 2 , \r\n                         pb : 2 ,}}>\r\n                    プロフィール編集\r\n                </Typography>\r\n                <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 4 }}>\r\n                  {/* アバター画像の表示 */}\r\n                <Container align = \"center\">\r\n                    <Avatar\r\n                      sx={{ width: 100, height: 100 }}\r\n                      src={image ? URL.createObjectURL(image) : profile ? profile.image : \"\"}alt=\"\"/>\r\n                  <input\r\n                      id=\"image\"\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={handleChange}\r\n                      style={{ display: \"none\" }}/>\r\n                  <label htmlFor=\"image\">\r\n                  <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                      画像を選択\r\n                  </Button>\r\n                  </label>\r\n                </Container>\r\n                    <Container align=\"left\">\r\n                      {/* ユーザー名の表示 */}\r\n                      <Typography\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                              color : \"#000000\",\r\n                              padding: \"0.2rem\",\r\n                              borderLeft : \"solid #E64545 6px\"}}>\r\n                        <strong>ユーザー名</strong>\r\n                      </Typography>\r\n                      <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        autoComplete=\"name\"\r\n                        autoFocus\r\n                        defaultValue={name}\r\n                        value={name ? name :  \"\"}\r\n                        onChange={e => \r\n                          setName(e.target.value)}/>\r\n                    </Container>\r\n                    <br/>\r\n                    <Container align=\"left\">\r\n                      {/* 所在地の表示 */}\r\n                      <Typography\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                              color : \"#000000\",\r\n                              padding: \"0.2rem\",\r\n                              borderLeft : \"solid #E64545 6px\"}}>\r\n                        <strong>所在地</strong>\r\n                      </Typography>\r\n                      <ProfileEditSelectBox\r\n                        margin       = \"normal\"\r\n                        fullWidth\r\n                        id           = \"location\"\r\n                        name         = \"location\"\r\n                        autoComplete = \"location\"\r\n                        autoFocus\r\n                        defaultValue={location}\r\n                        value={location ? location : profile ? profile.location : \"\"}\r\n                        onChange={e => setLocation(e.target.value)}/>\r\n                      </Container>\r\n                      <br/>\r\n                      <Container align=\"left\">\r\n                        {/* 自己紹介文の表示 */}\r\n                        <Typography\r\n                          sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"0.2rem\",\r\n                                borderLeft : \"solid #E64545 6px\"}}>\r\n                          <strong>自己紹介</strong>\r\n                        </Typography>\r\n                        <TextField\r\n                          margin=\"normal\"\r\n                          id        =\"selfintroduction\"\r\n                          fullWidth\r\n                          name = \"selfintroduction\"\r\n                          autoComplete=\"selfintroduction\"\r\n                          multiline\r\n                          defaultValue={selfintroduction}\r\n                          rows      = {6}\r\n                          value     = {selfintroduction ? selfintroduction : \"\"}\r\n                          onChange  = {e => setSelfIntroduction(e.target.value)}/>\r\n                      </Container>\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\r\n                      {profile ? \"更新\" : \"作成\"}\r\n                    </Button>\r\n                    <ProfileEditButton \r\n                      id      = \"profileeditback\"\r\n                      type    = \"submit\"\r\n                      link    = {profile ? \"/profiles/\"+profile.uid : \"\"} \r\n                      fullWidth \r\n                      variant = \"outlined\" \r\n                      sx={{ mt: 3, mb: 2 }}\r\n                      text = \"戻る\"/>\r\n                </Box>\r\n            </Paper>\r\n        </Container>\r\n      <Footer/>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default ProfileEdit","import React    from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button         from '@mui/material/Button';\r\nimport {createUserWithEmailAndPassword}    from \"firebase/auth\";\r\nimport { firebaseApp } from \"../../firebase\";\r\nimport store          from '../../store/index';\r\n\r\nconst fireauth = firebaseApp.fireauth\r\n\r\nexport default function URButton(props){\r\n\r\n    // 画面遷移のハンドル\r\n    const history = useHistory();\r\n\r\n    // 無料ユーザー登録ボタンをクリックしたとき\r\n    const handleClick = (e) => {\r\n        console.log(props.id)\r\n        if(props.id == \"registerOk\"){\r\n            console.log(\"Firebaseに登録\")\r\n\r\n            // メールアドレスとパスワード登録\r\n            createUserWithEmailAndPassword(fireauth, \r\n                store.getState().address, \r\n                store.getState().password1)\r\n                .then((userCredential) => {\r\n                // Signed in \r\n                console.log(\"userCredential => \",userCredential);\r\n                const user = userCredential.user;\r\n                console.log(user,\" がFirebaseに登録されました\");\r\n\r\n                // // 画像データをfirebaseへアップロード\r\n                // const file = store.getState().photoFileData\r\n                // uploadImage(file)\r\n\r\n                // 登録完了ボタンに遷移\r\n                history.push(props.link)\r\n                })\r\n                // 以下登録に失敗した場合\r\n                .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                console.log(\"error        => \",error);\r\n                console.log(\"errorCode    => \",errorCode);\r\n                console.log(\"errorMessage => \",errorMessage);\r\n                // アドレスが重複している場合\r\n                if (errorCode ===\"auth/email-already-in-use\"){\r\n                    alert(\"既に登録されているメールアドレスです。\")\r\n                    console.log(\"アドレス重複\")\r\n                }});\r\n            }else{\r\n                history.push(props.link)\r\n            }\r\n        }\r\n\r\n    // 画像アップロード処理\r\n    // const uploadImage = (file) => {\r\n    //     const auth = getAuth(app)\r\n    //     if (!file) return\r\n    //     const storageRef = sRef(storage, `files/${file.name}`);\r\n    //     const uploadTask = uploadBytesResumable(storageRef, file)\r\n    //     uploadTask.on('state_changed',(snapshot) => {\r\n    //         const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n    //         console.log('Upload is ' + progress + '% done');\r\n    //         switch (snapshot.state) {\r\n    //         case 'paused':\r\n    //             console.log('Upload is paused');\r\n    //             break;\r\n    //         case 'running':\r\n    //             console.log('Upload is running');\r\n    //             break;\r\n    //         default:\r\n    //             break\r\n    //         }},\r\n    //         (error) => {\r\n    //             console.log(\"アップロードできませんでした。\")\r\n    //             console.log(error)\r\n    //         }, () => {\r\n    //             getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n    //                 console.log(file.name,\" の画像アップロード完了\")\r\n    //                 console.log('File available at', downloadURL);\r\n    //                 // ニックネーム(ユーザー名)と画像URL更新\r\n    //                 updateProfile(auth.currentUser ,{\r\n    //                     displayName : store.getState().displayName,\r\n    //                     photoURL    : downloadURL,\r\n    //                     }).then(() => {\r\n    //                         console.log(\"更新完了\")\r\n    //                         store.getState().phoneNumber = file.name\r\n    //                         console.log(\"displayName => \", store.getState().displayName)\r\n    //                         console.log(\"photoURL    => \", downloadURL)\r\n    //                         console.log(\"address     => \", store.getState().address)\r\n    //                         console.log(\"password    => \", store.getState().password1)\r\n    //                         console.log(\"phoneNumber => \", store.getState().phoneNumber)\r\n    //                     }).catch((error) => {\r\n    //                         console.log(\"更新失敗\")\r\n    //                     })\r\n    //                 });\r\n    //             });\r\n    //         }\r\n        \r\n    return(\r\n\r\n        <Button \r\n            size      = {props.size}\r\n            variant   = {props.variant}\r\n            sx        = {props.sx}\r\n            id        = {props.id}\r\n            link      = {props.link}\r\n            startIcon = {props.startIcon}\r\n            disableElevation\r\n            onClick={() => {\r\n                handleClick()\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import * as React  from 'react';\r\nimport AppBar      from '@mui/material/AppBar';\r\nimport Box         from '@mui/material/Box';\r\nimport Toolbar     from '@mui/material/Toolbar';\r\nimport URButton    from './URButton';\r\nimport HeaderTitle from '../HeaderTitle';\r\nimport HomeIcon    from '@mui/icons-material/Home';\r\n\r\nexport default function URHeader() {\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <HeaderTitle\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <URButton\r\n              text    = \"ホーム\" \r\n              link    = \"/\"\r\n              size    = \"large\"\r\n              variant = \"contained\"\r\n              startIcon = {<HomeIcon/>}/>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React           from 'react';\r\nimport TextField       from '@mui/material/TextField';\r\nimport { withRouter }  from 'react-router-dom';\r\n\r\nfunction URTextField(props) {\r\n\r\n  return (\r\n      <TextField\r\n        fullWidth\r\n        error         = {props.error}\r\n        id            = {props.id}\r\n        name          = {props.name}\r\n        label         = {props.label}\r\n        value         = {props.value}\r\n        type          = {props.type}\r\n        helperText    = {props.helperText}\r\n        onChange      = {props.onChange}\r\n        endAdornment  = {props.endAdornment}\r\n      />\r\n  );\r\n}\r\n\r\nexport default withRouter(URTextField);","import React           from 'react';\r\nimport Box             from '@mui/material/Box';\r\nimport InputLabel      from '@mui/material/InputLabel';\r\nimport MenuItem        from '@mui/material/MenuItem';\r\nimport FormControl     from '@mui/material/FormControl';\r\nimport { Select }      from '@mui/material';\r\nimport { withRouter }  from 'react-router-dom';\r\nimport FormHelperText  from '@mui/material/FormHelperText';\r\n\r\nfunction URSelectBox(props) {\r\n\r\n  return (\r\n    <Box sx={{ minWidth: 120 }}>\r\n      <FormControl fullWidth error={props.error}>\r\n        <InputLabel id=\"location-label\">\r\n          選択してください\r\n        </InputLabel>\r\n        <Select\r\n          labelId  = {props.labelId}\r\n          id       = {props.id}\r\n          label    = {props.label}\r\n          name     = {props.name}\r\n          type     = {props.type}\r\n          value    = {props.value}\r\n          onChange = {props.onChange}>\r\n            <MenuItem value=\"北海道\">北海道</MenuItem>\r\n            <MenuItem value=\"青森県\">青森県</MenuItem>\r\n            <MenuItem value=\"岩手県\">岩手県</MenuItem>\r\n            <MenuItem value=\"宮城県\">宮城県</MenuItem>\r\n            <MenuItem value=\"秋田県\">秋田県</MenuItem>\r\n            <MenuItem value=\"山形県\">山形県</MenuItem>\r\n            <MenuItem value=\"福島県\">福島県</MenuItem>\r\n            <MenuItem value=\"茨城県\">茨城県</MenuItem>\r\n            <MenuItem value=\"栃木県\">栃木県</MenuItem>\r\n            <MenuItem value=\"群馬県\">群馬県</MenuItem>\r\n            <MenuItem value=\"埼玉県\">埼玉県</MenuItem>\r\n            <MenuItem value=\"千葉県\">千葉県</MenuItem>\r\n            <MenuItem value=\"東京都\">東京都</MenuItem>\r\n            <MenuItem value=\"神奈川県\">神奈川県</MenuItem>\r\n            <MenuItem value=\"新潟県\">新潟県</MenuItem>\r\n            <MenuItem value=\"富山県\">富山県</MenuItem>\r\n            <MenuItem value=\"石川県\">石川県</MenuItem>\r\n            <MenuItem value=\"福井県\">福井県</MenuItem>\r\n            <MenuItem value=\"山梨県\">山梨県</MenuItem>\r\n            <MenuItem value=\"長野県\">長野県</MenuItem>\r\n            <MenuItem value=\"岐阜県\">岐阜県</MenuItem>\r\n            <MenuItem value=\"静岡県\">静岡県</MenuItem>\r\n            <MenuItem value=\"愛知県\">愛知県</MenuItem>\r\n            <MenuItem value=\"三重県\">三重県</MenuItem>\r\n            <MenuItem value=\"滋賀県\">滋賀県</MenuItem>\r\n            <MenuItem value=\"京都府\">京都府</MenuItem>\r\n            <MenuItem value=\"大阪府\">大阪府</MenuItem>\r\n            <MenuItem value=\"兵庫県\">兵庫県</MenuItem>\r\n            <MenuItem value=\"奈良県\">奈良県</MenuItem>\r\n            <MenuItem value=\"和歌山県\">和歌山県</MenuItem>\r\n            <MenuItem value=\"鳥取県\">鳥取県</MenuItem>\r\n            <MenuItem value=\"島根県\">島根県</MenuItem>\r\n            <MenuItem value=\"岡山県\">岡山県</MenuItem>\r\n            <MenuItem value=\"広島県\">広島県</MenuItem>\r\n            <MenuItem value=\"山口県\">山口県</MenuItem>\r\n            <MenuItem value=\"徳島県\">徳島県</MenuItem>\r\n            <MenuItem value=\"香川県\">香川県</MenuItem>\r\n            <MenuItem value=\"愛媛県\">愛媛県</MenuItem>\r\n            <MenuItem value=\"高知県\">高知県</MenuItem>\r\n            <MenuItem value=\"福岡県\">福岡県</MenuItem>\r\n            <MenuItem value=\"佐賀県\">佐賀県</MenuItem>\r\n            <MenuItem value=\"長崎県\">長崎県</MenuItem>\r\n            <MenuItem value=\"熊本県\">熊本県</MenuItem>\r\n            <MenuItem value=\"大分県\">大分県</MenuItem>\r\n            <MenuItem value=\"宮崎県\">宮崎県</MenuItem>\r\n            <MenuItem value=\"鹿児島県\">鹿児島県</MenuItem>\r\n            <MenuItem value=\"沖縄県\">沖縄県</MenuItem>\r\n        </Select>\r\n        <FormHelperText>{props.FormHelperText}</FormHelperText>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default withRouter(URSelectBox);","import React,\r\n     { useState  }       from 'react';\r\nimport { useHistory ,\r\n      withRouter }       from 'react-router';\r\nimport { createTheme,\r\n      ThemeProvider }    from '@mui/material/styles';\r\nimport CssBaseline       from '@mui/material/CssBaseline';\r\nimport Typography        from '@mui/material/Typography';\r\nimport Container         from '@mui/material/Container';\r\nimport FormControl       from '@mui/material/FormControl';\r\nimport Grid              from '@mui/material/Grid';\r\nimport URHeader          from './URHeader';\r\nimport {updateForm}      from '../../actions/memberAction';\r\nimport store             from '../../store/index';\r\nimport URTextField       from './URTextField';\r\nimport URSelectBox       from './URSelectBox';\r\nimport Button            from '@mui/material/Button';\r\nimport PersonAddIcon     from '@mui/icons-material/PersonAdd';\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n});\r\n\r\nfunction UserRegistration(props) {\r\n\r\n  const [form , setForm] = useState({ \r\n    displayName      : store.getState().displayName     || '',\r\n    location         : store.getState().location        || '',\r\n    address          : store.getState().address         || '',\r\n    password1        : store.getState().password1       || '',\r\n    password2        : store.getState().password2       || '',\r\n    nicknameErrorMS  : store.getState().nicknameErrorMS,\r\n    locationErrorMS  : store.getState().locationErrorMS,\r\n    addressErrorMS   : store.getState().addressErrorMS ,\r\n    passwordErrorMS  : store.getState().passwordErrorMS,\r\n    photoURL         : store.getState().photoURL       ,\r\n    photoFileData    : store.getState().photoFileData  ,\r\n  });\r\n\r\n  // ニックネームの入力チェック用変数\r\n  const [nicknameerr , setNickNameErr] = useState('')\r\n\r\n  // 所在地の入力チェック用変数\r\n  const [locationerr , setLocationErr] = useState('')\r\n \r\n  // メールアドレスの入力チェック用変数\r\n  const [addresserr , setAddressErr] = useState('')\r\n \r\n  // パスワードの入力チェック用変数\r\n  const [passworderr , setPasswordErr] = useState('')\r\n  \r\n  // ファイルアップロード用変数\r\n  // const [files, selectFiles] = useFileUpload();\r\n  // const pushfiles = (source , file) => {\r\n  //   console.log(\"pushfilesを通過\")\r\n\r\n  //   const photo        = \"photoURL\"      // サムネイル用の画像表示\r\n  //   const filedata     = \"photoFileData\" // ファイルアップロード用画像データ一式\r\n  //   const fileURL      = source          // サムネイル用の画像表示\r\n  //   const fileDataInfo = file            // ファイルアップロード用画像データ一式\r\n  //   form[photo]        = fileURL\r\n  //   form[filedata]     = fileDataInfo\r\n  //   const data = form\r\n  //   setForm({\r\n  //     ...form,\r\n  //     photo : source,\r\n  //   })\r\n  //   setForm({\r\n  //     ...form,\r\n  //     filedata : file\r\n  //   })\r\n  //   store.dispatch(updateForm(data))\r\n  //   console.log(form)\r\n  // }\r\n \r\n  // リンク先に遷移\r\n  const history = useHistory();\r\n\r\n  // 登録ボタンクリック時のハンドル\r\n  const clickChange = (e) => {\r\n    var name = \"\"\r\n    var value = \"\"\r\n    var data = form\r\n    // ニックネームの入力チェック\r\n    if(store.getState().displayName === \"\")\r\n    {\r\n      name = \"nicknameErrorMS\"\r\n      value = \"ニックネームを入力してください\"\r\n      form[name] = value\r\n      data = form\r\n      setNickNameErr('error')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n    }else{\r\n      name = \"nicknameErrorMS\"\r\n      value = \"\"\r\n      form[name] = value\r\n      data = form\r\n      setNickNameErr('')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n    }\r\n\r\n    // 所在地の入力チェック\r\n    if(store.getState().location === \"\")\r\n    {\r\n      name = \"locationErrorMS\"\r\n      value = \"所在地を入力してください\"\r\n      form[name] = value\r\n      data = form\r\n      setLocationErr('error')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n    }else{\r\n      name = \"locationErrorMS\"\r\n      value = \"\"\r\n      form[name] = value\r\n      data = form\r\n      setLocationErr('')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n    }\r\n\r\n    // メールアドレスの入力チェック\r\n    if(store.getState().address === \"\")\r\n    {\r\n      name = \"addressErrorMS\"\r\n      value = \"メールアドレスを入力してください\"\r\n      form[name] = value\r\n      data = form\r\n      setAddressErr('error')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n    }else{\r\n      name = \"addressErrorMS\"\r\n      value = \"\"\r\n      form[name] = value\r\n      data = form\r\n      setAddressErr('')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n    }\r\n\r\n    // パスワードの入力チェック\r\n    if(store.getState().password1 === \"\")\r\n    {\r\n      name = \"passwordErrorMS\"\r\n      value = \"パスワードを入力してください\"\r\n      form[name] = value\r\n      data = form\r\n      setPasswordErr('error')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n    }else if(store.getState().password1 != store.getState().password2){\r\n      name = \"passwordErrorMS\"\r\n      value = \"入力したパスワードが一致していません\"\r\n      form[name] = value\r\n      data = form\r\n      setPasswordErr('error')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n\r\n    }else if(store.getState().password1.length < 6 ){\r\n      name = \"passwordErrorMS\"\r\n      value = \"パスワードは6文字以上入力してください\"\r\n      form[name] = value\r\n      data = form\r\n      setPasswordErr('error')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n    }else{\r\n      name = \"passwordErrorMS\"\r\n      value = \"\"\r\n      form[name] = value\r\n      data = form\r\n      setPasswordErr('')\r\n      setForm({\r\n        ...form,\r\n        name : value,\r\n      });\r\n    }\r\n    store.dispatch(updateForm(data))\r\n    console.log(data)\r\n\r\n    // 入力内容のチェック\r\n    if (store.getState().nicknameErrorMS == \"\" &&\r\n        store.getState().locationErrorMS == \"\" &&\r\n        store.getState().addressErrorMS  == \"\" &&\r\n        store.getState().passwordErrorMS == \"\" )\r\n    {\r\n      console.log(\"OK\")\r\n      history.push(\"/userregistration/Review\")\r\n    }else{\r\n      console.log(\"NG\")\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    form[name] = value;\r\n    const data = form;\r\n    setForm({\r\n      ...form,\r\n      [e.target.name] : e.target.value,\r\n  });\r\n  console.log(\"======以下handleChange内======\")\r\n  console.log(\"name  => \",name);\r\n  console.log(\"value => \",value);\r\n  console.log(\"form  => \",form);\r\n  console.log(\"==============================\")\r\n  store.dispatch(updateForm(data))\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth>\r\n        <URHeader/>\r\n      </Container>\r\n        <Container maxWidth=\"sm\">\r\n          <br/>\r\n          <Typography variant=\"h4\" gutterBottom align='center'>\r\n            アカウント情報入力\r\n          </Typography>\r\n          {/* <Container align='center'>\r\n            <Avatar\r\n              alt=\"preview\"\r\n              src={files?.source || store.getState().photoURL}\r\n              padding =\"1em\"\r\n              sx={{ width: 150, height: 150 }}/>\r\n            <br/>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() =>\r\n                  selectFiles({ accept: \"image/*\" }, ({ name, size, source, file }) => {\r\n                  console.log(\"Files Selected\", { name, size, source, file })\r\n                  pushfiles(source , file)\r\n              })}>\r\n              プロフィール画像選択\r\n            </Button>\r\n            <br/><br/>\r\n          </Container> */}\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n            <Typography variant=\"h7\">\r\n              ニックネーム(公開されます)\r\n            </Typography>\r\n              <URTextField\r\n                label      = \"入力してください\"\r\n                name       = \"displayName\"\r\n                type       = \"displayName\"\r\n                error      = {nicknameerr}\r\n                helperText = {store.getState().nicknameErrorMS}\r\n                value      = {store.getState().displayName}\r\n                onChange   = {handleChange}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth >\r\n                <Typography variant=\"h7\">\r\n                  所在地(公開されます)\r\n                </Typography>\r\n                <URSelectBox\r\n                  labelId        = \"location\"\r\n                  id             = \"location\"\r\n                  name           = \"location\"\r\n                  type           = \"location\"\r\n                  error          = {locationerr}\r\n                  FormHelperText = {store.getState().locationErrorMS}\r\n                  value          = {store.getState().location}\r\n                  onChange       = {handleChange}/>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h7\">\r\n                メールアドレス(公開されません)\r\n              </Typography>\r\n              <URTextField\r\n                label      = \"入力してください\"\r\n                name       = \"address\"\r\n                type       = \"address\"\r\n                error      = {addresserr}\r\n                helperText = {store.getState().addressErrorMS}\r\n                value      = {store.getState().address}\r\n                onChange   = {handleChange}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Typography variant=\"h7\">\r\n              パスワード(公開されません)\r\n            </Typography>\r\n              <URTextField\r\n                label      = \"入力してください\"\r\n                name       = \"password1\"\r\n                type       = \"password1\"\r\n                error      = {passworderr}\r\n                helperText = {store.getState().passwordErrorMS}\r\n                value      = {store.getState().password1}\r\n                onChange   = {handleChange}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Typography variant=\"h7\">\r\n              パスワード(確認用)\r\n            </Typography>\r\n              <URTextField\r\n                label      = \"入力してください\" \r\n                name       = \"password2\"\r\n                type       = \"password2\"\r\n                error      = {passworderr}\r\n                helperText = \"パスワードを再度入力してください。\"\r\n                value      = {store.getState().password2}\r\n                onChange   = {handleChange}/>\r\n            </Grid>\r\n          </Grid>\r\n          <Typography align='center'>\r\n            <Button\r\n              id        = \"inputcheck\"\r\n              variant   = \"contained\"\r\n              sx        = {{ mt: 3, ml: 1 }}\r\n              onClick   = {clickChange}\r\n              startIcon = {<PersonAddIcon/>}>この内容で登録する\r\n            </Button>\r\n          </Typography>\r\n        </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserRegistration);\r\n","import React             from 'react';\r\nimport CssBaseline       from '@mui/material/CssBaseline';\r\nimport Typography        from '@mui/material/Typography';\r\nimport Container         from '@mui/material/Container';\r\nimport { createTheme,\r\n         ThemeProvider } from '@mui/material/styles';\r\nimport Grid              from '@mui/material/Grid';\r\nimport { withRouter }    from 'react-router';\r\nimport URHeader          from './URHeader';\r\nimport store             from '../../store/index';\r\nimport URButton          from './URButton';\r\nimport { useFileUpload } from \"use-file-upload\";\r\nimport PersonAddIcon     from '@mui/icons-material/PersonAdd';\r\nimport ReplyIcon         from '@mui/icons-material/Reply';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n});\r\n\r\nfunction UserRegistration(props) {\r\n\r\n  const handleCheck = (e) =>{\r\n    console.log(\"handleCheck通過\")\r\n  }\r\n  // ファイルアップロード用変数\r\n  const [files, selectFiles] = useFileUpload();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth>\r\n        <URHeader/>\r\n      </Container>\r\n        <Container maxWidth=\"sm\">\r\n          <br/>\r\n          <Typography variant=\"h4\" gutterBottom align='center'>\r\n            アカウント情報入力\r\n          </Typography>\r\n          <Typography variant=\"h5\" gutterBottom align='center'>\r\n            以下の内容で登録します。よろしいですか？\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n\r\n            {/* <Container align='center'>\r\n              <Avatar\r\n                alt=\"preview\"\r\n                src={files?.source || store.getState().photoURL}\r\n                padding =\"1em\"\r\n                sx={{ width: 150, height: 150 }}/>\r\n              <br/>\r\n            </Container> */}\r\n\r\n            <Typography variant=\"h6\">\r\n              ニックネーム\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              {store.getState().displayName}\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\">\r\n                所在地\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {store.getState().location}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\">\r\n                メールアドレス\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {store.getState().address}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\">\r\n                パスワード\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {store.getState().password1}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Typography align='center'>\r\n           <URButton\r\n              id        = \"registerChancel\"\r\n              text      = \"入力画面に戻る\"\r\n              variant   =\"outlined\"\r\n              link      = \"/userregistration\"\r\n              sx        = {{ mt: 3, ml: 1 }}\r\n              startIcon = {<ReplyIcon/>}/>\r\n            <URButton\r\n              id        = \"registerOk\"\r\n              text      = \"無料ユーザー登録\"\r\n              variant   = \"contained\"\r\n              link      = \"/userregistration/Complete\"\r\n              sx        = {{ mt: 3, ml: 1 }}\r\n              startIcon = {<PersonAddIcon/>}/>\r\n          </Typography>\r\n        </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserRegistration);\r\n","import React             from 'react';\r\nimport CssBaseline       from '@mui/material/CssBaseline';\r\nimport Typography        from '@mui/material/Typography';\r\nimport Container         from '@mui/material/Container';\r\nimport { createTheme,\r\n         ThemeProvider } from '@mui/material/styles';\r\nimport { withRouter }    from 'react-router';\r\nimport URHeader          from './URHeader';\r\nimport store             from '../../store/index';\r\nimport URButton          from './URButton';\r\nimport EditIcon       from '@mui/icons-material/Edit';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n});\r\n\r\nfunction UserRegistrationComplete(props) {\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth>\r\n        <URHeader/>\r\n      </Container>\r\n        <Container maxWidth=\"sm\">\r\n          <br/>\r\n          <Typography variant=\"h4\" gutterBottom align='center'>\r\n            おめでとうございます。\r\n          </Typography>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            ようこそ！{store.getState().displayName}さん\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\">\r\n            ユーザー登録が完了しました。\r\n            あなたの素晴らしい作品をたくさん投稿して仲間とたくさんアイディアを共有して\r\n            DIYを楽しみましょう！\r\n          </Typography>\r\n          <URButton\r\n            variant   =\"outlined\"\r\n            link      = \"/post\" \r\n            sx        = {{ mt: 3, ml: 1 }}\r\n            text      = \"投稿する\"\r\n            startIcon = {<EditIcon/>}/>                \r\n          <URButton \r\n            variant   =\"outlined\"\r\n            link      = \"/mypage\" \r\n            sx        = {{ mt: 3, ml: 1 }}\r\n            text      = \"マイページ\"\r\n            startIcon = {<PersonIcon/>}/>\r\n        </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserRegistrationComplete);\r\n","import React, { useState } from \"react\"\r\nimport {Alert ,\r\n        Button,\r\n        TextField,\r\n        Box,\r\n        Divider,\r\n        Stack,} from \"@mui/material\"\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {firebaseApp } from \"../../firebase\"\r\nimport {addDoc , \r\n        collection,\r\n        Timestamp  } from \"firebase/firestore\"\r\nimport useProfile from \"../hooks/useProfile\"\r\n\r\nexport default function MessageInput() {\r\n    const [message, setMessage] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    \r\n    const handleClick = () => {\r\n        setError(false)\r\n        const firestore = firebaseApp.firestore\r\n\r\n        // メッセージボックスが空の場合はエラーを返す\r\n        if (message === \"\") {\r\n            console.log(\"空文字のため未送信\")\r\n            setError(true)\r\n            return\r\n          }\r\n\r\n        try {\r\n            const docRef = collection(firestore, \"message\")\r\n            addDoc(docRef, {\r\n                text:message,\r\n                createdAt: Timestamp.fromDate(new Date()),\r\n                user: {\r\n                    name: profile?.name,\r\n                    image: profile?.image,\r\n                    uid: profile?.uid,\r\n                  },\r\n              })\r\n            console.log(\"書き込み成功\")\r\n            // 画面をリフレッシュする\r\n            window.location.reload()\r\n            setMessage(\"\")\r\n        } catch (err) {\r\n          console.log(\"メッセージが送信できませんでした。。。\")\r\n          console.log(err)\r\n          setError(true)\r\n        }\r\n    }\r\n    return (\r\n        <Box\r\n        sx={{\r\n            flexGrow: 1,\r\n            position: \"fixed\",\r\n            bottom: 0,\r\n            width: \"100%\",}}>\r\n        <Divider />\r\n        <Stack direction=\"row\" spacing={2} sx={{ margin: \"0.5rem 1rem\" }}>\r\n            <TextField \r\n                size=\"small\" \r\n                sx={{ flex: 1 }}\r\n                value = {message}\r\n                onChange={e => setMessage(e.target.value)} />\r\n            <Button \r\n                variant=\"contained\" \r\n                endIcon={<SendIcon />}\r\n                onClick={() => handleClick()}>\r\n            送信\r\n            </Button>\r\n        </Stack>\r\n        {error && <Alert severity=\"error\">送信できませんでした</Alert>}\r\n        </Box>\r\n    )\r\n}","import React, \r\n      { useEffect,\r\n        useState,\r\n        useRef ,\r\n        useLayoutEffect, } from \"react\";\r\nimport { db }      from '../../firebase';\r\nimport { collection,\r\n         deleteDoc,\r\n         doc ,\r\n         getDocs ,\r\n         addDoc ,}  from 'firebase/firestore';\r\nimport { Avatar ,\r\n         Typography , \r\n         Box ,\r\n         Grid,\r\n         Container ,\r\n         createTheme , \r\n         ThemeProvider ,\r\n         CssBaseline , } from \"@mui/material\"\r\nimport { format ,\r\n         formatDistance,  } from \"date-fns\"\r\nimport { ja } from \"date-fns/locale\"\r\nimport MessageInput from \"./MessageInput\";\r\nimport MainpageHeader    from '../MainPage/MainPageHeader';\r\nimport useProfile from \"../hooks/useProfile\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst collectionName = \"message\"\r\nconst collectionCategoryName = \"category\"\r\nconst titleName      = \"カテゴリー入力\"\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n})\r\n\r\nfunction App() {\r\n  // 追加\r\n  const [addKanji, setaddKanji] = useState(\"\");\r\n  const [addKana, setaddKana] = useState(\"\");\r\n  const [message, setMessage] = useState([]);\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const array = [];\r\n  const bottomRef = useRef(null)\r\n  const history = useHistory();\r\n\r\n  useLayoutEffect(() => {\r\n    bottomRef?.current?.scrollIntoView()\r\n  })\r\n  \r\n  const time = (date) => {\r\n    let timestamp = formatDistance(new Date(), date.toDate(), {\r\n      locale: ja,\r\n    })\r\n    if (timestamp.indexOf(\"未満\") !== -1) {\r\n      return (timestamp = \"たった今\")\r\n    } else if (\r\n      timestamp.indexOf(\"か月\") !== -1 ||\r\n      timestamp.indexOf(\"年\") !== -1\r\n    ) {\r\n      return (timestamp = format(date.toDate(), \"yyyy年M月d日\", {\r\n        locale: ja,\r\n      }))\r\n    } else {\r\n      return (timestamp = timestamp + \"前\")\r\n    }\r\n  }\r\n  \r\n  const fetchMessageData = () => {\r\n    getDocs(collection(db, collectionName)).then((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        console.log(doc.id,doc.data())\r\n        console.log(doc.data().text)\r\n        console.log(format(doc.data().createdAt.toDate(), \"yyyy年MM月dd日hh:mm\"))\r\n        array.push({\r\n          id : doc.id,\r\n          ...doc.data()\r\n        })})\r\n    }).then(()=>{\r\n      setMessage([...array])\r\n    })};\r\n\r\n  useEffect(() => {\r\n    fetchMessageData()\r\n  },[]);\r\n\r\n  // 削除ボタンクリック時\r\n  const handleDelete = (id) => {\r\n    console.log(\"id => \",id)\r\n    if (window.confirm(\"削除してもよろしいですか？\")) {\r\n      console.log(\"OK を選択してます\" , id)\r\n      \r\n      // ドキュメントのid（名前）を取得\r\n      console.log(\"ドキュメントのid（名前）を取得\")\r\n      console.log(\"削除するID\",id)\r\n      deleteDoc(doc(db , collectionName , id)).then((doc) => {\r\n        fetchMessageData()\r\n        alert(\"削除しました。\")\r\n      })\r\n      .catch(() => {\r\n        alert(\"失敗しました\")\r\n     })\r\n    }else{\r\n      console.log(\"キャンセルを選択してます。\")\r\n    }\r\n  };\r\n\r\n  // 追加\r\n  const handleAdd = () => {\r\n    addDoc(collection(db , collectionCategoryName),{\r\n      category: addKanji,\r\n      detail: addKana,\r\n    }).then(() => {\r\n      fetchMessageData();\r\n      setaddKana(\"\");\r\n      setaddKanji(\"\");\r\n      alert(\"追加しました\");\r\n    }).catch(() => {\r\n      alert(\"失敗しました\");\r\n    });\r\n  }\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/test\")\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container maxWidth >\r\n        <MainpageHeader/>\r\n      </Container>\r\n      <Container maxWidth=\"md\">\r\n        <CssBaseline />\r\n        <Box sx={{ flexGrow: 1, m: 2, pt: 6, pb: 4 }}>\r\n          <Typography align=\"center\" variant=\"h4\">\r\n            {titleName}\r\n          </Typography>\r\n        <Typography align=\"center\">\r\n            category:{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              value={addKanji}\r\n              onChange={(event) => setaddKanji(event.target.value)}\r\n            />\r\n            detail:{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              value={addKana}\r\n              onChange={(event) => setaddKana(event.target.value)}\r\n            />\r\n          <button onClick={() => handleAdd()}>追加</button>\r\n          <button onClick={() => handleClick()}>TEST</button>\r\n        </Typography>\r\n        <Grid item xs={12}>\r\n            {message ? (\r\n              message.map((message) => (\r\n                <Box \r\n                  key={message.id} \r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection:profile && profile.uid === message.user.uid ? \"row\" : \"row-reverse\",\r\n                    my: 2,\r\n                    gap: 2,\r\n                    flexGrow: 1, m: 2,}}>\r\n                  <Box>\r\n                    <Avatar src={message.user.image ? message.user.image : \"\"} alt=\"\" />\r\n                  </Box>\r\n                  <Box sx={{ ml: 2 }}>\r\n                    <Typography sx={{ fontSize: 12 }}>\r\n                      {message.user.name}\r\n                    </Typography>\r\n                    <Typography sx={{ p: 1, background: \"#dddddd\", borderRadius: 1 }}>\r\n                      {message.text}\r\n                      <button onClick={() => handleDelete(message.id)}>削除</button>\r\n                    </Typography>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={8} align = \"left\">\r\n                        <Typography sx={{ fontSize: 12 }}>\r\n                          {format(message.createdAt.toDate(), \"yyyy年MM月dd日hh:mm\")}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={4} align = \"right\">\r\n                        <Typography sx={{ fontSize: 12 }}>\r\n                          {time(message.createdAt)}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Box>\r\n              ))) : (\r\n              <p>メッセージが存在しません</p>)}\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n      <MessageInput/>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import   React ,\r\n       { useState }   from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport   Button       from '@mui/material/Button';\r\nimport   useLogout    from '../hooks/logOutUseAuth';\r\nimport   useProfile   from \"../../components/hooks/useProfile\"\r\n\r\nexport default function QuestionButton(props){\r\n    const history = useHistory()\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n    const { logout } = useLogout()\r\n\r\n    const handleLogout = (id) => {\r\n        if(id === \"logout\"){\r\n            logout()\r\n            setOpen(true)\r\n            setAnchorEl(null)\r\n            console.log(\"ポップアップ出す\")\r\n        }else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                console.log(\"props.id が「logout」だったらログアウトする ⇒ \" , props.id)\r\n                // ログインしていなければ新規登録画面へ遷移する\r\n                if(props.id === \"logout\" || props.id === \"login\"){\r\n                    handleLogout(props.id)\r\n                }else if(!profile){\r\n                    history.push(\"/signup\")\r\n                }else{\r\n                    history.push(props.link)\r\n                }\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import React, \r\n      {useState,}     from \"react\";\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,\r\n        ListItemIcon,\r\n        MenuItem,\r\n        Menu ,}       from \"@mui/material\"\r\nimport QuestionButton from './QuestionButton';\r\nimport EditIcon       from '@mui/icons-material/Edit';\r\nimport HomeIcon       from '@mui/icons-material/Home';\r\nimport PersonAddIcon  from '@mui/icons-material/PersonAdd';\r\nimport LoginIcon      from '@mui/icons-material/Login';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\nimport LogoutIcon     from '@mui/icons-material/Logout';\r\nimport useProfile     from \"../../components/hooks/useProfile\"\r\nimport HeaderTitle    from '../HeaderTitle'\r\nimport IconButton     from '@mui/material/IconButton'\r\nimport StarIcon       from '@mui/icons-material/Star'\r\nimport BugReportIcon from '@mui/icons-material/BugReport'\r\n\r\nexport default function QuestionHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // アバターアイコンがクリックされた時\r\n  const handleClickAvatar = (event) =>{\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n      <Box sx={{ flexGrow: 1 }} >\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar>\r\n          <HeaderTitle\r\n              variant   = \"h6\"\r\n              noWrap\r\n              component = \"div\"\r\n              sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n            <Box sx={{ flexGrow: 1 }}/>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n              {profile ? \r\n                <QuestionButton\r\n                  text      = \"ホーム\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<HomeIcon/>}/>\r\n              : \"\" }\r\n              {profile ? \r\n                <QuestionButton\r\n                  text      =\"投稿する\" \r\n                  link      = \"/postpage\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<EditIcon/>}/>\r\n                : \"\" }\r\n              {profile ? \r\n                <QuestionButton\r\n                  text      = \"マイページ\" \r\n                  link      = {profile ? \"/profiles/\"+profile.uid : \"\"} \r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<PersonIcon/>}/>\r\n                  : \"\" }\r\n              {profile ? \r\n                <QuestionButton\r\n                  id        = \"logout\"\r\n                  text      = \"ログアウト\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LogoutIcon/>}/>\r\n                : <QuestionButton\r\n                  id        = \"login\"\r\n                  text      = \"ログイン\" \r\n                  link      = \"/login\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LoginIcon/>}/>}\r\n              {profile ? \r\n                <IconButton onClick={handleClickAvatar}>\r\n                  <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n                </IconButton>\r\n                  : <QuestionButton\r\n                    text    = \"新規登録\" \r\n                    link    = \"/signup\"\r\n                    size    = \"large\"\r\n                    variant = \"contained\"\r\n                    sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                    startIcon = {<PersonAddIcon/>}/>}\r\n              </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n  )\r\n}\r\n","import   React, \r\n       { useState,\r\n         useEffect,}         from \"react\"\r\nimport { Box ,\r\n         Typography,\r\n         Container , }       from '@mui/material'\r\nimport { createTheme,\r\n         ThemeProvider }     from '@mui/material/styles'\r\nimport { useHistory,\r\n         withRouter }        from 'react-router'\r\nimport   QuestionHeader    from './QuestionHeader'\r\nimport   Footer              from '../Footer'\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nfunction Question(props) {\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Container maxWidth>\r\n            <QuestionHeader/>\r\n        </Container>\r\n        <Container maxWidth = \"md\" >\r\n            <Box sx={{ flexGrow: 1, m: 2, pt: 4, pb: 4 }}>\r\n                <Container maxWidth>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h5\"\r\n                        align=\"center\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 5 , \r\n                                pb : 1 ,}}>\r\n                        よくある質問\r\n                    </Typography>\r\n                </Container>\r\n            </Box>\r\n        </Container>\r\n      {/* Footer */}\r\n      <Footer/>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(Question);\r\n","import   React ,\r\n       { useState }   from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport   Button       from '@mui/material/Button';\r\nimport   useLogout    from '../hooks/logOutUseAuth';\r\nimport   useProfile   from \"../../components/hooks/useProfile\"\r\n\r\nexport default function QuestionButton(props){\r\n    const history = useHistory()\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n    const { logout } = useLogout()\r\n\r\n    const handleLogout = (id) => {\r\n        if(id === \"logout\"){\r\n            logout()\r\n            setOpen(true)\r\n            setAnchorEl(null)\r\n            console.log(\"ポップアップ出す\")\r\n        }else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                console.log(\"props.id が「logout」だったらログアウトする ⇒ \" , props.id)\r\n                // ログインしていなければ新規登録画面へ遷移する\r\n                if(props.id === \"logout\" || props.id === \"login\"){\r\n                    handleLogout(props.id)\r\n                }else if(!profile){\r\n                    history.push(\"/signup\")\r\n                }else{\r\n                    history.push(props.link)\r\n                }\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import React, \r\n      {useState,}     from \"react\";\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,\r\n        ListItemIcon,\r\n        MenuItem,\r\n        Menu ,}       from \"@mui/material\"\r\nimport InfomationButton from './InfomationButton';\r\nimport EditIcon       from '@mui/icons-material/Edit';\r\nimport HomeIcon       from '@mui/icons-material/Home';\r\nimport PersonAddIcon  from '@mui/icons-material/PersonAdd';\r\nimport LoginIcon      from '@mui/icons-material/Login';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\nimport LogoutIcon     from '@mui/icons-material/Logout';\r\nimport useProfile     from \"../hooks/useProfile\"\r\nimport HeaderTitle    from '../HeaderTitle'\r\nimport IconButton     from '@mui/material/IconButton'\r\nimport StarIcon       from '@mui/icons-material/Star'\r\nimport BugReportIcon from '@mui/icons-material/BugReport'\r\n\r\nexport default function InfomationHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // アバターアイコンがクリックされた時\r\n  const handleClickAvatar = (event) =>{\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n      <Box sx={{ flexGrow: 1 }} >\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar>\r\n          <HeaderTitle\r\n              variant   = \"h6\"\r\n              noWrap\r\n              component = \"div\"\r\n              sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n            <Box sx={{ flexGrow: 1 }}/>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n              {profile ? \r\n                <InfomationButton\r\n                  text      = \"ホーム\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<HomeIcon/>}/>\r\n              : \"\" }\r\n              {profile ? \r\n                <InfomationButton\r\n                  text      =\"投稿する\" \r\n                  link      = \"/postpage\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<EditIcon/>}/>\r\n                : \"\" }\r\n              {profile ? \r\n                <InfomationButton\r\n                  text      = \"マイページ\" \r\n                  link      = {profile ? \"/profiles/\"+profile.uid : \"\"} \r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<PersonIcon/>}/>\r\n                  : \"\" }\r\n              {profile ? \r\n                <InfomationButton\r\n                  id        = \"logout\"\r\n                  text      = \"ログアウト\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LogoutIcon/>}/>\r\n                : <InfomationButton\r\n                  id        = \"login\"\r\n                  text      = \"ログイン\" \r\n                  link      = \"/login\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LoginIcon/>}/>}\r\n              {profile ? \r\n                <IconButton onClick={handleClickAvatar}>\r\n                  <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n                </IconButton>\r\n                  : <InfomationButton\r\n                    text    = \"新規登録\" \r\n                    link    = \"/signup\"\r\n                    size    = \"large\"\r\n                    variant = \"contained\"\r\n                    sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                    startIcon = {<PersonAddIcon/>}/>}\r\n              </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n  )\r\n}\r\n","import   React, \r\n       { useState,\r\n         useEffect,}         from \"react\"\r\nimport { Box ,\r\n         Typography,\r\n         Container ,\r\n         Grid ,\r\n         Table , \r\n         TableBody ,\r\n         TableCell ,\r\n         TableContainer ,\r\n         TableHead , \r\n         TableRow , \r\n         Paper , }           from '@mui/material'\r\nimport { createTheme,\r\n         ThemeProvider }     from '@mui/material/styles'\r\nimport { useHistory,\r\n         withRouter }        from 'react-router'\r\nimport   InfomationHeader    from './InfomationHeader'\r\nimport   Footer              from '../Footer'\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nfunction Infomation(props) {\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Container maxWidth>\r\n            <InfomationHeader/>\r\n        </Container>\r\n        <Container maxWidth = \"md\" >\r\n            <Box sx={{ flexGrow: 1, m: 2, pt: 4, pb: 4 }}>\r\n                <Container maxWidth>\r\n                  <Typography\r\n                      variant=\"h6\"\r\n                      align=\"left\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      sx = {{backgroundColor : \"#ffffff\",\r\n                              color : \"#000000\",\r\n                              padding: \"1rem 2rem\",\r\n                              pt : 5 , \r\n                              pb : 1 ,}}>\r\n                      <strong>Infomation</strong>\r\n                  </Typography>\r\n                  <Typography\r\n                      variant=\"h5\"\r\n                      align=\"left\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      sx = {{backgroundColor : \"#ffffff\",\r\n                              color : \"#000000\",\r\n                              padding: \"1rem 2rem\",\r\n                              pt : 1 , \r\n                              pb : 1 ,}}>\r\n                      お知らせ・ニュース\r\n                  </Typography>\r\n                  <TableContainer component={Paper}>\r\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell ><strong>Date</strong></TableCell>\r\n                          <TableCell align=\"left\"><strong>Infomation</strong></TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {InfomationData.map((row) => (\r\n                          <TableRow\r\n                            key={row.name}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                          >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {/* 日付を表示 */}\r\n                              <strong>{row.date}</strong>\r\n                            </TableCell>\r\n                            {/* タイトルを表示 */}\r\n                            <TableCell align=\"left\">{row.title}</TableCell>\r\n                            {/* リンクをクリックすると詳細画面へ遷移して文章を表示(予定) */}\r\n                            {/* <TableCell align=\"left\">{row.infoDetail}</TableCell> */}\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  {/* {InfomationData.map((item) => (\r\n                    <Grid>\r\n                      <Typography\r\n                          component=\"h1\"\r\n                          variant=\"h6\"\r\n                          align=\"left\"\r\n                          color=\"text.primary\"\r\n                          gutterBottom\r\n                          sx = {{backgroundColor : \"#eeeeee\",\r\n                                  color : \"#000000\",\r\n                                  padding: \"1rem 2rem\",\r\n                                  borderTop    : \"solid #E64545 1px\",\r\n                                  borderBottom : \"solid #E64545 1px\",\r\n                                  borderLeft   : \"solid #E64545 10px\",\r\n                                  borderRight  : \"solid #E64545 1px\",\r\n                                  borderRadius : 2,\r\n                                  pt : 1 , \r\n                                  pb : 1 ,}}>\r\n                          {item.date}\r\n                      </Typography>\r\n                      <Typography\r\n                          component=\"h1\"\r\n                          variant=\"body1\"\r\n                          align=\"left\"\r\n                          color=\"text.primary\"\r\n                          gutterBottom\r\n                          sx = {{backgroundColor : \"#ffffff\",\r\n                                  color : \"#000000\",\r\n                                  padding: \"1rem 2rem\",\r\n                                  pt : 1 , \r\n                                  pb : 1 ,}}>\r\n                          {item.title}\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))} */}\r\n              </Container>\r\n            </Box>\r\n        </Container>\r\n      {/* Footer */}\r\n      <Footer/>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(Infomation);\r\n\r\nconst InfomationData = [\r\n  {\r\n    id   : \"20220601\",\r\n    date : \"2022/06/01\",\r\n    title: \"これ、考えた人すごいね。をリリースしました。\",\r\n    contents: \"はじめまして　「これ、考えた人すごいね。」ちぢめて「これかん」と申します。\"+\r\n              \"この度、DIYのアイディアをみんなで共有&投稿するアプリをリリースしました。\"+\r\n              \"DIYは作るだけではなく、アイディアを探すのも楽しく、「これ、考えた人すごいね。」と思うような作品を探したり、\"+\r\n              \"投稿したりしてDIYを一緒に楽しみましょう！\",\r\n    infoDetail : \"詳細はこちら\"\r\n  },\r\n]","import   React ,\r\n       { useState }   from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport   Button       from '@mui/material/Button';\r\nimport   useLogout    from '../hooks/logOutUseAuth';\r\nimport   useProfile   from \"../../components/hooks/useProfile\"\r\n\r\nexport default function InquiryButton(props){\r\n    const history = useHistory()\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n    const { logout } = useLogout()\r\n\r\n    const handleLogout = (id) => {\r\n        if(id === \"logout\"){\r\n            logout()\r\n            setOpen(true)\r\n            setAnchorEl(null)\r\n            console.log(\"ポップアップ出す\")\r\n        }else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                console.log(\"props.id が「logout」だったらログアウトする ⇒ \" , props.id)\r\n                // ログインしていなければ新規登録画面へ遷移する\r\n                if(props.id === \"logout\" || props.id === \"login\"){\r\n                    handleLogout(props.id)\r\n                }else if(!profile){\r\n                    history.push(\"/signup\")\r\n                }else{\r\n                    history.push(props.link)\r\n                }\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import React, \r\n      {useState,}     from \"react\";\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,\r\n        ListItemIcon,\r\n        MenuItem,\r\n        Menu ,}       from \"@mui/material\"\r\nimport InquiryButton from './InquiryButton';\r\nimport EditIcon       from '@mui/icons-material/Edit';\r\nimport HomeIcon       from '@mui/icons-material/Home';\r\nimport PersonAddIcon  from '@mui/icons-material/PersonAdd';\r\nimport LoginIcon      from '@mui/icons-material/Login';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\nimport LogoutIcon     from '@mui/icons-material/Logout';\r\nimport useProfile     from \"../../components/hooks/useProfile\"\r\nimport HeaderTitle    from '../HeaderTitle'\r\nimport IconButton     from '@mui/material/IconButton'\r\nimport StarIcon       from '@mui/icons-material/Star'\r\nimport BugReportIcon from '@mui/icons-material/BugReport'\r\n\r\nexport default function InquiryHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // アバターアイコンがクリックされた時\r\n  const handleClickAvatar = (event) =>{\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n      <Box sx={{ flexGrow: 1 }} >\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar>\r\n          <HeaderTitle\r\n              variant   = \"h6\"\r\n              noWrap\r\n              component = \"div\"\r\n              sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n            <Box sx={{ flexGrow: 1 }}/>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n              {profile ? \r\n                <InquiryButton\r\n                  text      = \"ホーム\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<HomeIcon/>}/>\r\n              : \"\" }\r\n              {profile ? \r\n                <InquiryButton\r\n                  text      =\"投稿する\" \r\n                  link      = \"/postpage\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<EditIcon/>}/>\r\n                : \"\" }\r\n              {profile ? \r\n                <InquiryButton\r\n                  text      = \"マイページ\" \r\n                  link      = {profile ? \"/profiles/\"+profile.uid : \"\"} \r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<PersonIcon/>}/>\r\n                  : \"\" }\r\n              {profile ? \r\n                <InquiryButton\r\n                  id        = \"logout\"\r\n                  text      = \"ログアウト\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LogoutIcon/>}/>\r\n                : <InquiryButton\r\n                  id        = \"login\"\r\n                  text      = \"ログイン\" \r\n                  link      = \"/login\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LoginIcon/>}/>}\r\n              {profile ? \r\n                <IconButton onClick={handleClickAvatar}>\r\n                  <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n                </IconButton>\r\n                  : <InquiryButton\r\n                    text    = \"新規登録\" \r\n                    link    = \"/signup\"\r\n                    size    = \"large\"\r\n                    variant = \"contained\"\r\n                    sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                    startIcon = {<PersonAddIcon/>}/>}\r\n              </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n  )\r\n}\r\n","import   React, \r\n       { useState,\r\n         useEffect,}         from \"react\"\r\nimport { Box ,\r\n         Typography,\r\n         Container , }       from '@mui/material'\r\nimport { createTheme,\r\n         ThemeProvider }     from '@mui/material/styles'\r\nimport { useHistory,\r\n         withRouter }        from 'react-router'\r\nimport   InquiryHeader    from './InquiryHeader'\r\nimport   Footer              from '../Footer'\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nfunction Inquiry(props) {\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Container maxWidth>\r\n            <InquiryHeader/>\r\n        </Container>\r\n        <Container maxWidth = \"md\" >\r\n            <Box sx={{ flexGrow: 1, m: 2, pt: 4, pb: 4 }}>\r\n                <Container maxWidth>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h5\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                borderTop: \"double #E64545 6px\",\r\n                                borderBottom: \"double #E64545 6px\",\r\n                                pt : 5 , \r\n                                pb : 1 ,}}>\r\n                        お問い合わせ\r\n                    </Typography>\r\n                </Container>\r\n            </Box>\r\n        </Container>\r\n      {/* Footer */}\r\n      <Footer/>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(Inquiry);\r\n","import   React ,\r\n       { useState }   from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport   Button       from '@mui/material/Button';\r\nimport   useLogout    from '../hooks/logOutUseAuth';\r\nimport   useProfile   from \"../../components/hooks/useProfile\"\r\n\r\nexport default function TermsButton(props){\r\n    const history = useHistory()\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n    const { logout } = useLogout()\r\n\r\n    const handleLogout = (id) => {\r\n        if(id === \"logout\"){\r\n            logout()\r\n            setOpen(true)\r\n            setAnchorEl(null)\r\n            console.log(\"ポップアップ出す\")\r\n        }else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                console.log(\"props.id が「logout」だったらログアウトする ⇒ \" , props.id)\r\n                // ログインしていなければ新規登録画面へ遷移する\r\n                if(props.id === \"logout\" || props.id === \"login\"){\r\n                    handleLogout(props.id)\r\n                }else if(!profile){\r\n                    history.push(\"/signup\")\r\n                }else{\r\n                    history.push(props.link)\r\n                }\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import React, \r\n      {useState,}     from \"react\";\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,\r\n        ListItemIcon,\r\n        MenuItem,\r\n        Menu ,}       from \"@mui/material\"\r\nimport TermsButton from './TermsButton';\r\nimport EditIcon       from '@mui/icons-material/Edit';\r\nimport HomeIcon       from '@mui/icons-material/Home';\r\nimport PersonAddIcon  from '@mui/icons-material/PersonAdd';\r\nimport LoginIcon      from '@mui/icons-material/Login';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\nimport LogoutIcon     from '@mui/icons-material/Logout';\r\nimport useProfile     from \"../../components/hooks/useProfile\"\r\nimport HeaderTitle    from '../HeaderTitle'\r\nimport IconButton     from '@mui/material/IconButton'\r\nimport StarIcon       from '@mui/icons-material/Star'\r\nimport BugReportIcon from '@mui/icons-material/BugReport'\r\n\r\nexport default function TermsHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // アバターアイコンがクリックされた時\r\n  const handleClickAvatar = (event) =>{\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n      <Box sx={{ flexGrow: 1 }} >\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar>\r\n          <HeaderTitle\r\n              variant   = \"h6\"\r\n              noWrap\r\n              component = \"div\"\r\n              sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n            <Box sx={{ flexGrow: 1 }}/>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n              {profile ? \r\n                <TermsButton\r\n                  text      = \"ホーム\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<HomeIcon/>}/>\r\n              : \"\" }\r\n              {profile ? \r\n                <TermsButton\r\n                  text      =\"投稿する\" \r\n                  link      = \"/postpage\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<EditIcon/>}/>\r\n                : \"\" }\r\n              {profile ? \r\n                <TermsButton\r\n                  text      = \"マイページ\" \r\n                  link      = {profile ? \"/profiles/\"+profile.uid : \"\"} \r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<PersonIcon/>}/>\r\n                  : \"\" }\r\n              {profile ? \r\n                <TermsButton\r\n                  id        = \"logout\"\r\n                  text      = \"ログアウト\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LogoutIcon/>}/>\r\n                : <TermsButton\r\n                  id        = \"login\"\r\n                  text      = \"ログイン\" \r\n                  link      = \"/login\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LoginIcon/>}/>}\r\n              {profile ? \r\n                <IconButton onClick={handleClickAvatar}>\r\n                  <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n                </IconButton>\r\n                  : <TermsButton\r\n                    text    = \"新規登録\" \r\n                    link    = \"/signup\"\r\n                    size    = \"large\"\r\n                    variant = \"contained\"\r\n                    sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                    startIcon = {<PersonAddIcon/>}/>}\r\n              </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n  )\r\n}\r\n","import   React, \r\n       { useState,\r\n         useEffect,}         from \"react\"\r\nimport { Box ,\r\n         Typography,\r\n         Container, \r\n         Grid, }       from '@mui/material'\r\nimport { createTheme,\r\n         ThemeProvider }     from '@mui/material/styles'\r\nimport { useHistory,\r\n         withRouter }        from 'react-router'\r\nimport   TermsHeader    from './TermsHeader'\r\nimport   Footer              from '../Footer'\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nfunction Terms(props) {\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Container maxWidth>\r\n            <TermsHeader/>\r\n        </Container>\r\n        <Container maxWidth = \"md\" >\r\n            <Box sx={{ flexGrow: 1, m: 2, pt: 4, pb: 4 }}>\r\n                <Container maxWidth>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h5\"\r\n                        align=\"center\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 5 , \r\n                                pb : 1 ,}}>\r\n                        利用規約\r\n                    </Typography>\r\n                    {TermsData.map((item) => (\r\n                      <Grid>\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            variant=\"h6\"\r\n                            align=\"left\"\r\n                            color=\"text.primary\"\r\n                            gutterBottom\r\n                            sx = {{backgroundColor : \"#eeeeee\",\r\n                                    color : \"#000000\",\r\n                                    padding: \"1rem 2rem\",\r\n                                    borderTop    : \"solid #E64545 1px\",\r\n                                    borderBottom : \"solid #E64545 1px\",\r\n                                    borderLeft   : \"solid #E64545 10px\",\r\n                                    borderRight  : \"solid #E64545 1px\",\r\n                                    borderRadius : 2,\r\n                                    pt : 1 , \r\n                                    pb : 1 ,}}>\r\n                            {item.title}\r\n                        </Typography>\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            variant=\"body1\"\r\n                            align=\"left\"\r\n                            color=\"text.primary\"\r\n                            gutterBottom\r\n                            sx = {{backgroundColor : \"#ffffff\",\r\n                                    color : \"#000000\",\r\n                                    padding: \"1rem 2rem\",\r\n                                    pt : 1 , \r\n                                    pb : 1 ,}}>\r\n                            {item.contents}\r\n                        </Typography>\r\n                      </Grid>\r\n                    ))}\r\n                </Container>\r\n            </Box>\r\n        </Container>\r\n      {/* Footer */}\r\n      <Footer/>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(Terms);\r\n\r\nconst TermsData = [\r\n  {\r\n    title: '第1条（適用）',\r\n    contents: '本規約は、本サービスの提供条件および本サービスの利用に関する当サイトとお客様との間の権利義務関係を定めることを目的とし、お客様と当サイトとの間の本サービスの利用に関わる全ての関係に適用されます。当サイトウェブサイト上で掲載する本サービス利用に関するルール、ガイドライン等は、本規約の一部を構成するものとし、お客様はこれを遵守するものとします。本規約の内容と、前項のルールその他の本規約外における本サービスの説明等とが異なる場合は、本規約の規定が優先して適用されるものとします。',\r\n  },\r\n  {\r\n    title: '第2条（定義）',\r\n    contents: '本規約において使用する以下の用語は、各々以下に定める意味を有するものとします。 (1)「サービス利用規約」とは、本規約および当サイトと会員との間で締結する、本サービスの利用規約を意味します。 (2)「知的財産権｣とは、著作権、特許権、実用新案権、意匠権、商標権その他の知的財産権（それらの権利を取得し、またはそれらの権利につき登録等を出願する権利を含みます。）を意味します。 (3)「投稿データ」とは、会員が本サービスを利用して投稿その他送信するコンテンツ（相談、その他の文章、画像、その他のデータを含みますが、これらに限りません。）を意味します。 (4)「当サイト」とは、これ、考えた人すごいね。を意味します。 (5)「会員」とは、第3条（登録）に基づいて本サービスの利用者としての登録がなされた個人または法人を意味します。 (6)「お客様」とは、会員、非会員を問わず、本サービスを利用する個人または法人を意味します。 (7)「本サービス」とは、当サイトが提供する、当サイトウェブサイトにおいて、お客様に提供されるサービス（理由の如何を問わずサービスの名称または内容が変更された場合は、当該変更後のサービスを含みます。）を意味します。',\r\n  },\r\n  {\r\n    title: '第3条（会員登録）',\r\n    contents: '会員登録をした上で、本サービスの利用を希望する者（以下「登録希望者」といいます。）は、本規約を遵守することに同意し、かつ当サイトの定める一定の情報（以下「登録事項」といいます。）を当サイトの定める方法で、当サイトに提供することにより、当サイトに対し、本サービスの会員登録を申請することができます。 当サイトは、当サイトの基準に従って、第1項に基づいて会員登録を申請した登録希望者（以下「登録申請者」といいます。）の登録の可否を判断し、当サイトが登録を認める場合にはその旨を登録申請者に通知します。登録申請者の会員としての登録は、当サイトが本項の通知を行ったことをもって完了するものとします。 前項に定める登録の完了時に、サービス利用契約が会員と当サイトの間に成立し、会員は本サービスを本規約に従い利用することができるようになります。 当サイトは、登録申請者が、以下の各号のいずれかの事由に該当する場合は、登録および再登録を拒否することがあり、また、その理由について一切開示する義務を負いません。 (1)当サイトに提供した登録事項の全部または一部につき虚偽、誤記または記載漏れがあった場合 (2)未成年、成年被後見人、被保佐人または被補助人のいずれかであり、法定代理人、後見人、保佐人または補助人の同意等を得ていなかった場合 (3)反社会的勢力等（暴力団、暴力団員、右翼団体、反社会的勢力、その他これに準じる者を意味します。以下同じ。）である、または資金提供その他を通じて反社会的勢力等の維持、運営もしくは経営に協力もしくは関与する等、反社会的勢力等との何らかの交流もしくは関与を行っていると当サイトが判断した場合 (4)登録希望者が、過去当サイトとの契約に違反した者またはその関係者であると当サイトが判断した場合 (5)第10条に定める措置を受けたことがある場合 (6)その他、当サイトが登録を適当でないと判断した場合 当サイトが提供する本サービスは、会員と非会員で異なる場合があることを、お客様は予め承諾するものとします。',\r\n  },\r\n  {\r\n    title: '第4条（会員登録事項の変更）',\r\n    contents: '会員は、登録事項に変更があった場合、当サイトの定める方法により当該変更事項を遅滞なく当サイトに通知するものとします。',\r\n  },\r\n  {\r\n    title: '第5条（パスワード管理、会員の責任）',\r\n    contents: '会員は、自己の責任において、本サービスに関するパスワードを適切に管理および保管するものとし、これを第三者に利用させ、または貸与、譲渡、名義変更、売買等をしてはならないものとします。 パスワードを利用して本サービスを利用してなされた全ての行為は会員の行為とみなされます。パスワードの管理不十分、使用上の過誤、第三者の使用等によって生じた損害に関する責任は、会員が負うものとし、当サイトは、一切の責任を負いません。但し、当サイトに故意または重過失ある場合はこの限りではありません。 会員は、第三者の行為に対する要望、疑問もしくはクレームがある場合は、当該第三者に対し、直接その旨を通知するものとし、自己の責任と費用をもって処理解決するものとします。',\r\n  },\r\n  {\r\n    title: '第6条（利用環境）',\r\n    contents: 'お客様が本サービスをご利用するためには、お客様は自らの責任と費用で必要な機器、ソフトウェア等を適切に準備、操作していただく必要があります。当サイトはお客様が本サービスを利用するための機器、方法等については一切関与しません。',\r\n  },\r\n  {\r\n    title: '第7条（禁止事項）',\r\n    contents: 'お客様は、本サービスの利用にあたり、以下の各号のいずれかに該当する行為または該当すると当サイトが判断する行為をしてはなりません。 (1)法令に違反する行為または犯罪行為に関連する行為 (2)当サイト、本サービスの他の利用者またはその他の第三者に対する詐欺または脅迫行為 (3)公序良俗に反する行為 (4)当サイト、本サービスの他の利用者またはその他の第三者の知的財産権、肖像権、プライバシーの権利、名誉、その他の権利または利益を侵害する行為 (5)本サービスを通じ、以下に該当し、または該当すると当サイトが判断する情報を当サイトまたは本サービスの他の利用者に送信すること。 過度に暴力的または残虐な表現を含む情報 コンピューター・ウィルスその他の有害なコンピューター・プログラムを含む情報 当サイト、本サービスの他の利用者またはその他の第三者の名誉または信用を毀損する表現を含む情報 過度にわいせつな表現を含む情報 差別を助長する表現を含む情報 自殺、自傷行為を助長する表現を含む情報 薬物の不適切な利用を助長する表現を含む情報 反社会的な表現を含む情報 チェーンメール等の第三者への情報の拡散を求める情報 他人に不快感を与える表現を含む情報 面識のない異性との出会いを目的とした情報 (6)本サービスのネットワークまたはシステム等に過度な負担をかける行為 (7)本サービスの運営を妨害するおそれのある行為 (8)当サイトのネットワークまたはシステム等に不正にアクセスし、または不正なアクセスを試みる行 (9)第三者に成りすます行為 (10)本サービスの他の利用者のパスワードを利用する行為 (11)当サイトが事前に許諾しない本サービス上での宣伝、広告、勧誘、または営業行為 (12)本サービスの他の利用者の情報の収集 (13)当サイト、本サービスの他の利用者またはその他の第三者に不利益、損害、不快感を与える行為 (14)当サイトウェブサイト上で掲載する本サービス利用に関するルール、ガイドライン等に抵触する行為 (15)反社会的勢力等への利益供与 (16)面識のない異性との出会いを目的とした行為 (17)前各号の行為を直接または間接に惹起し、または容易にする行為 (18)その他、当サイトが不適切と判断する行為',\r\n  },\r\n  {\r\n    title: '第8条（本サービスの停止等）',\r\n    contents: '当サイトは、以下のいずれかに該当する場合には、お客様に事前に通知することなく、本サービスの全部または一部の提供を停止または中断することができるものとします。 (1)本サービスに係るコンピューター・システムの点検または保守作業を緊急に行う場合 (2)コンピューター、通信回線等が事故により停止した場合 (3)地震、落雷、火災、風水害、停電、天災地変などの不可抗力により本サービスの運営ができなくなった場合 (4)その他、当サイトが停止または中断を必要と判断した場合 当サイトは、本条に基づき当サイトが行った措置に基づきお客様に生じた損害については、一切の責任を負いません。但し、当サイトに故意または重過失ある場合はこの限りではありません。 当サイトは、本条に基づき当サイトが行った措置に基づきお客様に生じた損害については一切の責任を負いません。',\r\n  },\r\n  {\r\n    title: '第9条（権利帰属）',\r\n    contents: '本規約に基づく本サービスの利用許諾は、当サイトウェブサイトまたは本サービスに関する当サイトまたは当サイトにライセンスを許諾している者の知的財産権の使用許諾を意味するものではありません。 お客様は、投稿データについて、自らが投稿その他送信することについての適法な権利を有していること、および投稿データが第三者の権利を侵害していないことについて、当サイトに対し表明し、保証するものとします。 お客様は、投稿データについて、当サイトに対し、世界的、非独占的、無償、サブライセンス可能かつ譲渡可能な使用、複製、配布、派生著作物の作成、表示および実行に関するライセンスを付与します。また、他のお客様に対しても、本サービスを利用してお客様が投稿その他送信した投稿データの使用、複製、配布、派生著作物を作成、表示および実行することについての非独占的なライセンスを付与します。 お客様は、投稿データについて、要約、抜粋、編集等の改変が行われる場合があることを理解し、当サイトおよび当サイトから権利を承継し、または許諾された者に対して著作者人格権を行使しないことに同意するものとします。 本サービスに投稿データを投稿するにあたっては、当サイトが別途定めるガイドラインに予め同意し、これを遵守するものとします。',\r\n  },\r\n  {\r\n    title: '第10条（会員登録抹消等）',\r\n    contents: '当サイトは、会員が、以下の各号のいずれかの事由に該当する場合は、事前に通知または催告することなく、投稿データを削除しもしくは当該会員について本サービスの利用を一時的に停止し、または会員としての登録を抹消、もしくはサービス利用契約を解除することができます。 (1)本規約のいずれかの条項に違反した場合 (2)登録事項に虚偽の事実があることが判明した場合 (3)支払停止もしくは支払不能となり、または破産手続開始、民事再生手続開始、会社更生手続開始、特別清算開始もしくはこれらに類する手続の開始の申立てがあった場合 (4)6ヶ月以上本サービスの利用がない場合 (5)当サイトからの問い合わせその他の回答を求める連絡に対して30日間以上応答がない場合 (6)登録された連絡先に、当サイトからの連絡が届かない場合 (7)第3条第4項各号に該当する場合 (8)その他、当サイトが本サービスの利用、会員としての登録、またはサービス利用契約の継続を適当でないと判断した場合 前項各号のいずれかの事由に該当した場合、会員は、当サイトに対して負っている債務の全てについて当然に期限の利益を失い、直ちに当サイトに対して全ての債務の支払を行わなければなりません。 当サイトは、本条に基づき当サイトが行った行為につき会員に生じた損害について、一切の責任を負いません。但し、当サイトに故意または重過失ある場合はこの限りではありません。 前項各号のいずれかの事由に該当した場合、会員は、当サイトに対して負っている債務の一切について当然に期限の利益を失い、直ちに当サイトに対して全ての債務の支払を行わなければなりません。 当サイトは、本条に基づき当サイトが行った行為につき会員に生じた損害について一切の責任を負いません。',\r\n  },\r\n  {\r\n    title: '第11条（退会）',\r\n    contents: '会員は、お問い合わせより、当サイトに通知することで、本サービスから退会し、自己の会員としての登録を抹消することができます。 退会にあたり、当サイトに対して負っている債務がある場合は、会員は当サイトに対して負っている債務の全てについて当然に期限の利益を失い、直ちに当サイトに対して全ての債務の支払を行わなければなりません。 退会後の利用者情報の取り扱いについては、第1４条の規定に従うものとします。 会員は、本条に従って退会手続を行った場合であっても、投稿データが削除されないことを予め承諾するものとします。',\r\n  },\r\n  {\r\n    title: '第12条（本サービスの内容の変更、終了）',\r\n    contents: '当サイトは、当サイトの都合により、本サービスの内容を随時変更し、または提供を終了させることができます。当サイトが本サービスの提供を終了する場合、当サイトは、会員に事前に通知し、また本サービスの所定のページに表示するものとします。 当サイトは、本条に基づき当サイトが行った措置に基づき会員に生じた損害について責任を負いません。',\r\n  },\r\n  {\r\n    title: '第13条（保証の否認および免責）',\r\n    contents: '当サイトは、本サービスがお客様の特定の目的に適合すること、期待する機能・商品的価値・正確性・有用性を有すること、お客様による本サービスの利用がお客様に適用のある法令または業界団体の内部規則等に適合すること、および不具合が生じないことについて、何ら保証するものではありません。 当サイトは、当サイトによる本サービスの提供の中断、停止、終了、利用不能または変更、お客様が本サービスに送信したメッセージまたは情報の削除または消失、会員の登録の抹消、本サービスの利用による登録データの消失または機器の故障もしくは損傷、その他本サービスに関してお客様が被った損害（以下「ユーザー損害」といいます。）につき、賠償する責任を一切負わないものとします。但し、当サイトに故意または重過失ある場合はこの限りではありません。 何らかの理由により当サイトが責任を負う場合であっても、当サイトは、ユーザー損害につき、過去12ヶ月間にお客様が当サイトに支払った対価を超えて賠償する責任を負わないものとし、また、付随的損害、間接損害、特別損害、将来の損害および逸失利益にかかる損害については、賠償する責任を負わないものとします。 本サービスまたは当サイトウェブサイトに関連してお客様と他のお客様または第三者との間において生じた取引、連絡、紛争等については、当サイトは、一切の責任を負いません。但し、当サイトに故意または重過失ある場合はこの限りではありません。',\r\n  },\r\n  {\r\n    title: '第14条（秘密保持）',\r\n    contents: 'お客様は、本サービスに関連して当サイトがお客様に対して秘密に取り扱うことを求めて開示した非公知の情報について、当サイトの事前の書面による承諾がある場合を除き、秘密に取り扱うものとします。',\r\n  },\r\n  {\r\n    title: '第15条（利用者情報の取扱い）',\r\n    contents: '当サイトによるお客様の利用者情報の取り扱いについては、別途当サイト個人情報保護ポリシーの定めによるものとし、お客様はこの個人情報保護ポリシーに従って当サイトが会員の利用者情報を取扱うことについて同意するものとします。 当サイトは、お客様が当サイトに対して提供した情報、データ等を、個人を特定できない形での統計的な情報として、当サイトの裁量で、利用および公開することができるものとし、お客様はこれに異議を唱えないものとします。',\r\n  },\r\n  {\r\n    title: '第16条（本規約等の変更）',\r\n    contents: '当サイトは、民法第548条の４の規定により本規約の変更をすることができます。本規約を変更するとき、当サイトは、当サイトのウェブサイトにて、本規約を変更する旨及び変更後の本規約内容並びにその効力発生時期を告知します。',\r\n  },\r\n  {\r\n    title: '第17条（連絡／通知）',\r\n    contents: '本サービスに関する問い合わせその他お客様から当サイトに対する連絡または通知、および本規約の変更に関する通知その他当サイトからお客様に対する連絡または通知は、当サイトの定める方法で行うものとします。',\r\n  },\r\n  {\r\n    title: '第18条（サービス利用契約上の地位の譲渡等）',\r\n    contents: '会員は、当サイトの書面による事前の承諾なく、サービス利用契約上の地位または本規約に基づく権利もしくは義務につき、第三者に対し、譲渡、移転、担保設定その他の処分をすることはできません。 当サイトは、本サービスにかかる事業を他社に譲渡した場合には、当該事業譲渡に伴いサービス利用契約上の地位、本規約に基づく権利および義務ならびに会員の登録事項その他の顧客情報を当該事業譲渡の譲受人に譲渡することができるものとし、会員は、かかる譲渡につき本項において予め同意したものとします。なお、本項に定める事業譲渡には、通常の事業譲渡のみならず、会社分割その他事業が移転するあらゆる場合を含むものとします。',\r\n  },\r\n  {\r\n    title: '第19条（分離可能性）',\r\n    contents: '本規約のいずれかの条項またはその一部が、消費者契約法その他の法令等により無効または執行不能とされた場合であっても、本規約の残りの規定および一部が無効または執行不能と判断された規定の残りの部分は、継続して完全に効力を有するものとします。',\r\n  },\r\n  {\r\n    title: '第20条（準拠法および管轄裁判所）',\r\n    contents: '本規約およびサービス利用契約の準拠法は日本法とします。なお、本サービスにおいて物品の売買が発生する場合であっても、国際物品売買契約に関する国際連合条約の適用を排除することに合意します。 本規約またはサービス利用契約に起因し、または関連する全ての紛争については、東京地方裁判所を第一審の専属的合意管轄裁判所とします。',\r\n  },]","import   React ,\r\n       { useState }   from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport   Button       from '@mui/material/Button';\r\nimport   useLogout    from '../hooks/logOutUseAuth';\r\nimport   useProfile   from \"../../components/hooks/useProfile\"\r\n\r\nexport default function PrivacyPolicyButton(props){\r\n    const history = useHistory()\r\n    const profileData = useProfile()\r\n    const profile = profileData.profile\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n    const { logout } = useLogout()\r\n\r\n    const handleLogout = (id) => {\r\n        if(id === \"logout\"){\r\n            logout()\r\n            setOpen(true)\r\n            setAnchorEl(null)\r\n            console.log(\"ポップアップ出す\")\r\n        }else{\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    return(\r\n        <Button \r\n            id        = {props.id}\r\n            size      = {props.size}\r\n            variant   = {props.variant} \r\n            startIcon = {props.startIcon}\r\n            disableElevation\r\n            sx        = {props.sx}\r\n            onClick={() => {\r\n                console.log(\"props.id が「logout」だったらログアウトする ⇒ \" , props.id)\r\n                // ログインしていなければ新規登録画面へ遷移する\r\n                if(props.id === \"logout\" || props.id === \"login\"){\r\n                    handleLogout(props.id)\r\n                }else if(!profile){\r\n                    history.push(\"/signup\")\r\n                }else{\r\n                    history.push(props.link)\r\n                }\r\n            }}>\r\n            {props.text}\r\n        </Button>\r\n    )\r\n}","import React, \r\n      {useState,}     from \"react\";\r\nimport {Avatar,\r\n        AppBar,\r\n        Toolbar,\r\n        Box,\r\n        ListItemIcon,\r\n        MenuItem,\r\n        Menu ,}       from \"@mui/material\"\r\nimport PrivacyPolicyButton from './PrivacyPolicyButton';\r\nimport EditIcon       from '@mui/icons-material/Edit';\r\nimport HomeIcon       from '@mui/icons-material/Home';\r\nimport PersonAddIcon  from '@mui/icons-material/PersonAdd';\r\nimport LoginIcon      from '@mui/icons-material/Login';\r\nimport PersonIcon     from '@mui/icons-material/Person';\r\nimport LogoutIcon     from '@mui/icons-material/Logout';\r\nimport useProfile     from \"../../components/hooks/useProfile\"\r\nimport HeaderTitle    from '../HeaderTitle'\r\nimport IconButton     from '@mui/material/IconButton'\r\nimport StarIcon       from '@mui/icons-material/Star'\r\nimport BugReportIcon from '@mui/icons-material/BugReport'\r\n\r\nexport default function PrivacyPolicyHeader() {\r\n  const profileData = useProfile()\r\n  const profile = profileData.profile\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  // アバターアイコンがクリックされた時\r\n  const handleClickAvatar = (event) =>{\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n      <Box sx={{ flexGrow: 1 }} >\r\n        <AppBar position=\"fixed\" >\r\n          <Toolbar>\r\n          <HeaderTitle\r\n              variant   = \"h6\"\r\n              noWrap\r\n              component = \"div\"\r\n              sx={{ display: { xs: 'none', sm: 'block' } }}/>\r\n            <Box sx={{ flexGrow: 1 }}/>\r\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n              {profile ? \r\n                <PrivacyPolicyButton\r\n                  text      = \"ホーム\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<HomeIcon/>}/>\r\n              : \"\" }\r\n              {profile ? \r\n                <PrivacyPolicyButton\r\n                  text      =\"投稿する\" \r\n                  link      = \"/postpage\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<EditIcon/>}/>\r\n                : \"\" }\r\n              {profile ? \r\n                <PrivacyPolicyButton\r\n                  text      = \"マイページ\" \r\n                  link      = {profile ? \"/profiles/\"+profile.uid : \"\"} \r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<PersonIcon/>}/>\r\n                  : \"\" }\r\n              {profile ? \r\n                <PrivacyPolicyButton\r\n                  id        = \"logout\"\r\n                  text      = \"ログアウト\" \r\n                  link      = \"/\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LogoutIcon/>}/>\r\n                : <PrivacyPolicyButton\r\n                  id        = \"login\"\r\n                  text      = \"ログイン\" \r\n                  link      = \"/login\"\r\n                  size      = \"large\"\r\n                  variant   = \"contained\"\r\n                  sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                  startIcon = {<LoginIcon/>}/>}\r\n              {profile ? \r\n                <IconButton onClick={handleClickAvatar}>\r\n                  <Avatar src={profile ? profile.image : \"\"} alt=\"\" />\r\n                </IconButton>\r\n                  : <PrivacyPolicyButton\r\n                    text    = \"新規登録\" \r\n                    link    = \"/signup\"\r\n                    size    = \"large\"\r\n                    variant = \"contained\"\r\n                    sx        = {{\"&:hover\": {background: \"#E64545\"}}}\r\n                    startIcon = {<PersonAddIcon/>}/>}\r\n              </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n  )\r\n}\r\n","import   React, \r\n       { useState,\r\n         useEffect,}         from \"react\"\r\nimport { Box ,\r\n         Typography,\r\n         Container , }       from '@mui/material'\r\nimport { createTheme,\r\n         ThemeProvider }     from '@mui/material/styles'\r\nimport { useHistory,\r\n         withRouter }        from 'react-router'\r\nimport   PrivacyPolicyHeader    from './PrivacyPolicyHeader'\r\nimport   Footer              from '../Footer'\r\n\r\nconst theme = createTheme({\r\n  shadows: [\"none\"],\r\n  palette: {\r\n    // ボタンのカラー設定\r\n    primary: {\r\n      main: '#E64545',\r\n      contrastText: '#ffffff',\r\n    },\r\n    // 背景のカラー設定\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n    // テキストのカラー設定\r\n    text: { primary: '#000000' },\r\n  },\r\n})\r\n\r\nfunction PrivacyPolicy(props) {\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n        <Container maxWidth>\r\n            <PrivacyPolicyHeader/>\r\n        </Container>\r\n        <Container maxWidth = \"md\" >\r\n            <Box sx={{ flexGrow: 1, m: 2, pt: 4, pb: 4 }}>\r\n                <Container maxWidth>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h5\"\r\n                        align=\"center\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 5 , \r\n                                pb : 1 ,}}>\r\n                        プライバシーポリシー\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h6\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#eeeeee\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                borderTop    : \"solid #E64545 1px\",\r\n                                borderBottom : \"solid #E64545 1px\",\r\n                                borderLeft   : \"solid #E64545 10px\",\r\n                                borderRight  : \"solid #E64545 1px\",\r\n                                borderRadius : 2,\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        個人情報取り扱いに関する基本方針\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"body1\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        これ、考えた人すごいね。では、サービスを提供する上で以下のプライバシーポリシーに従い、\r\n                        お客様のプライバシーを尊重し個人情報に対して十分な配慮を行うと共に、\r\n                        適切な取り扱いおよび保護に努めます。\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h6\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#eeeeee\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                borderTop    : \"solid #E64545 1px\",\r\n                                borderBottom : \"solid #E64545 1px\",\r\n                                borderLeft   : \"solid #E64545 10px\",\r\n                                borderRight  : \"solid #E64545 1px\",\r\n                                borderRadius : 2,\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        個人情報の取得\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"body1\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        これ、考えた人すごいね。では当サービスのご利用において、\r\n                        お客様の個人情報を収集することがございます。\r\n                        収集するにあたっては利用目的を明記の上、\r\n                        適法かつ公正な手段によります。\r\n                        当サービスで収集する個人情報は以下の通りです。<br/><br/>\r\n                        ・メールアドレス<br/>\r\n                        ・パスワード\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h6\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#eeeeee\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                borderTop    : \"solid #E64545 1px\",\r\n                                borderBottom : \"solid #E64545 1px\",\r\n                                borderLeft   : \"solid #E64545 10px\",\r\n                                borderRight  : \"solid #E64545 1px\",\r\n                                borderRadius : 2,\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        個人情報の利用目的\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"body1\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        これ、考えた人すごいね。では当サービスでお客様よりお預かりした個人情報の利用目的は以下の通りです。<br/><br/>\r\n                        ・お問い合わせの返信時<br/>\r\n                        ・当サービスに関する情報やご案内の配信<br/>\r\n                        ・サービス改善に関するマーケティング<br/>\r\n                        ・何らかの理由によりご連絡する必要が生じた場合\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h6\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#eeeeee\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                borderTop    : \"solid #E64545 1px\",\r\n                                borderBottom : \"solid #E64545 1px\",\r\n                                borderLeft   : \"solid #E64545 10px\",\r\n                                borderRight  : \"solid #E64545 1px\",\r\n                                borderRadius : 2,\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        個人情報開示、提供について\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"body1\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        これ、考えた人すごいね。では以下のいずれかに該当する場合を除き、\r\n                        お客様の断りなく第三者に個人情報を開示、提供することはございません。<br/><br/>\r\n                      ・ご本人の同意がある場合<br/>\r\n                      ・法的拘束力がある第三者機関からの開示要求がある場合<br/>\r\n                      ・人の生命、身体、財産の保護のために必要がある場合であり、本人の同意を得ることが困難である場合\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h6\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#eeeeee\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                borderTop    : \"solid #E64545 1px\",\r\n                                borderBottom : \"solid #E64545 1px\",\r\n                                borderLeft   : \"solid #E64545 10px\",\r\n                                borderRight  : \"solid #E64545 1px\",\r\n                                borderRadius : 2,\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        cookie(クッキー)の使用について\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"body1\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        これ、考えた人すごいね。では、お客様によりよいサービスを提供するため、\r\n                        cookie （クッキー）を使用することがありますが、\r\n                        これにより個人を特定できる情報の収集を行えるものではなく、\r\n                        お客様のプライバシーを侵害することはございません。<br/><br/>\r\n                         ※cookie （クッキー）とは、サーバーコンピュータからお客様のブラウザに送信され、\r\n                         お客様が使用しているコンピュータのハードディスクに蓄積される情報です。\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h6\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#eeeeee\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                borderTop    : \"solid #E64545 1px\",\r\n                                borderBottom : \"solid #E64545 1px\",\r\n                                borderLeft   : \"solid #E64545 10px\",\r\n                                borderRight  : \"solid #E64545 1px\",\r\n                                borderRadius : 2,\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        プライバシーポリシーの変更\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"body1\"\r\n                        align=\"left\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                        sx = {{backgroundColor : \"#ffffff\",\r\n                                color : \"#000000\",\r\n                                padding: \"1rem 2rem\",\r\n                                pt : 1 , \r\n                                pb : 1 ,}}>\r\n                        これ、考えた人すごいね。では、収集する個人情報の変更、利用目的の変更、\r\n                        またはその他プライバシーポリシーの変更を行う際は、\r\n                        当ページへの変更をもって公表とさせていただきます。\r\n                    </Typography>\r\n                </Container>\r\n            </Box>\r\n        </Container>\r\n      {/* Footer */}\r\n      <Footer/>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(PrivacyPolicy);\r\n\r\n","import   React, \r\n      {  useState }      from \"react\"\r\nimport { emphasize, styled } from '@mui/material/styles';\r\nimport { Chip , \r\n  Typography ,\r\n  Grid,\r\n  createTheme,\r\n  ThemeProvider ,\r\n  Button, \r\n  CardMedia,}      from \"@mui/material\"\r\n\r\nconst theme = createTheme()\r\nconst defaultSrc =\r\n    \"https://firebasestorage.googleapis.com/v0/b/myfirebasesample-c6d99.appspot.com/o/PAGE_USE_IMG%2FAddImage.png?alt=media&token=d4acd7c6-5a2b-4f54-a4bb-0e6240d25f81\";\r\n\r\nexport default function CustomizedBreadcrumbs() {\r\n  const [image, setImage] = useState()\r\n  const [testImage , setTestImage] = useState()\r\n  const [imageAry , setImageAry] = useState([])\r\n  const [countStep , setCountStep ] = useState(0)\r\n  const buffAyr = [\"\"]\r\n\r\n  const addComponent = () => {\r\n    console.log(\"imageAry : \" , imageAry)\r\n    if(countStep < 8){\r\n      imageAry.push({\r\n        id : imageAry.length,\r\n        // ...buffAyr,\r\n      })\r\n      setCountStep(countStep + 1)\r\n    }\r\n  }\r\n\r\n  const delComponent = () => {\r\n    console.log(\"imageAry : \" , imageAry)\r\n    if(countStep > 0){\r\n      imageAry.pop({\r\n        // imagefile : \"\",\r\n      })\r\n      setCountStep(countStep - 1)\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files !== null) {\r\n        setImage(e.target.files[0])\r\n        console.log(\"handleChange => \",e.target.files[0])\r\n        console.log(\"image => \",image)\r\n      }\r\n    }\r\n  \r\n  const onChangeTest = (e) => {\r\n    console.log(\"★\" , e.target.id)\r\n    console.log(\"★★\" , imageAry[e.target.id])\r\n    if (e.target.files !== null) {\r\n      imageAry[e.target.id] = e.target.files[0]\r\n      console.log(\"★imageAry => \",imageAry)\r\n      setImageAry([...imageAry])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Typography \r\n      component=\"h1\" \r\n      variant=\"h6\" \r\n      align=\"left\"\r\n      sx = {{backgroundColor : \"#ffffff\",\r\n            color : \"#000000\",\r\n            padding: \"0.2rem\",\r\n            borderLeft : \"solid #E64545 6px\"}}>\r\n      画像選択\r\n    </Typography>\r\n    <Grid container spacing={1} align= \"center\">\r\n        {/* <Item>タイトル画像<ImageUpload/></Item> */}\r\n        <Grid item xs={12} md={12}>\r\n          <CardMedia\r\n            sx={{ width: 400, height: 400 }}\r\n            // src={image ? URL.createObjectURL(image) : profile ? profile.image : \"\"}alt=\"\"/>\r\n            image={image ? URL.createObjectURL(image) : defaultSrc}alt=\"\"/>\r\n          <input\r\n            id=\"mainImage\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleChange}\r\n            style={{ display: \"none\" }}/>\r\n            <label htmlFor=\"mainImage\">\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"primary\" \r\n                component=\"span\"\r\n                sx = {{width : 400}}>\r\n                画像を選択する\r\n              </Button>\r\n            </label>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          手数：{countStep}\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Button \r\n            variant = \"outlined\"\r\n            onClick = {addComponent}>手順を追加する</Button>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Button \r\n            variant = \"outlined\"\r\n            onClick = {delComponent}>手順を減らす</Button>\r\n        </Grid>\r\n\r\n        {/* 以下のコンポーネントをクリック毎に増やす */}\r\n        <Grid container spacing={0}>\r\n          {imageAry.map((imageary) => (\r\n          <Grid md = {3}>\r\n            <CardMedia\r\n              sx={{ width: 200, height: 200 }}\r\n              image={imageary.image ? URL.createObjectURL(imageary.name) : defaultSrc}alt=\"\"/>\r\n              <input\r\n                id={imageary}\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onChangeTest}\r\n                style={{ display: \"none\" }}/>\r\n                <label htmlFor={imageary.id}>\r\n                  <Button \r\n                    id = {imageary}\r\n                    variant=\"outlined\" \r\n                    color=\"primary\" \r\n                    component=\"span\"\r\n                    sx = {{width : 200}}>\r\n                    画像を選択する{imageary.imagefile}\r\n                  </Button>\r\n                </label>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        {/* <Item>画像2<ImageUpload/></Item>\r\n        <Item>画像3<ImageUpload/></Item> */}\r\n    </Grid>\r\n  </ThemeProvider>\r\n  )\r\n}\r\n","import { BrowserRouter, \r\n         Route, \r\n         Switch,\r\n         useHistory,}           from \"react-router-dom\";\r\nimport Login                    from \"./components/Login/Login\";\r\nimport SignUp                   from \"./components/SignUp/SignUp\";\r\nimport PasswordReset            from './components/PasswordReset/PasswordReset';\r\nimport MainPage                 from \"./components/MainPage/MainPage\";\r\nimport PostPage                 from './components/PostPage/PostPage';\r\nimport MainTop                  from './components/MainPage/MainPage';\r\nimport CategoryList             from './components/CategoryList/CategoryList'\r\nimport DetailID                 from './components/DetailList/DetailList'\r\nimport RecipeDetails            from './components/RecipDetails/RecipeDetails';\r\nimport RecipeDetailsEdit        from './components/RecipDetailsEdit/RecipeDetailsEdit';\r\nimport RecipeDetailsID          from './components/RecipDetails/RecipeDetails';\r\nimport Profiles                 from './components/Profiles/Profiles'\r\nimport ProfileID                from './components/Profiles/Profiles'\r\nimport ProfileEdit              from './components/ProfileEdit/ProfileEdit'\r\nimport UserRegistration         from './components/UserRegistration/UserRegistration';\r\nimport UserRegistrationReview   from './components/UserRegistration/UserRegistrationReview';\r\nimport UserRegistrationComplete from './components/UserRegistration/UserRegistrationComplete';\r\nimport Message                  from './components/Message/Message'\r\nimport Question                 from './components/Question/Question'\r\nimport Infomation               from './components/Infomation/Infomation'\r\nimport Inquiry                  from './components/Inquiry/Inquiry'\r\nimport Terms                    from \"./components/Terms/Terms\"\r\nimport PrivacyPolicy            from \"./components/PrivacyPolicy/PrivacyPolicy\"\r\nimport Test                     from './components/test/test'\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <BrowserRouter history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={MainTop} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n        <Route exact path=\"/passwordreset\" component={PasswordReset} />\r\n        <Route exact path=\"/mainpage\" component={MainPage} />\r\n        <Route exact path=\"/categorylist\" component={CategoryList} />\r\n        <Route exact path=\"/categorylist/:id\" component={DetailID} />\r\n        <Route exact path=\"/profiles\" component={Profiles} />\r\n        <Route exact path=\"/profiles/:id\" component={ProfileID} />\r\n        <Route exact path=\"/profile/edit\" component={ProfileEdit} />\r\n        <Route exact path=\"/recipedetails/\" component={RecipeDetails} />\r\n        <Route exact path=\"/recipedetails/:id/edit\" component={RecipeDetailsEdit} />\r\n        <Route exact path=\"/recipedetails/:id\" component={RecipeDetailsID} />\r\n        <Route exact path=\"/userregistration\" component={UserRegistration} />\r\n        <Route exact path=\"/userregistration/Review\" component={UserRegistrationReview} />\r\n        <Route exact path=\"/userregistration/Complete\" component={UserRegistrationComplete} />\r\n        <Route exact path=\"/message\" component={Message} />\r\n        <Route exact path=\"/postpage\" component={PostPage} />\r\n        <Route exact path=\"/infomation\" component={Infomation} />\r\n        <Route exact path=\"/question\" component={Question} />\r\n        <Route exact path=\"/inquiry\" component={Inquiry} />\r\n        <Route exact path=\"/terms\" component={Terms} />\r\n        <Route exact path=\"/privacypolicy\" component={PrivacyPolicy} />\r\n        <Route exact path=\"/test\" component={Test} />\r\n\r\n        {/* <Route component={Page404} /> */}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\nexport default App;\r\n","import React        from 'react';\r\nimport ReactDOM     from 'react-dom';\r\nimport App          from './App';\r\nimport { Provider } from \"react-redux\"\r\nimport store        from \"./store/index\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}